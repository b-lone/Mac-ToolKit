/*
    This file is AUTOGENERATED - DO NOT EDIT, or your changes will be lost
    Copyright 2020 Cisco Systems
*/

#include "DefaultTheme.h"

#include <algorithm>
#include <utility>


namespace SemanticVisuals
{
    DefaultTheme::DefaultTheme(std::shared_ptr<Colors> colors) : mColors(std::move(colors))
    {

        auto color = [this](const std::string& name) { return *mColors->getColor(name); };

        mThemeColors.emplace_back(Token::OverlayPrimary, "overlay-primary",
            ColorSet{color("white-100-alpha-90")});
        mThemeColors.emplace_back(Token::OverlaySecondary, "overlay-secondary",
            ColorSet{color("white-100-alpha-40")});
        mThemeColors.emplace_back(Token::AvatarOverlay, "avatar-overlay",
            ColorSet{color("gray-100-alpha-40")});
        mThemeColors.emplace_back(Token::ListItemPrimary, "listItem-primary",
            ColorSet{color("transparent")}.setPressed(color("gray-20")).setHovered(color("gray-10")).setChecked(color("gray-20")).setFocused(color("gray-10")));
        mThemeColors.emplace_back(Token::ListItemSecondary, "listItem-secondary",
            ColorSet{color("transparent")}.setPressed(color("gray-20")).setHovered(color("gray-10")));
        mThemeColors.emplace_back(Token::ListItemTertiary, "listItem-tertiary",
            ColorSet{color("transparent")}.setPressed(color("gray-20")).setHovered(color("gray-20")));
        mThemeColors.emplace_back(Token::ListItemQuaternary, "listItem-quaternary",
            ColorSet{color("transparent")}.setPressed(color("gray-40")).setHovered(color("gray-30")));
        mThemeColors.emplace_back(Token::MessageListItem, "message-listItem",
            ColorSet{color("transparent")}.setPressed(color("blue-10")).setHovered(color("gray-10")).setChecked(color("blue-05")));
        mThemeColors.emplace_back(Token::AlertBackgroundDefault, "alertBackground-default",
            ColorSet{color("blue-10")});
        mThemeColors.emplace_back(Token::AlertBackgroundError, "alertBackground-error",
            ColorSet{color("red-10")});
        mThemeColors.emplace_back(Token::AlertBackgroundSuccess, "alertBackground-success",
            ColorSet{color("green-10")});
        mThemeColors.emplace_back(Token::AlertBackgroundWarning, "alertBackground-warning",
            ColorSet{color("yellow-10")});
        mThemeColors.emplace_back(Token::AlertTextDefault, "alertText-default",
            ColorSet{color("blue-70")});
        mThemeColors.emplace_back(Token::AlertTextError, "alertText-error",
            ColorSet{color("red-70")});
        mThemeColors.emplace_back(Token::AlertTextSuccess, "alertText-success",
            ColorSet{color("green-70")});
        mThemeColors.emplace_back(Token::AlertTextWarning, "alertText-warning",
            ColorSet{color("yellow-70")});
        mThemeColors.emplace_back(Token::BackgroundPrimary, "background-primary",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::WxAddParticipantsButtonInCallIcon, "wx-addParticipantsButtonInCall-icon",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::BackgroundSecondary, "background-secondary",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::BackgroundTertiary, "background-tertiary",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::BackgroundQuaternary, "background-quaternary",
            ColorSet{color("gray-20")});
        mThemeColors.emplace_back(Token::BackgroundContrary, "background-contrary",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::PopoverBackground, "popover-background",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::PopoverBackgroundCoachmark, "popover-background-coachmark",
            ColorSet{color("cobalt-70")});
        mThemeColors.emplace_back(Token::PopoverCoachmarkText, "popover-coachmark-text",
            ColorSet{color("gray-05")}.setPressed(color("cobalt-70")).setHovered(color("cobalt-70")));
        mThemeColors.emplace_back(Token::PopoverCoachmarkButton, "popover-coachmark-button",
            ColorSet{color("cobalt-70")}.setPressed(color("gray-20")).setHovered(color("gray-05")));
        mThemeColors.emplace_back(Token::ButtonPrimary, "button-primary",
            ColorSet{color("blue-60")}.setPressed(color("blue-80")).setHovered(color("blue-70")).setChecked(color("blue-80")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::ButtonPrimaryOutline, "button-primary-outline",
            ColorSet{color("blue-60")}.setPressed(color("blue-80")).setHovered(color("blue-70")).setChecked(color("blue-80")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::ButtonOutlinePrimaryBackground, "buttonOutline-primary-background",
            ColorSet{color("transparent")}.setPressed(color("blue-80")).setHovered(color("blue-70")).setChecked(color("blue-80")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::ButtonOutlinePrimary, "buttonOutline-primary",
            ColorSet{color("blue-70")}.setPressed(color("blue-80")).setChecked(color("blue-80")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::ButtonOutlineTextPrimary, "buttonOutlineText-primary",
            ColorSet{color("blue-70")}.setPressed(color("gray-05")).setHovered(color("gray-05")).setChecked(color("gray-05")).setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::ButtonSecondary, "button-secondary",
            ColorSet{color("gray-20")}.setPressed(color("gray-40")).setHovered(color("gray-30")).setChecked(color("gray-40")));
        mThemeColors.emplace_back(Token::ButtonSecondaryOutline, "button-secondary-outline",
            ColorSet{color("gray-20")}.setPressed(color("gray-40")).setHovered(color("gray-30")).setChecked(color("gray-40")));
        mThemeColors.emplace_back(Token::ButtonOutlineSecondaryBackground, "buttonOutline-secondary-background",
            ColorSet{color("transparent")}.setPressed(color("gray-40")).setHovered(color("gray-30")).setChecked(color("gray-40")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::ButtonOutlineSecondary, "buttonOutline-secondary",
            ColorSet{color("gray-30")}.setPressed(color("gray-40")).setChecked(color("gray-40")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::ButtonOutlineTextSecondary, "buttonOutlineText-secondary",
            ColorSet{color("gray-100")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::ButtonTertiary, "button-tertiary",
            ColorSet{color("gray-20")}.setPressed(color("gray-40")).setHovered(color("gray-30")).setChecked(color("gray-40")));
        mThemeColors.emplace_back(Token::ButtonCancel, "button-cancel",
            ColorSet{color("red-60")}.setPressed(color("red-80")).setHovered(color("red-70")).setChecked(color("red-80")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::ButtonCancelOutline, "button-cancel-outline",
            ColorSet{color("red-60")}.setPressed(color("red-80")).setHovered(color("red-70")).setChecked(color("red-80")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::ButtonTextCancel, "buttonText-cancel",
            ColorSet{color("gray-05")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::ButtonOutlineCancel, "buttonOutline-cancel",
            ColorSet{color("transparent")}.setPressed(color("red-80")).setHovered(color("red-70")).setChecked(color("red-80")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::ButtonOutlineBorderCancel, "buttonOutlineBorder-cancel",
            ColorSet{color("red-70")}.setPressed(color("red-80")).setChecked(color("red-80")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::ButtonOutlineTextCancel, "buttonOutlineText-cancel",
            ColorSet{color("red-70")}.setPressed(color("gray-05")).setHovered(color("gray-05")).setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::ButtonQuaternary, "button-quaternary",
            ColorSet{color("gray-80")}.setPressed(color("gray-100")).setHovered(color("gray-90")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::ButtonGhost, "button-ghost",
            ColorSet{color("transparent")}.setPressed(color("gray-40")).setHovered(color("gray-30")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::ButtonGhostOutline, "button-ghost-outline",
            ColorSet{color("transparent")});
        mThemeColors.emplace_back(Token::ButtonGhostTransparent, "button-ghost-transparent",
            ColorSet{color("transparent")}.setPressed(color("gray-40")).setHovered(color("gray-30")));
        mThemeColors.emplace_back(Token::ButtonCallPrimary, "buttonCall-primary",
            ColorSet{color("gray-80")}.setPressed(color("gray-95")).setHovered(color("gray-90")).setChecked(color("gray-95")).setDisabled(color("gray-90")));
        mThemeColors.emplace_back(Token::ButtonCallSecondary, "buttonCall-secondary",
            ColorSet{color("red-60")}.setPressed(color("red-80")).setHovered(color("red-70")).setChecked(color("red-80")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::ButtonJoinPrimary, "buttonJoin-primary",
            ColorSet{color("green-60")}.setPressed(color("green-80")).setHovered(color("green-70")).setChecked(color("green-80")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::ButtonJoinPrimaryOutline, "buttonJoin-primary-outline",
            ColorSet{color("green-60")}.setPressed(color("green-80")).setHovered(color("green-70")).setChecked(color("green-80")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::ButtonJoinBorderPrimary, "buttonJoinBorder-primary",
            ColorSet{color("green-60")}.setPressed(color("green-80")).setHovered(color("green-70")).setChecked(color("green-80")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::FocusBorder, "focus-border",
            ColorSet{color("transparent")}.setFocused(color("black")));
        mThemeColors.emplace_back(Token::ButtonTextPrimary, "buttonText-primary",
            ColorSet{color("gray-05")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::ButtonTextSecondary, "buttonText-secondary",
            ColorSet{color("gray-100")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::ButtonTextTertiary, "buttonText-tertiary",
            ColorSet{color("gray-100")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::ButtonTextQuaternary, "buttonText-quaternary",
            ColorSet{color("gray-05")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::ButtonTextGhost, "buttonText-ghost",
            ColorSet{color("gray-100")}.setChecked(color("blue-70")).setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::ButtonOutlineJoin, "button-outline-join",
            ColorSet{color("green-70")});
        mThemeColors.emplace_back(Token::InputBackground, "inputBackground",
            ColorSet{color("white")}.setPressed(color("gray-30")).setHovered(color("gray-20")).setFocused(color("gray-20")).setDisabled(color("gray-10")));
        mThemeColors.emplace_back(Token::SignInInputBackground, "signIn-inputBackground",
            ColorSet{color("white")}.setPressed(color("gray-30")).setHovered(color("gray-20")).setDisabled(color("gray-10")));
        mThemeColors.emplace_back(Token::SignInInputOutline, "signIn-inputOutline",
            ColorSet{color("gray-30")}.setFocused(color("gray-40")).setDisabled(color("gray-10")));
        mThemeColors.emplace_back(Token::InputBackgroundError, "inputBackground-error",
            ColorSet{color("red-05")});
        mThemeColors.emplace_back(Token::InputOutlineError, "inputOutline-error",
            ColorSet{color("red-50")});
        mThemeColors.emplace_back(Token::InputBackgroundWarning, "inputBackground-warning",
            ColorSet{color("yellow-05")});
        mThemeColors.emplace_back(Token::InputOutlineWarning, "inputOutline-warning",
            ColorSet{color("yellow-40")});
        mThemeColors.emplace_back(Token::InputTextWarning, "inputText-warning",
            ColorSet{color("yellow-70")});
        mThemeColors.emplace_back(Token::BackgroundGradientStart, "background-gradient-start",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::BackgroundGradientEnd, "background-gradient-end",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::ContentGradientStart, "content-gradient-start",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::ContentGradientEnd, "content-gradient-end",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::InputOutline, "inputOutline",
            ColorSet{color("gray-30")}.setPressed(color("gray-40")).setHovered(color("gray-40")).setFocused(color("gray-40")).setDisabled(color("gray-10")));
        mThemeColors.emplace_back(Token::InputTextPrimary, "inputText-primary",
            ColorSet{color("gray-100")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::InputTextSecondary, "inputText-secondary",
            ColorSet{color("gray-70")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxInputTextSecondaryInverted, "wx-inputText-secondary-inverted",
            ColorSet{color("gray-70")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::InputTextError, "inputText-error",
            ColorSet{color("red-70")});
        mThemeColors.emplace_back(Token::InputFocusRing, "input-focusRing",
            ColorSet{color("blue-60")});
        mThemeColors.emplace_back(Token::ModalDecorativeButtonPrimary, "modal-decorative-button-primary",
            ColorSet{color("gray-80")}.setPressed(color("gray-100")).setHovered(color("gray-90")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::ModalDecorativeButtonText, "modal-decorative-button-text",
            ColorSet{color("blue-70")}.setPressed(color("blue-90")).setHovered(color("blue-80")));
        mThemeColors.emplace_back(Token::ModalDecorativeButtonSecondary, "modal-decorative-button-secondary",
            ColorSet{color("gray-80")}.setPressed(color("gray-100")).setHovered(color("gray-90")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::ModalDecorativeButtonTextPrimary, "modal-decorative-button-text-primary",
            ColorSet{color("gray-05")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::ModalDecorativeButtonTextSecondary, "modal-decorative-button-text-secondary",
            ColorSet{color("gray-05")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::ModalDecorativeBackgroundPrimarySlate, "modal-decorativeBackground-primary-slate",
            ColorSet{color("slate-30")});
        mThemeColors.emplace_back(Token::ModalDecorativeBackgroundPrimaryGold, "modal-decorativeBackground-primary-gold",
            ColorSet{color("gold-20")});
        mThemeColors.emplace_back(Token::ModalDecorativeBackgroundPrimaryViolet, "modal-decorativeBackground-primary-violet",
            ColorSet{color("violet-30")});
        mThemeColors.emplace_back(Token::ModalDecorativeBackgroundPrimaryMint, "modal-decorativeBackground-primary-mint",
            ColorSet{color("mint-30")});
        mThemeColors.emplace_back(Token::ModalDecorativeBackgroundPrimaryGreen, "modal-decorativeBackground-primary-green",
            ColorSet{color("green-10")});
        mThemeColors.emplace_back(Token::ModalDecorativeBackgroundPrimaryCobalt, "modal-decorativeBackground-primary-cobalt",
            ColorSet{color("cobalt-20")});
        mThemeColors.emplace_back(Token::ModalDecorativeBackgroundPrimaryBlue, "modal-decorativeBackground-primary-blue",
            ColorSet{color("blue-20")});
        mThemeColors.emplace_back(Token::ModalDecorativeBackgroundSecondarySlate, "modal-decorativeBackground-secondary-slate",
            ColorSet{color("slate-10")});
        mThemeColors.emplace_back(Token::ModalDecorativeBackgroundSecondaryYellow, "modal-decorativeBackground-secondary-yellow",
            ColorSet{color("yellow-05")});
        mThemeColors.emplace_back(Token::ModalDecorativeBackgroundSecondaryViolet, "modal-decorativeBackground-secondary-violet",
            ColorSet{color("violet-10")});
        mThemeColors.emplace_back(Token::ModalDecorativeTitleSlate, "modal-decorativeTitle-slate",
            ColorSet{color("slate-50")});
        mThemeColors.emplace_back(Token::ModalDecorativeTitleGold, "modal-decorativeTitle-gold",
            ColorSet{color("gold-50")});
        mThemeColors.emplace_back(Token::ModalDecorativeTitleViolet, "modal-decorativeTitle-violet",
            ColorSet{color("violet-50")});
        mThemeColors.emplace_back(Token::ModalDecorativeTitleMint, "modal-decorativeTitle-mint",
            ColorSet{color("mint-50")});
        mThemeColors.emplace_back(Token::ModalDecorativeTitleGreen, "modal-decorativeTitle-green",
            ColorSet{color("green-50")});
        mThemeColors.emplace_back(Token::ModalDecorativeTitleCobalt, "modal-decorativeTitle-cobalt",
            ColorSet{color("cobalt-50")});
        mThemeColors.emplace_back(Token::ModalTextPrimary, "modal-text-primary",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::ModalTextSecondary, "modal-text-secondary",
            ColorSet{color("gray-70")});
        mThemeColors.emplace_back(Token::TextHighlight, "text-highlight",
            ColorSet{color("blue-20")});
        mThemeColors.emplace_back(Token::TextHyperlink, "text-hyperlink",
            ColorSet{color("blue-70")}.setPressed(color("blue-90")).setHovered(color("blue-90")).setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::TextPrimary, "text-primary",
            ColorSet{color("gray-100")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::TextSecondary, "text-secondary",
            ColorSet{color("gray-70")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::LegacySeparatorPrimary, "legacy-separator-primary",
            ColorSet{color("gray-20")});
        mThemeColors.emplace_back(Token::LegacySeparatorSecondary, "legacy-separator-secondary",
            ColorSet{color("gray-40")});
        mThemeColors.emplace_back(Token::FooterBackground, "footer-background",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::EditSpaceSettingsButton, "edit-space-settings-button",
            ColorSet{color("transparent")}.setPressed(color("gold-40")).setHovered(color("gold-30")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::EditSpaceSettingsButtonText, "edit-space-settings-buttonText",
            ColorSet{color("gold-70")}.setPressed(color("gray-100")).setHovered(color("gray-100")).setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::EditSpaceSettingsButtonBorder, "edit-space-settings-buttonBorder",
            ColorSet{color("gold-70")}.setPressed(color("gold-40")).setHovered(color("gold-30")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WhiteboardStickyNoteYellow, "whiteboard-stickyNote-yellow",
            ColorSet{color("yellow-30")});
        mThemeColors.emplace_back(Token::ScrollbarBackgroundGutter, "scrollbar-backgroundGutter",
            ColorSet{color("black-100-alpha-11")});
        mThemeColors.emplace_back(Token::WxKeyboardactionBackground, "wx-keyboardaction-background",
            ColorSet{color("gray-95")});
        mThemeColors.emplace_back(Token::WxKeyboardactionBorder, "wx-keyboardaction-border",
            ColorSet{color("gray-80")});
        mThemeColors.emplace_back(Token::WxKeyboardactionLabelText, "wx-keyboardaction-label-text",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxCallWindowContainerBackground, "wx-callWindowContainer-background",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxCallWindowContentBackground, "wx-callWindowContent-background",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::WxApplicationHeaderUserDeviceButtonText, "wx-applicationHeaderUserDeviceButton-text",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxAudioSelectionItemBackground, "wx-audioSelectionItem-background",
            ColorSet{color("white-100")}.setHovered(color("blue-05")).setChecked(color("blue-05")));
        mThemeColors.emplace_back(Token::WxAudioSelectionItemInternalText, "wx-audioSelectionItemInternal-text",
            ColorSet{color("blue-50")});
        mThemeColors.emplace_back(Token::WxAudioSelectionItemVariantText, "wx-audioSelectionItemVariant-text",
            ColorSet{color("gray-60")});
        mThemeColors.emplace_back(Token::WxAudioVideoDeviceWarnIconBorder, "wx-audioVideoDeviceWarnIcon-border",
            ColorSet{color("yellow-50")});
        mThemeColors.emplace_back(Token::WxAuxDeviceButtonBorder, "wx-auxDeviceButton-border",
            ColorSet{color("black-100")});
        mThemeColors.emplace_back(Token::WxAuxDeviceItemBackground, "wx-auxDeviceItem-background",
            ColorSet{color("white-100")}.setHovered(color("blue-05")));
        mThemeColors.emplace_back(Token::WxAuxDeviceItemBorder, "wx-auxDeviceItem-border",
            ColorSet{color("gray-20")});
        mThemeColors.emplace_back(Token::WxAuxDeviceItemText, "wx-auxDeviceItem-text",
            ColorSet{color("gray-100")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxAuxDeviceItemCheckboxBackground, "wx-auxDeviceItemCheckbox-background",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxAuxDeviceItemCheckboxBorder, "wx-auxDeviceItemCheckbox-border",
            ColorSet{color("black-100")});
        mThemeColors.emplace_back(Token::WxAuxDeviceSelectorButtonText, "wx-auxDeviceSelectorButton-text",
            ColorSet{color("blue-40")});
        mThemeColors.emplace_back(Token::WxAuxDeviceUnknownItemText, "wx-auxDeviceUnknownItem-text",
            ColorSet{color("yellow-70")});
        mThemeColors.emplace_back(Token::WxAvatarMainAreaInnerRingBackground, "wx-avatarMainAreaInnerRing-background",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxButtonCallBackground, "wx-buttonCall-background",
            ColorSet{color("white")}.setPressed(color("gray-10")).setHovered(color("gray-05")).setChecked(color("gray-10")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxCallActivityDeviceIcon, "wx-callActivityDeviceIcon",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxCallingInterstitialPageBackground, "wx-callingInterstitialPage-background",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxCallMeCheckboxBackground, "wx-callMeCheckbox-background",
            ColorSet{color("blue-40")});
        mThemeColors.emplace_back(Token::WxCallSettingButtonStateIcon, "wx-callSettingButtonStateIcon",
            ColorSet{color("green-60")});
        mThemeColors.emplace_back(Token::WxContactCardViewButtonBackground, "wx-contactCardViewButton-background",
            ColorSet{color("gray-20")}.setPressed(color("gray-40")).setHovered(color("gray-30")).setDisabled(color("gray-05")));
        mThemeColors.emplace_back(Token::WxContactCardViewButtonIcon, "wx-contactCardViewButtonIcon",
            ColorSet{color("gray-50")});
        mThemeColors.emplace_back(Token::WxContactCardViewPhoneNumber, "wx-contactCardViewPhoneNumber",
            ColorSet{color("gray-90")});
        mThemeColors.emplace_back(Token::WxContentTabViewButtonText, "wx-contentTabViewButton-text",
            ColorSet{color("gray-100")}.setPressed(color("gray-05")).setHovered(color("white-100")).setChecked(color("white-100")).setDisabled(color("gray-50")));
        mThemeColors.emplace_back(Token::WxContentTabViewButtonCheckedText, "wx-contentTabViewButtonChecked-text",
            ColorSet{color("white-100")}.setDisabled(color("gray-50")));
        mThemeColors.emplace_back(Token::WxContentTabViewDropDownButton, "wx-contentTabViewDropDownButton",
            ColorSet{color("gray-05")}.setPressed(color("gray-30")).setHovered(color("gray-20")).setChecked(color("gray-30")).setFocused(color("gray-30")).setDisabled(color("gray-30")));
        mThemeColors.emplace_back(Token::WxContentTabViewFilesButton, "wx-contentTabViewFilesButton",
            ColorSet{color("transparent")}.setPressed(color("yellow-80")).setHovered(color("yellow-70")).setChecked(color("yellow-60")));
        mThemeColors.emplace_back(Token::WxContentTabViewFilesButtonChecked, "wx-contentTabViewFilesButtonChecked",
            ColorSet{color("yellow-60")}.setDisabled(color("transparent")));
        mThemeColors.emplace_back(Token::WxContentTabViewLinksButton, "wx-contentTabViewLinksButton",
            ColorSet{color("transparent")}.setPressed(color("violet-80")).setHovered(color("violet-70")).setChecked(color("violet-60")));
        mThemeColors.emplace_back(Token::WxContentTabViewLinksButtonChecked, "wx-contentTabViewLinksButtonChecked",
            ColorSet{color("violet-60")}.setDisabled(color("transparent")));
        mThemeColors.emplace_back(Token::WxContentTabViewRecordingsButton, "wx-contentTabViewRecordingsButton",
            ColorSet{color("transparent")}.setPressed(color("blue-80")).setHovered(color("blue-70")).setChecked(color("blue-60")));
        mThemeColors.emplace_back(Token::WxContentTabViewRecordingsButtonChecked, "wx-contentTabViewRecordingsButtonChecked",
            ColorSet{color("blue-60")}.setDisabled(color("transparent")));
        mThemeColors.emplace_back(Token::WxContentTabViewWhiteboardButton, "wx-contentTabViewWhiteboardButton",
            ColorSet{color("transparent")}.setPressed(color("purple-80")).setHovered(color("purple-70")).setChecked(color("purple-60")));
        mThemeColors.emplace_back(Token::WxContentTabViewWhiteboardButtonChecked, "wx-contentTabViewWhiteboardButtonChecked",
            ColorSet{color("purple-60")}.setDisabled(color("transparent")));
        mThemeColors.emplace_back(Token::WxContextMenuBackground, "wx-contextMenu-background",
            ColorSet{color("gray-10")}.setHovered(color("gray-20")));
        mThemeColors.emplace_back(Token::WxContextMenuText, "wx-contextMenu-text",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxPopupDropShadow, "wx-popupDropShadow",
            ColorSet{color("black-100-alpha-16")});
        mThemeColors.emplace_back(Token::WxDefaultBorder, "wx-default-border",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxDefaultText, "wx-default-text",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxDefaultInvertedColorText, "wx-default-invertedColor-text",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxDefaultTextWithPressedText, "wx-defaultTextWithPressed-text",
            ColorSet{color("gray-100")}.setPressed(color("gray-05")).setDisabled(color("gray-05")));
        mThemeColors.emplace_back(Token::WxFileBrickletBadgeBackground, "wx-fileBrickletBadge-background",
            ColorSet{color("white-100-alpha-60")});
        mThemeColors.emplace_back(Token::WxFileBrickletBadgeText, "wx-fileBrickletBadge-text",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxFileBrickletCloseButtonBackground, "wx-fileBrickletCloseButton-background",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxFileBrickletCloseButtonDataBackground, "wx-fileBrickletCloseButtonData-background",
            ColorSet{color("gray-60")}.setPressed(color("gray-70")).setDisabled(color("gray-05")));
        mThemeColors.emplace_back(Token::WxFileBrickletStagingBackground, "wx-fileBrickletStaging-background",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxBalloonBackground, "wx-balloon-background",
            ColorSet{color("gray-90")});
        mThemeColors.emplace_back(Token::WxBalloonBorder, "wx-balloon-border",
            ColorSet{color("gray-80")});
        mThemeColors.emplace_back(Token::WxBalloonText, "wx-balloon-text",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxFileBrickletStagingImageBackground, "wx-fileBrickletStagingImage-background",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxGiphyBackground, "wx-giphy-background",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxGiphyFocusBorderBackground, "wx-giphyFocusBorder-background",
            ColorSet{color("gray-10")}.setHovered(color("blue-30")).setFocused(color("blue-30")));
        mThemeColors.emplace_back(Token::WxGiphyIntegrationWidgetCancelSearchButtonBackground, "wx-giphyIntegrationWidgetCancelSearchButton-background",
            ColorSet{color("gray-60")});
        mThemeColors.emplace_back(Token::WxEmojiPickerSearchBackground, "wx-emojiPickerSearch-background",
            ColorSet{color("gray-10")}.setHovered(color("gray-20")));
        mThemeColors.emplace_back(Token::WxEmojiPickerSearchBorder, "wx-emojiPickerSearch-border",
            ColorSet{color("transparent")}.setFocused(color("blue-50")));
        mThemeColors.emplace_back(Token::WxEmojiPickerEmojiBackground, "wx-emojiPickerEmoji-background",
            ColorSet{color("white-100")}.setPressed(color("blue-10")).setHovered(color("blue-05")).setFocused(color("blue-10")));
        mThemeColors.emplace_back(Token::WxEmojiPickerSkinBackground, "wx-emojiPickerSkin-background",
            ColorSet{color("white-100")}.setPressed(color("gray-30")).setHovered(color("gray-20")).setChecked(color("gray-100")));
        mThemeColors.emplace_back(Token::WxEmojiPickerCategoryIcon, "wx-emojiPickerCategory-icon",
            ColorSet{color("gray-100")}.setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxEmojiPickerCategoryBorderTop, "wx-emojiPickerCategory-border-top",
            ColorSet{color("gray-20")}.setPressed(color("gray-30")).setChecked(color("gray-100")).setFocused(color("gray-100")));
        mThemeColors.emplace_back(Token::WxHeadingColorBackground, "wx-headingColor-background",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxHeadingColorText, "wx-headingColor-text",
            ColorSet{color("gray-90")});
        mThemeColors.emplace_back(Token::WxInputActionButtonBackground, "wx-inputActionButton-background",
            ColorSet{color("gray-80")}.setPressed(color("gray-95")).setHovered(color("gray-90")).setDisabled(color("gray-30")));
        mThemeColors.emplace_back(Token::WxInputBoxWidgetHasExternalParticipantBackground, "wx-inputBoxWidgetHasExternalParticipant-background",
            ColorSet{color("yellow-05")});
        mThemeColors.emplace_back(Token::WxInputBoxWidgetHasExternalParticipantBorder, "wx-inputBoxWidgetHasExternalParticipant-border",
            ColorSet{color("yellow-60")});
        mThemeColors.emplace_back(Token::WxClassificationInputBoxBackground, "wx-classificationInputBox-background",
            ColorSet{color("red-05")});
        mThemeColors.emplace_back(Token::WxErrorMessageBackground, "wx-errorMessage-background",
            ColorSet{color("red-05")});
        mThemeColors.emplace_back(Token::WxClassificationInputBoxBorder, "wx-classificationInputBox-border",
            ColorSet{color("red-40")});
        mThemeColors.emplace_back(Token::WxInputBoxWidgetWithoutExternalParticipantBorder, "wx-inputBoxWidgetWithoutExternalParticipant-border",
            ColorSet{color("blue-60")});
        mThemeColors.emplace_back(Token::WxLeaveSpaceButton, "wx-leaveSpaceButton",
            ColorSet{color("red-60")}.setDisabled(color("gray-30")));
        mThemeColors.emplace_back(Token::WxMenuItemButtonBackground, "wx-menuItemButton-background",
            ColorSet{color("white-100")}.setPressed(color("blue-10")).setHovered(color("blue-05")).setDisabled(color("gray-30")));
        mThemeColors.emplace_back(Token::WxMenuItemButtonText, "wx-menuItemButton-text",
            ColorSet{color("black-100")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxMarkButtonBackground, "wx-markButton-background",
            ColorSet{color("gray-60")});
        mThemeColors.emplace_back(Token::WxMessageHighlightsHeaderBackground, "wx-messageHighlights-header-background",
            ColorSet{color("blue-05")});
        mThemeColors.emplace_back(Token::WxMessageHighlightsHeaderText, "wx-messageHighlights-header-text",
            ColorSet{color("blue-80")});
        mThemeColors.emplace_back(Token::WxMessageHighlightsBorder, "wx-message-highlights-border",
            ColorSet{color("gray-20")});
        mThemeColors.emplace_back(Token::WxMessageHighlightsSignalBackground, "wx-messageHighlights-signalBackground",
            ColorSet{color("gray-30")}.setPressed(color("gray-40")).setHovered(color("gray-40")));
        mThemeColors.emplace_back(Token::WxMessageInputActionMarkDownButtonBackground, "wx-messageInputActionMarkDownButton-background",
            ColorSet{color("blue-40")}.setPressed(color("blue-60")).setHovered(color("blue-50")));
        mThemeColors.emplace_back(Token::WxMessageInputActionExternalParticipantButtonBackground, "wx-messageInputActionExternalParticipantButton-background",
            ColorSet{color("yellow-60")}.setDisabled(color("gray-05")));
        mThemeColors.emplace_back(Token::WxMessageInputActionClassificationLabelBackground, "wx-messageInputActionClassificationLabel-background",
            ColorSet{color("red-60")});
        mThemeColors.emplace_back(Token::WxMessageInputActionClassificationLabelBorder, "wx-messageInputActionClassificationLabel-border",
            ColorSet{color("red-60")});
        mThemeColors.emplace_back(Token::WxMessageInputActionClassificationLabelText, "wx-messageInputActionClassificationLabel-text",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxNativeMessageTextBackground, "wx-native-messageText-background",
            ColorSet{color("white-100")}.setHovered(color("blue-70")));
        mThemeColors.emplace_back(Token::WxOverlayBackground, "wx-overlay-background",
            ColorSet{color("black-100-alpha-75")});
        mThemeColors.emplace_back(Token::WxOverlayUserGuidance, "wx-overlay-userGuidance",
            ColorSet{color("gray-100-alpha-40")});
        mThemeColors.emplace_back(Token::WxAddParticipantsButtonBackground, "wx-addParticipantsButton-background",
            ColorSet{color("gray-10")}.setPressed(color("gray-20")).setHovered(color("gray-20")));
        mThemeColors.emplace_back(Token::WxAddParticipantsButtonBackgroundOutline, "wx-addParticipantsButton-background-outline",
            ColorSet{color("gray-10")}.setPressed(color("gray-20")).setHovered(color("gray-20")));
        mThemeColors.emplace_back(Token::WxAddParticipantsButtonIcon, "wx-addParticipantsButton-icon",
            ColorSet{color("gray-60")});
        mThemeColors.emplace_back(Token::WxExternalParticipantsBackground, "wx-externalParticipants-background",
            ColorSet{color("yellow-05")});
        mThemeColors.emplace_back(Token::WxExternalParticipantsText, "wx-externalParticipants-text",
            ColorSet{color("yellow-70")});
        mThemeColors.emplace_back(Token::WxQuoteWidgetBackground, "wx-quoteWidget-background",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxQuoteWidgetBarBackground, "wx-quoteWidgetBar-background",
            ColorSet{color("gray-60")});
        mThemeColors.emplace_back(Token::WxRichTextMarkDownButtonBackground, "wx-richTextMarkDownButton-background",
            ColorSet{color("blue-40")}.setPressed(color("blue-60")).setHovered(color("blue-50")).setDisabled(color("gray-05")));
        mThemeColors.emplace_back(Token::WxSearchBackground, "wx-search-background",
            ColorSet{color("gray-10")}.setPressed(color("gray-20")).setHovered(color("gray-20")).setFocused(color("gray-20")));
        mThemeColors.emplace_back(Token::WxSpaceTabsBackground, "wx-spaceTabs-background",
            ColorSet{color("white-100")}.setPressed(color("gray-10")).setHovered(color("gray-05")));
        mThemeColors.emplace_back(Token::WxSpaceTabsText, "wx-spaceTabs-text",
            ColorSet{color("gray-60")}.setPressed(color("gray-100")).setHovered(color("gray-100")).setChecked(color("gray-100")).setDisabled(color("gray-30")));
        mThemeColors.emplace_back(Token::WxSpaceTabsUnderline, "wx-spaceTabs-underline",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxSubheadingText, "wx-subheading-text",
            ColorSet{color("gray-70")}.setDisabled(color("gray-30")));
        mThemeColors.emplace_back(Token::WxSubheadingInvertedText, "wx-subheadingInverted-text",
            ColorSet{color("gray-70")});
        mThemeColors.emplace_back(Token::WxFavoriteIcon, "wx-favorite-icon",
            ColorSet{color("yellow-60")});
        mThemeColors.emplace_back(Token::WxSpaceActionsButtonBackground, "wx-spaceActionsButton-background",
            ColorSet{color("white-100")}.setHovered(color("blue-05")).setDisabled(color("gray-30")));
        mThemeColors.emplace_back(Token::WxSpaceActionsButtonText, "wx-spaceActionsButton-text",
            ColorSet{color("gray-90")}.setPressed(color("blue-60")).setDisabled(color("gray-30")));
        mThemeColors.emplace_back(Token::WxSpaceActionsButtonIcon, "wx-spaceActionsButton-icon",
            ColorSet{color("gray-100")}.setPressed(color("blue-40")).setChecked(color("blue-40")).setDisabled(color("gray-30")));
        mThemeColors.emplace_back(Token::WxSpinnerWithLabelBackground, "wx-spinnerWithLabel-background",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxSpinnerWithLabelText, "wx-spinnerWithLabel-text",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxTextInputBoxCodeBackground, "wx-textInputBoxCode-background",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxTextInputBoxLinkText, "wx-textInputBoxLink-text",
            ColorSet{color("blue-50")});
        mThemeColors.emplace_back(Token::WxTextInputBoxMessageText, "wx-textInputBoxMessage-text",
            ColorSet{color("gray-60")});
        mThemeColors.emplace_back(Token::WxBrickletAvatarErrorIconBackground, "wx-brickletAvatarErrorIcon-background",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxBrickletAvatarErrorIconBorder, "wx-brickletAvatarErrorIcon-border",
            ColorSet{color("red-60")});
        mThemeColors.emplace_back(Token::WxBrickletAvatarIconBackground, "wx-brickletAvatarIcon-background",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxBrickletItemBackground, "wx-brickletItem-background",
            ColorSet{color("gray-05")}.setPressed(color("gray-20")).setHovered(color("gray-10")).setFocused(color("gray-10")));
        mThemeColors.emplace_back(Token::WxBrickletItemHeaderText, "wx-brickletItemHeader-text",
            ColorSet{color("gray-70")}.setPressed(color("gray-100")));
        mThemeColors.emplace_back(Token::WxBrickletItemTimerText, "wx-brickletItemTimer-text",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxBrickletItemValidText, "wx-brickletItemValid-text",
            ColorSet{color("gray-90")});
        mThemeColors.emplace_back(Token::WxBrickletJoinButtonBackground, "wx-brickletJoinButton-background",
            ColorSet{color("green-60")}.setPressed(color("green-80")).setHovered(color("green-70")));
        mThemeColors.emplace_back(Token::WxBrickletJoinButtonIMOnlyBackground, "wx-brickletJoinButtonIMOnly-background",
            ColorSet{color("blue-50")});
        mThemeColors.emplace_back(Token::WxBrickletJoinButtonZSMBackground, "wx-brickletJoinButtonZSM-background",
            ColorSet{color("red-60")});
        mThemeColors.emplace_back(Token::WxBrickletJoinButtonZSMSharingBackground, "wx-brickletJoinButtonZSMSharing-background",
            ColorSet{color("blue-50")});
        mThemeColors.emplace_back(Token::WxBrickletJoinCallingBackground, "wx-brickletJoinCalling-background",
            ColorSet{color("green-60")});
        mThemeColors.emplace_back(Token::WxBrickletJoinedButtonBackground, "wx-brickletJoinedButton-background",
            ColorSet{color("green-60")});
        mThemeColors.emplace_back(Token::WxBrickletJoinedAdminButtonBackground, "wx-brickletJoinedAdminButton-background",
            ColorSet{color("gray-60")});
        mThemeColors.emplace_back(Token::WxBrickletNotificationIconBackground, "wx-brickletNotificationIcon-background",
            ColorSet{color("black-100")});
        mThemeColors.emplace_back(Token::WxFilteredListHeaderText, "wx-filteredListHeader-text",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxFilteredListBodyText, "wx-filteredListBody-text",
            ColorSet{color("gray-70")});
        mThemeColors.emplace_back(Token::WxMentionsHighlightText, "wx-mentionsHighlight-text",
            ColorSet{color("mint-70")});
        mThemeColors.emplace_back(Token::WxIncomingMessageToastReplyLabel, "wx-incomingMessageToast-replyLabel",
            ColorSet{color("blue-70")});
        mThemeColors.emplace_back(Token::WxIncomingMessageToastFileLabel, "wx-incomingMessageToast-fileLabel",
            ColorSet{color("yellow-70")});
        mThemeColors.emplace_back(Token::MainListIndicator, "mainList-indicator",
            ColorSet{color("blue-60")});
        mThemeColors.emplace_back(Token::WxMediaOptionTitleFontColor, "wx-MediaOptionTitleFontColor",
            ColorSet{color("black-100")});
        mThemeColors.emplace_back(Token::WxPreviewBackgroundButton, "wx-PreviewBackgroundButton",
            ColorSet{color("gray-05")}.setPressed(color("gray-20")).setHovered(color("gray-10")).setChecked(color("gray-20")).setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxAddNewTeamButtonBackground, "wx-addNewTeamButton-background",
            ColorSet{color("white-100")}.setPressed(color("gray-20")).setHovered(color("gray-10")));
        mThemeColors.emplace_back(Token::WxAddNewTeamButtonBorder, "wx-addNewTeamButton-border",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxAddNewTeamButtonIcon, "wx-addNewTeamButtonIcon",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxCallPullButtonBackground, "wx-callPullButton-background",
            ColorSet{color("gray-20")}.setPressed(color("gray-30")));
        mThemeColors.emplace_back(Token::WxParticipantsListDelegateBackground, "wx-participantsListDelegate-background",
            ColorSet{color("white")}.setPressed(color("blue-10")).setHovered(color("blue-05")));
        mThemeColors.emplace_back(Token::WxNewParticipantsListDelegateBackground, "wx-new-participantsListDelegate-background",
            ColorSet{color("transparent")}.setPressed(color("gray-20")).setHovered(color("gray-10")).setFocused(color("gray-10")));
        mThemeColors.emplace_back(Token::WxPlusButtonBackground, "wx-plusButton-background",
            ColorSet{color("gray-20")}.setPressed(color("gray-30")));
        mThemeColors.emplace_back(Token::WxPlusButtonSecColumnBackground, "wx-plusButtonSecColumn-background",
            ColorSet{color("gray-20")}.setPressed(color("gray-40")).setHovered(color("gray-30")));
        mThemeColors.emplace_back(Token::WxPlusButtonBorder, "wx-plusButton-border",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxPlusButtonSecColumnBorder, "wx-plusButtonSecColumn-border",
            ColorSet{color("gray-20")});
        mThemeColors.emplace_back(Token::WxPlusButtonIcon, "wx-plusButtonIcon",
            ColorSet{color("gray-90")});
        mThemeColors.emplace_back(Token::WxPlusButtonSecColumnIcon, "wx-plusButtonSecColumnIcon",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxPlusButtonThirdColumnBackground, "wx-plusButtonThirdColumn-background",
            ColorSet{color("gray-80")}.setPressed(color("gray-60")).setHovered(color("gray-70")).setChecked(color("gray-70")));
        mThemeColors.emplace_back(Token::WxPlusButtonThirdColumnIcon, "wx-plusButtonThirdColumnIcon",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxProgressbar, "wx-progressbar",
            ColorSet{color("gray-20")}.setChecked(color("blue-50")));
        mThemeColors.emplace_back(Token::WxPhoneNumberRefreshButton, "wx-phoneNumberRefreshButton",
            ColorSet{color("gray-70")}.setPressed(color("blue-80")).setHovered(color("blue-70")).setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxConversationActivitiesShareButton, "wx-conversationActivitiesShareButton",
            ColorSet{color("blue-60")}.setPressed(color("blue-80")).setHovered(color("blue-70")));
        mThemeColors.emplace_back(Token::WxConversationActivitiesShareButtonOutline, "wx-conversationActivitiesShareButtonOutline",
            ColorSet{color("blue-60")}.setPressed(color("blue-80")).setHovered(color("blue-70")));
        mThemeColors.emplace_back(Token::WxConversationActivitiesCallButton, "wx-conversationActivitiesCallButton",
            ColorSet{color("black-100")}.setPressed(color("green-60")).setHovered(color("green-50")).setDisabled(color("gray-05")));
        mThemeColors.emplace_back(Token::WxConversationsHeaderText, "wx-conversationsHeader-text",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxConversationsSubHeaderText, "wx-conversationsSubHeader-text",
            ColorSet{color("gray-60")});
        mThemeColors.emplace_back(Token::WxInputBoxWidgetMentionsText, "wx-inputBoxWidgetMentions-text",
            ColorSet{color("blue-50")});
        mThemeColors.emplace_back(Token::WxValidIcon, "wx-validIcon",
            ColorSet{color("blue-50")});
        mThemeColors.emplace_back(Token::WxInvalidIcon, "wx-invalidIcon",
            ColorSet{color("red-60")});
        mThemeColors.emplace_back(Token::WxUrgentIcon, "wx-urgentIcon",
            ColorSet{color("red-60")});
        mThemeColors.emplace_back(Token::WxErrorText, "wx-errorText",
            ColorSet{color("red-50")});
        mThemeColors.emplace_back(Token::WxCallPickupErrorBackground, "wx-callPickupError-background",
            ColorSet{color("yellow-05")});
        mThemeColors.emplace_back(Token::WxCallPickupErrorText, "wx-callPickupError-text",
            ColorSet{color("yellow-60")});
        mThemeColors.emplace_back(Token::WxOtherPickupBackground, "wx-otherPickup-background",
            ColorSet{color("white-100")}.setPressed(color("green-80")).setHovered(color("green-70")).setChecked(color("green-80")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxOtherPickupText, "wx-otherPickup-text",
            ColorSet{color("green-60")}.setPressed(color("white-100")).setHovered(color("white-100")).setChecked(color("white-100")));
        mThemeColors.emplace_back(Token::WxCallForwardItemBrushBackground, "wx-callForwardItemBrush-background",
            ColorSet{color("white")}.setHovered(color("blue-05")));
        mThemeColors.emplace_back(Token::WxCallForwardListItemBrushBackground, "wx-callForwardListItemBrush-background",
            ColorSet{color("white")}.setPressed(color("blue-05")).setHovered(color("gray-20")));
        mThemeColors.emplace_back(Token::WxCallMeConnectionRectPenBackground, "wx-callMeConnectionRectPen-background",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxCallPreferencesButtonIcon, "wx-callPreferencesButtonIcon",
            ColorSet{color("green-60")}.setPressed(color("green-80")).setHovered(color("green-70")).setDisabled(color("white-100")));
        mThemeColors.emplace_back(Token::WxDefaultOnSecondColumnText, "wx-defaultOnSecondColumn-text",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxCustomStatusEmojiButton, "wx-customStatusEmojiButton",
            ColorSet{color("gray-60")}.setFocused(color("blue-60")));
        mThemeColors.emplace_back(Token::WxSearchPlaceholderText, "wx-searchPlaceholder-text",
            ColorSet{color("gray-50")});
        mThemeColors.emplace_back(Token::WxAvatarMenuItemIcon, "wx-avatarMenuItemIcon",
            ColorSet{color("gray-60")}.setPressed(color("blue-60")).setHovered(color("blue-50")).setChecked(color("blue-60")));
        mThemeColors.emplace_back(Token::WxMenuListBackground, "wx-menuList-background",
            ColorSet{color("white-100")}.setPressed(color("blue-05")).setHovered(color("blue-05")).setFocused(color("blue-05")));
        mThemeColors.emplace_back(Token::WxControlButtonTransitioningBackground, "wx-controlButtonTransitioning-background",
            ColorSet{color("gray-60")});
        mThemeColors.emplace_back(Token::WxLineEditBorder, "wx-lineEdit-border",
            ColorSet{color("gray-10")}.setFocused(color("blue-40")));
        mThemeColors.emplace_back(Token::WxLineEditErrorBorder, "wx-lineEditError-border",
            ColorSet{color("red-60")});
        mThemeColors.emplace_back(Token::WxDefaultCheckbox, "wx-default-checkbox",
            ColorSet{color("gray-100")}.setHovered(color("blue-50")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::CheckboxCheckedBackground, "checkbox-checked-background",
            ColorSet{color("transparent")});
        mThemeColors.emplace_back(Token::CheckboxBackground, "checkbox-background",
            ColorSet{color("transparent")});
        mThemeColors.emplace_back(Token::CheckboxIndicator, "checkbox-indicator",
            ColorSet{color("gray-100")}.setHovered(color("blue-50")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxFourthColumnInnerRingBackground, "wx-fourthColumnInnerRing-background",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxPlaceHolderText, "wx-placeHolder-text",
            ColorSet{color("gray-60")});
        mThemeColors.emplace_back(Token::WxSearchButtonColorsBackground, "wx-searchButtonColors-background",
            ColorSet{color("gray-10")}.setPressed(color("gray-20")).setHovered(color("gray-20")));
        mThemeColors.emplace_back(Token::WxSearchInputBoxContainerIcon, "wx-searchInputBoxContainer-icon",
            ColorSet{color("black-100")});
        mThemeColors.emplace_back(Token::WxSearchItemAvatarInnerRingBackground, "wx-searchItemAvatarInnerRing-background",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxSearchItemContactItemHighlightedText, "wx-searchItemContactItemHighlighted-text",
            ColorSet{color("gray-60")});
        mThemeColors.emplace_back(Token::WxSearchItemSelectedContactAvatarInnerRingBackground, "wx-searchItemSelectedContactAvatarInnerRing-background",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxSearchItemDelegateEmptySeparatorExistBackground, "wx-searchItemDelegateEmptySeparatorExist-background",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxSearchItemJoinButtonBackground, "wx-searchItemJoinButton-background",
            ColorSet{color("green-40")});
        mThemeColors.emplace_back(Token::WxSearchItemMentionItemHighlightedText, "wx-searchItemMentionItemHighlighted-text",
            ColorSet{color("blue-50")});
        mThemeColors.emplace_back(Token::WxSearchItemNewSpaceItemPenAndBrush, "wx-searchItemNewSpaceItemPenAndBrush",
            ColorSet{color("blue-60")});
        mThemeColors.emplace_back(Token::WxSearchItemModifierTypeFillPath, "wx-searchItemModifierTypeFillPath",
            ColorSet{color("blue-40")});
        mThemeColors.emplace_back(Token::WxSearchItemModifierTypeItemPen, "wx-searchItemModifierTypeItemPen",
            ColorSet{color("blue-50")});
        mThemeColors.emplace_back(Token::WxSearchItemText, "wx-searchItem-text",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxSearchItemDelegatorMoreButtonBackground, "wx-searchItemDelegatorMoreButton-background",
            ColorSet{color("blue-50")});
        mThemeColors.emplace_back(Token::WxSearchModifierInputPathBackground, "wx-searchModifierInputPath-background",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxSearchModifierInputText, "wx-searchModifierInput-Text",
            ColorSet{color("black-100")});
        mThemeColors.emplace_back(Token::WxSearchPeoplePresenceText, "wx-searchPeoplePresence-text",
            ColorSet{color("gray-60")});
        mThemeColors.emplace_back(Token::WxSearchResultListImageBackground, "wx-searchResultListImage-background",
            ColorSet{color("gray-20")});
        mThemeColors.emplace_back(Token::WxSearchResultSeparatorBackground, "wx-searchResultSeparator-background",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxSpaceListText, "wx-spaceList-text",
            ColorSet{color("gray-60")}.setPressed(color("black-100")));
        mThemeColors.emplace_back(Token::WxSpaceListSubHeadingText, "wx-spaceListSubHeading-text",
            ColorSet{color("gray-90")});
        mThemeColors.emplace_back(Token::WxGhDropShadow, "wx-ghDropShadow",
            ColorSet{color("black-100-alpha-08")});
        mThemeColors.emplace_back(Token::AppHeader, "appHeader",
            ColorSet{color("gray-90")});
        mThemeColors.emplace_back(Token::AppHeaderBorder, "appHeader-border",
            ColorSet{color("transparent")});
        mThemeColors.emplace_back(Token::AppHeaderButtonStatus, "appHeader-buttonStatus",
            ColorSet{color("transparent")}.setPressed(color("gray-100")).setHovered(color("gray-95")).setChecked(color("gray-100")));
        mThemeColors.emplace_back(Token::AppHeaderButtonDevice, "appHeader-buttonDevice",
            ColorSet{color("transparent")}.setPressed(color("gray-100")).setHovered(color("gray-95")).setChecked(color("gray-100")));
        mThemeColors.emplace_back(Token::AppHeaderButtonDeviceTextActive, "appHeader-buttonDevice-text-active",
            ColorSet{color("blue-40")}.setPressed(color("blue-20")).setHovered(color("blue-20")));
        mThemeColors.emplace_back(Token::WxGhUserDeviceText, "wx-ghUserDevice-text",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::AppHeaderText, "appHeader-text",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxGhCancelSearchButton, "wx-ghCancelSearchButton",
            ColorSet{color("gray-60")}.setPressed(color("gray-80")).setHovered(color("gray-70")));
        mThemeColors.emplace_back(Token::WxGhCancelSearchButtonText, "wx-ghCancelSearchButton-text",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxSearchItemWidget, "wx-searchItemWidget",
            ColorSet{color("gray-70")});
        mThemeColors.emplace_back(Token::WxSearchItemWidgetText, "wx-searchItemWidget-text",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxSearchItemWidgetIcon, "wx-searchItemWidget-icon",
            ColorSet{color("gray-10")}.setPressed(color("gray-40")).setHovered(color("gray-30")));
        mThemeColors.emplace_back(Token::WxCancelSearchButton, "wx-cancelSearchButton",
            ColorSet{color("gray-20")});
        mThemeColors.emplace_back(Token::WxCancelSearchButtonText, "wx-cancelSearchButton-text",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxGhSearchInputBoxActiveBorder, "wx-ghSearchInputBoxActive-border",
            ColorSet{color("blue-50")});
        mThemeColors.emplace_back(Token::AppHeaderSearchBarOutlineActive, "appHeader-searchBar-outline-active",
            ColorSet{color("gray-80")});
        mThemeColors.emplace_back(Token::AppHeaderSearchBar, "appHeader-searchBar",
            ColorSet{color("gray-80")}.setPressed(color("gray-100")).setHovered(color("gray-95")));
        mThemeColors.emplace_back(Token::AppHeaderSearchBarActive, "appHeader-searchBar-active",
            ColorSet{color("gray-80")}.setPressed(color("gray-100")).setHovered(color("gray-95")));
        mThemeColors.emplace_back(Token::WxGhSearchInputBoxText, "wx-ghSearchInputBox-text",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxGhSearchInputBoxBackground, "wx-ghSearchInputBox-background",
            ColorSet{color("transparent")});
        mThemeColors.emplace_back(Token::WxGhSearchModifierBackground, "wx-ghSearchModifier-background",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxGhSearchModifierText, "wx-ghSearchModifier-text",
            ColorSet{color("black-100")});
        mThemeColors.emplace_back(Token::WxSearchInputBoxBorder, "wx-searchInputBox-border",
            ColorSet{color("gray-20")});
        mThemeColors.emplace_back(Token::WxSearchInputBoxBackground, "wx-searchInputBox-background",
            ColorSet{color("gray-20")});
        mThemeColors.emplace_back(Token::WxSearchInputBoxText, "wx-searchInputBox-text",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::AppHeaderButtonPlus, "appHeader-buttonPlus",
            ColorSet{color("transparent")}.setPressed(color("gray-60")).setHovered(color("gray-70")));
        mThemeColors.emplace_back(Token::AppHeaderButtonPlusIcon, "appHeader-buttonPlus-icon",
            ColorSet{color("gray-05")}.setDisabled(color("gray-70")));
        mThemeColors.emplace_back(Token::WxSearchFilterBackground, "wx-searchFilter-background",
            ColorSet{color("gray-20")}.setDisabled(color("white-100")));
        mThemeColors.emplace_back(Token::WxSearchFilterText, "wx-searchFilter-text",
            ColorSet{color("black-100")});
        mThemeColors.emplace_back(Token::WxSecondColumnBorder, "wx-secondColumn-border",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxNavigationIcon, "wx-navigationIcon",
            ColorSet{color("white-100")}.setPressed(color("blue-60")).setChecked(color("blue-60")));
        mThemeColors.emplace_back(Token::WxUpdateNavigationIcon, "wx-updateNavigationIcon",
            ColorSet{color("green-70")}.setPressed(color("green-90")).setHovered(color("green-80")));
        mThemeColors.emplace_back(Token::WxUCConnectionIndicatorTabIcon, "wx-uCConnectionIndicatorTab-icon",
            ColorSet{color("white-100")}.setPressed(color("yellow-40")).setChecked(color("yellow-40")));
        mThemeColors.emplace_back(Token::AppNavIcon, "appNav-icon",
            ColorSet{color("gray-100")}.setPressed(color("blue-60")).setChecked(color("blue-60")).setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxGhUpdateNavigationIcon, "wx-ghUpdateNavigationIcon",
            ColorSet{color("green-70")}.setPressed(color("green-90")).setHovered(color("green-80")));
        mThemeColors.emplace_back(Token::WxGlobalHeaderUCConnectionIndicatorTabIcon, "wx-globalHeaderUCConnectionIndicatorTab-icon",
            ColorSet{color("white-100")}.setPressed(color("yellow-40")).setChecked(color("yellow-40")));
        mThemeColors.emplace_back(Token::AppNavBadge, "appNav-badge",
            ColorSet{color("red-60")});
        mThemeColors.emplace_back(Token::AppNavBadgeText, "appNav-badge-text",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxUnreadCountCircleBackground, "wx-unreadCountCircle-background",
            ColorSet{color("red-60")});
        mThemeColors.emplace_back(Token::WxUnreadCountCircleText, "wx-unreadCountCircle-text",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::WxFallbackNavigationTabBorder, "wx-fallbackNavigationTab-border",
            ColorSet{color("blue-50")});
        mThemeColors.emplace_back(Token::AppNavBackground, "appNav-background",
            ColorSet{color("gray-10")}.setPressed(color("gray-20")).setHovered(color("gray-05")).setChecked(color("gray-20")));
        mThemeColors.emplace_back(Token::WxNavigationTabBackground, "wx-navigationTab-background",
            ColorSet{color("gray-100")}.setHovered(color("gray-95")));
        mThemeColors.emplace_back(Token::WxNavigationBackground, "wx-navigation-background",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxTabErrorIcon, "wx-tabError-icon",
            ColorSet{color("red-60")});
        mThemeColors.emplace_back(Token::WxNavigationTabFocusRectInverted, "wx-navigationTabFocusRectInverted",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxGhNavigationTabFocusRectInverted, "wx-ghNavigationTabFocusRectInverted",
            ColorSet{color("red-60")});
        mThemeColors.emplace_back(Token::WxProductNameTitleText, "wx-productNameTitle-text",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxTopBarMinimizeMaximizeButtonBackground, "wx-topBarMinimizeMaximizeButton-background",
            ColorSet{color("transparent")}.setPressed(color("white")).setHovered(color("gray-05")));
        mThemeColors.emplace_back(Token::WxTopBarMinimizeMaximizeButtonText, "wx-topBarMinimizeMaximizeButton-text",
            ColorSet{color("gray-60")});
        mThemeColors.emplace_back(Token::WxTopBarCloseButtonBackground, "wx-topBarCloseButton-background",
            ColorSet{color("transparent")}.setPressed(color("red-80")).setHovered(color("red-70")));
        mThemeColors.emplace_back(Token::WxTopBarCloseButtonText, "wx-topBarCloseButton-text",
            ColorSet{color("gray-60")}.setPressed(color("white")).setHovered(color("white")));
        mThemeColors.emplace_back(Token::WxGhTopBarMinimizeMaximizeButtonText, "wx-ghTopBarMinimizeMaximizeButton-text",
            ColorSet{color("gray-40")});
        mThemeColors.emplace_back(Token::WxGhTopBarCloseButtonBackground, "wx-ghTopBarCloseButton-background",
            ColorSet{color("transparent")}.setPressed(color("red-80")).setHovered(color("red-70")));
        mThemeColors.emplace_back(Token::WxGhTopBarCloseButtonText, "wx-ghTopBarCloseButton-text",
            ColorSet{color("gray-05")}.setPressed(color("white")).setHovered(color("white")));
        mThemeColors.emplace_back(Token::WxGhTitleText, "wx-ghTitle-text",
            ColorSet{color("gray-40")});
        mThemeColors.emplace_back(Token::WxGhText, "wx-gh-text",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxGhCancelSearchIcon, "wx-gh-cancelSearch-icon",
            ColorSet{color("gray-60")});
        mThemeColors.emplace_back(Token::WxGlobalFooterButtonBackground, "wx-globalFooterButton-background",
            ColorSet{color("transparent")}.setPressed(color("gray-30")).setHovered(color("gray-20")).setChecked(color("gray-30")));
        mThemeColors.emplace_back(Token::WxGlobalFooterButtonOutline, "wx-globalFooterButton-Outline",
            ColorSet{color("transparent")}.setPressed(color("gray-30")).setHovered(color("gray-20")).setChecked(color("gray-30")));
        mThemeColors.emplace_back(Token::WxGlobalFooterButtonText, "wx-globalFooterButton-Text",
            ColorSet{color("gray-100")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxGlobalFooterButtonTextFocus, "wx-globalFooterButton-Text-Focus",
            ColorSet{color("gray-100")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxGroupStateLinkButtonText, "wx-groupStateLinkButton-text",
            ColorSet{color("blue-50")});
        mThemeColors.emplace_back(Token::WxGroupStateLinkButtonSidebarText, "wx-groupStateLinkButtonSidebar-text",
            ColorSet{color("blue-50")});
        mThemeColors.emplace_back(Token::WxGroupBackedHelpCompleteText, "wx-groupBackedHelpComplete-text",
            ColorSet{color("black")});
        mThemeColors.emplace_back(Token::WxGroupBackedHelpCompleteBackground, "wx-groupBackedHelpComplete-background",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxGroupBackedHelpCompleteSidebarText, "wx-groupBackedHelpCompleteSidebar-text",
            ColorSet{color("black")});
        mThemeColors.emplace_back(Token::WxGroupBackedHelpCompleteSidebarBackground, "wx-groupBackedHelpCompleteSidebar-background",
            ColorSet{color("gray-20")});
        mThemeColors.emplace_back(Token::WxMultilineBadgeOneBackground, "wx-multilineBadgeOne-background",
            ColorSet{color("green-60")});
        mThemeColors.emplace_back(Token::WxMultilineBadgeTwoBackground, "wx-multilineBadgeTwo-background",
            ColorSet{color("cobalt-60")});
        mThemeColors.emplace_back(Token::WxMultilineBadgeThreeBackground, "wx-multilineBadgeThree-background",
            ColorSet{color("orange-60")});
        mThemeColors.emplace_back(Token::WxMultilineBadgeFourBackground, "wx-multilineBadgeFour-background",
            ColorSet{color("pink-60")});
        mThemeColors.emplace_back(Token::WxMultilineBadgeFiveBackground, "wx-multilineBadgeFive-background",
            ColorSet{color("olive-60")});
        mThemeColors.emplace_back(Token::WxMultilineBadgeSixBackground, "wx-multilineBadgeSix-background",
            ColorSet{color("cyan-60")});
        mThemeColors.emplace_back(Token::WxMultilineBadgeSevenBackground, "wx-multilineBadgeSeven-background",
            ColorSet{color("purple-60")});
        mThemeColors.emplace_back(Token::WxMultilineBadgeEightBackground, "wx-multilineBadgeEight-background",
            ColorSet{color("violet-60")});
        mThemeColors.emplace_back(Token::WxTransparentBorder, "wx-transparent-border",
            ColorSet{color("transparent")}.setFocused(color("gray-100")));
        mThemeColors.emplace_back(Token::WxCancelButtonText, "wx-cancelButton-text",
            ColorSet{color("gray-100")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxCancelButtonBackground, "wx-cancelButton-background",
            ColorSet{color("gray-20")}.setPressed(color("gray-40")).setHovered(color("gray-30")));
        mThemeColors.emplace_back(Token::WxCancelButtonBackgroundOutline, "wx-cancelButton-background-outline",
            ColorSet{color("gray-20")}.setPressed(color("gray-40")).setHovered(color("gray-30")));
        mThemeColors.emplace_back(Token::WxVoicemailPlayButtonBackground, "wx-voicemailPlayButton-background",
            ColorSet{color("blue-40")}.setPressed(color("blue-60")).setHovered(color("blue-50")).setDisabled(color("blue-10")));
        mThemeColors.emplace_back(Token::WxVoicemailPlaySliderBackground, "wx-voicemailPlaySlider-background",
            ColorSet{color("gray-30")});
        mThemeColors.emplace_back(Token::WxVoicemailPlaySliderBorder, "wx-voicemailPlaySlider-border",
            ColorSet{color("gray-30")});
        mThemeColors.emplace_back(Token::WxVoicemailPlaySliderHandleBackground, "wx-voicemailPlaySliderHandle-background",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxRecipientButtonBackground, "wx-recipientButton-background",
            ColorSet{color("gray-40")}.setPressed(color("gray-50")).setHovered(color("gray-50")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxRecipientWidgetBackground, "wx-recipientWidget-background",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxRecipientWidgetText, "wx-recipientWidget-text",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxRecipientWidgetScrollBarHandleBackground, "wx-recipientWidgetScrollBarHandle-background",
            ColorSet{color("gray-60")}.setPressed(color("gray-40")).setHovered(color("gray-50")));
        mThemeColors.emplace_back(Token::WxDeleteButtonBackground, "wx-deleteButton-background",
            ColorSet{color("red-60")}.setPressed(color("red-80")).setHovered(color("red-70")).setDisabled(color("gray-05")));
        mThemeColors.emplace_back(Token::WxComboBoxBackground, "wx-comboBox-background",
            ColorSet{color("transparent")}.setHovered(color("blue-20")));
        mThemeColors.emplace_back(Token::WxComboBoxBorder, "wx-comboBox-border",
            ColorSet{color("gray-20")}.setHovered(color("transparent")).setDisabled(color("transparent")));
        mThemeColors.emplace_back(Token::WxTeamsComboboxBackground, "wx-teams-combobox-background",
            ColorSet{color("white")}.setPressed(color("gray-30")).setHovered(color("gray-20")).setDisabled(color("gray-10")));
        mThemeColors.emplace_back(Token::WxTeamsComboboxBorder, "wx-teams-combobox-border",
            ColorSet{color("gray-30")}.setPressed(color("gray-40")).setFocused(color("gray-100")).setDisabled(color("gray-10")));
        mThemeColors.emplace_back(Token::WxTeamsComboboxText, "wx-teams-combobox-text",
            ColorSet{color("gray-70")}.setPressed(color("gray-100")).setFocused(color("gray-100")).setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxTeamsComboboxDropdownArrow, "wx-teams-combobox-dropdown-arrow",
            ColorSet{color("gray-100")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxVideoPreviewBorder, "wx-videoPreview-border",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxVideoPreviewTopBorder, "wx-videoPreviewTop-border",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxVideotoolbarBackground, "wx-videotoolbar-background",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxOptionsTabBackground, "wx-optionsTab-background",
            ColorSet{color("gray-05")}.setPressed(color("blue-60")).setHovered(color("gray-10")));
        mThemeColors.emplace_back(Token::WxMeetingListRowBackground, "wx-meetingListRow-background",
            ColorSet{color("gray-05")}.setPressed(color("gray-40")).setHovered(color("gray-10")).setFocused(color("gray-50")).setDisabled(color("gray-50")));
        mThemeColors.emplace_back(Token::WxDividerLineBackground, "wx-dividerLine-background",
            ColorSet{color("gray-20")});
        mThemeColors.emplace_back(Token::WxAuthLineEditBackground, "wx-authLineEdit-background",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxRecorderComboBoxBorder, "wx-recorder-comboBox-border",
            ColorSet{color("black-100-alpha-54")}.setDisabled(color("transparent")));
        mThemeColors.emplace_back(Token::WxRecorderTitleBackground, "wx-recorder-title-background",
            ColorSet{color("black-100-alpha-07")});
        mThemeColors.emplace_back(Token::WxRecorderOptionButtonBackground, "wx-recorder-option-button-background",
            ColorSet{color("transparent")}.setPressed(color("black-100-alpha-11")).setHovered(color("black-100-alpha-07")).setDisabled(color("black-100-alpha-11")));
        mThemeColors.emplace_back(Token::WxRecorderComboboxBackground, "wx-recorder-combobox-background",
            ColorSet{color("gray-10")}.setPressed(color("black-100-alpha-11")).setHovered(color("black-100-alpha-07")).setDisabled(color("black-100-alpha-11")));
        mThemeColors.emplace_back(Token::WxScrollbarBackground, "wx-scrollbar-background",
            ColorSet{color("transparent")}.setHovered(color("gray-10")));
        mThemeColors.emplace_back(Token::WxScrollbarHandle, "wx-scrollbarHandle",
            ColorSet{color("gray-20")}.setPressed(color("gray-40")).setHovered(color("gray-30")));
        mThemeColors.emplace_back(Token::WxScrollbarBackgroundSecondary, "wx-scrollbar-background-secondary",
            ColorSet{color("transparent")}.setHovered(color("gray-90")));
        mThemeColors.emplace_back(Token::WxScrollbarHandleSecondary, "wx-scrollbarHandle-secondary",
            ColorSet{color("gray-70")}.setPressed(color("gray-50")).setHovered(color("gray-60")));
        mThemeColors.emplace_back(Token::WxSliderBackground, "wx-slider-background",
            ColorSet{color("gray-30")});
        mThemeColors.emplace_back(Token::WxSliderAddPageBackground, "wx-sliderAddPage-background",
            ColorSet{color("gray-30")});
        mThemeColors.emplace_back(Token::WxSliderSubPageBackground, "wx-sliderSubPage-background",
            ColorSet{color("blue-40")});
        mThemeColors.emplace_back(Token::WxAreYouTheHostIcon, "wx-areYouTheHostIcon",
            ColorSet{color("gray-90")}.setPressed(color("gray-70")).setHovered(color("gray-80")));
        mThemeColors.emplace_back(Token::WxCloseAssociationCall, "wx-closeAssociationCall",
            ColorSet{color("gray-100")}.setPressed(color("blue-40")).setHovered(color("gray-50")).setDisabled(color("gray-50")));
        mThemeColors.emplace_back(Token::WxActMessage, "wx-actMessage",
            ColorSet{color("blue-40")}.setPressed(color("blue-60")).setHovered(color("blue-50")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxActCall, "wx-actCall",
            ColorSet{color("green-40")}.setPressed(color("green-60")).setHovered(color("green-50")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxActMeetingInfo, "wx-actMeetingInfo",
            ColorSet{color("orange-50")}.setPressed(color("orange-70")).setHovered(color("orange-60")).setDisabled(color("gray-05")));
        mThemeColors.emplace_back(Token::WxActParticipants, "wx-actParticipants",
            ColorSet{color("mint-50")}.setPressed(color("mint-70")).setHovered(color("mint-60")).setDisabled(color("gray-05")));
        mThemeColors.emplace_back(Token::WxActFiles, "wx-actFiles",
            ColorSet{color("yellow-40")}.setPressed(color("yellow-60")).setHovered(color("yellow-50")).setDisabled(color("gray-05")));
        mThemeColors.emplace_back(Token::WxActWhiteBoard, "wx-actWhiteBoard",
            ColorSet{color("purple-50")}.setPressed(color("purple-70")).setHovered(color("purple-60")).setDisabled(color("gray-05")));
        mThemeColors.emplace_back(Token::WxActScreenShare, "wx-actScreenShare",
            ColorSet{color("blue-50")}.setPressed(color("blue-70")).setHovered(color("blue-60")).setDisabled(color("blue-10")));
        mThemeColors.emplace_back(Token::WxActPeopleInsights, "wx-actPeopleInsights",
            ColorSet{color("gray-60")}.setPressed(color("gray-80")).setHovered(color("gray-70")).setDisabled(color("gray-10")));
        mThemeColors.emplace_back(Token::WxActMyThreads, "wx-actMyThreads",
            ColorSet{color("blue-30")}.setPressed(color("blue-50")).setHovered(color("blue-40")).setDisabled(color("blue-05")));
        mThemeColors.emplace_back(Token::WxActLinks, "wx-actLinks",
            ColorSet{color("violet-50")}.setPressed(color("violet-70")).setHovered(color("violet-60")).setDisabled(color("gray-05")));
        mThemeColors.emplace_back(Token::WxSpeakerButtonBackground, "wx-speakerButton-background",
            ColorSet{color("blue-40")}.setDisabled(color("gray-30")));
        mThemeColors.emplace_back(Token::WxAudioOptionsPopupSliderColorBorder, "wx-audioOptionsPopupSliderColor-border",
            ColorSet{color("gray-30")});
        mThemeColors.emplace_back(Token::WxAudioOptionsPopupSliderColorBackground, "wx-audioOptionsPopupSliderColor-background",
            ColorSet{color("gray-30")});
        mThemeColors.emplace_back(Token::WxClassificationButtonUnselectedText, "wx-classificationButtonUnselected-text",
            ColorSet{color("gray-50")});
        mThemeColors.emplace_back(Token::WxCreateSpaceWidgetInputBorder, "wx-createSpaceWidgetInput-border",
            ColorSet{color("gray-10")}.setFocused(color("blue-40")));
        mThemeColors.emplace_back(Token::WxClassificationLevelMenuButtonBackground, "wx-classificationLevelMenuButton-background",
            ColorSet{color("white-100")}.setHovered(color("blue-05")).setFocused(color("blue-10")));
        mThemeColors.emplace_back(Token::WxClassificationLevelMenuCheckbox, "wx-classificationLevelMenuCheckbox",
            ColorSet{color("blue-70")});
        mThemeColors.emplace_back(Token::WxCoachmarkBackground, "wx-coachmark-background",
            ColorSet{color("yellow-60")});
        mThemeColors.emplace_back(Token::WxAddLinkDialogInputBorder, "wx-addLinkDialogInput-border",
            ColorSet{color("gray-30")}.setFocused(color("blue-60")));
        mThemeColors.emplace_back(Token::WxClassificationSelectionButton, "wx-classificationSelection-button",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::WxClassificationSelectionButtonBorder, "wx-classificationSelection-button-border",
            ColorSet{color("gray-20")});
        mThemeColors.emplace_back(Token::WxTopBarSearchButtonBackground, "wx-topBarSearchButton-background",
            ColorSet{color("gray-20")});
        mThemeColors.emplace_back(Token::WxTopBarSearchButtonText, "wx-topBarSearchButton-text",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxGhTopBarSearchButtonBackground, "wx-ghTopBarSearchButton-background",
            ColorSet{color("gray-80")}.setPressed(color("gray-100")).setHovered(color("gray-95")).setChecked(color("gray-100")).setDisabled(color("gray-90")));
        mThemeColors.emplace_back(Token::WxGhTopBarSearchButtonText, "wx-ghTopBarSearchButton-text",
            ColorSet{color("gray-70")});
        mThemeColors.emplace_back(Token::WxGhTopBarSearchButtonIcon, "wx-ghTopBarSearchButtonIcon",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxCustomButtonBorder, "wx-customButton-border",
            ColorSet{color("gray-20")}.setPressed(color("gray-50")).setHovered(color("gray-50")));
        mThemeColors.emplace_back(Token::WxCustomButtonBackground, "wx-customButton-background",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxCustomButtonValueIcon, "wx-customButtonValueIcon",
            ColorSet{color("blue-70")}.setDisabled(color("gray-50")));
        mThemeColors.emplace_back(Token::WxCustomButtonValueBorder, "wx-customButtonValue-border",
            ColorSet{color("gray-20")});
        mThemeColors.emplace_back(Token::WxFocusColorOnColumnBackground, "wx-focusColorOnColumn-background",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxCustomCalendarHeaderTextBackground, "wx-customCalendarHeaderText-background",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxCustomCalendarHeaderTextForeground, "wx-customCalendarHeaderText-foreground",
            ColorSet{color("gray-70")});
        mThemeColors.emplace_back(Token::WxCustomListViewHeaderText, "wx-customListViewHeader-text",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxCustomListViewSubHeaderText, "wx-customListViewSubHeader-text",
            ColorSet{color("gray-60")});
        mThemeColors.emplace_back(Token::WxCustomListViewIcon, "wx-customListViewIcon",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxTransparentBackground, "wx-transparent-background",
            ColorSet{color("transparent")});
        mThemeColors.emplace_back(Token::WxRectButtonBorder, "wx-rectButton-border",
            ColorSet{color("gray-10")}.setPressed(color("blue-40")).setHovered(color("blue-40")).setFocused(color("blue-40")));
        mThemeColors.emplace_back(Token::WxWhiteboardThumbnailBackground, "wx-whiteboardThumbnail-background",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::WxWhiteboardThumbnailText, "wx-whiteboardThumbnail-text",
            ColorSet{color("gray-60")});
        mThemeColors.emplace_back(Token::WxWhiteboardThumbnailButtonIcon, "wx-whiteboardThumbnailButtonIcon",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxWhiteboardThumbnailButtonIconBackground, "wx-whiteboardThumbnailButtonIcon-background",
            ColorSet{color("gray-90")}.setHovered(color("gray-95")));
        mThemeColors.emplace_back(Token::WxCancelHostTransferButtonBackground, "wx-cancelHostTransferButton-background",
            ColorSet{color("white-100")}.setDisabled(color("gray-30")));
        mThemeColors.emplace_back(Token::WxCancelHostTransferButtonText, "wx-cancelHostTransferButton-text",
            ColorSet{color("gray-90")});
        mThemeColors.emplace_back(Token::WxCancelHostTransferButtonBorder, "wx-cancelHostTransferButton-border",
            ColorSet{color("gray-50")});
        mThemeColors.emplace_back(Token::WxLinkActivityItemBackground, "wx-linkActivityItem-background",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxLinkActivityFocusRect, "wx-linkActivityFocusRect",
            ColorSet{color("blue-40")});
        mThemeColors.emplace_back(Token::WxLinkActivityNoFavIconBackground, "wx-linkActivityNoFavIcon-background",
            ColorSet{color("violet-50")});
        mThemeColors.emplace_back(Token::WxLinkActivityNoFavIcon, "wx-linkActivityNoFavIcon",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxLinkActivityHoverRectBackground, "wx-linkActivityHoverRect-background",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxLinkActivityButtonBackground, "wx-linkActivityButton-background",
            ColorSet{color("gray-90")});
        mThemeColors.emplace_back(Token::WxLinkActivityButtonText, "wx-linkActivityButton-text",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxButtonTabBorder, "wx-buttonTab-border",
            ColorSet{color("gray-30")});
        mThemeColors.emplace_back(Token::WxButtonTabText, "wx-buttonTab-text",
            ColorSet{color("black-100")});
        mThemeColors.emplace_back(Token::WxButtonTabBackground, "wx-buttonTab-background",
            ColorSet{color("white")}.setPressed(color("gray-20")).setHovered(color("gray-10")).setChecked(color("gray-20")));
        mThemeColors.emplace_back(Token::WxMeetingsTabButtonText, "wx-meetingsTabButton-text",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxPrimaryButtonContraryBackgroud, "wx-primary-button-contrary-backgroud",
            ColorSet{color("gray-05")}.setPressed(color("gray-40")).setHovered(color("gray-30")));
        mThemeColors.emplace_back(Token::WxSecondaryButtonContraryBackgroud, "wx-secondary-button-contrary-backgroud",
            ColorSet{color("transparent")}.setPressed(color("gray-60")).setHovered(color("gray-70")));
        mThemeColors.emplace_back(Token::WxMeetingsTabButtonBackground, "wx-meetingsTabButton-background",
            ColorSet{color("white")}.setPressed(color("gray-20")).setHovered(color("gray-05")).setFocused(color("gray-05")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxMeetingIcon, "wx-meetingIcon",
            ColorSet{color("gray-80")}.setDisabled(color("gray-70")));
        mThemeColors.emplace_back(Token::WxHealthCheckButtonBackground, "wx-healthCheckButton-background",
            ColorSet{color("white-100")}.setPressed(color("blue-80")).setHovered(color("blue-70")));
        mThemeColors.emplace_back(Token::WxHealthCheckButtonText, "wx-healthCheckButton-text",
            ColorSet{color("blue-70")}.setPressed(color("gray-05")).setHovered(color("gray-05")));
        mThemeColors.emplace_back(Token::WxThreadsItemBackground, "wx-threadsItem-background",
            ColorSet{color("white")}.setPressed(color("gray-10")).setHovered(color("gray-05")).setDisabled(color("black-100")));
        mThemeColors.emplace_back(Token::WxThreadsUnreadItemText, "wx-threadsUnreadItem-text",
            ColorSet{color("blue-70")}.setPressed(color("blue-90")));
        mThemeColors.emplace_back(Token::WxInsightsButtonBackground, "wx-insightsButton-background",
            ColorSet{color("gray-60")}.setPressed(color("gray-80")).setHovered(color("gray-70")).setChecked(color("gray-80")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxClassificationButtonUnselectedBackground, "wx-classificationButtonUnselected-background",
            ColorSet{color("transparent")});
        mThemeColors.emplace_back(Token::WxUnderlineButtonBackground, "wx-underlineButton-background",
            ColorSet{color("transparent")}.setPressed(color("gray-20")).setHovered(color("gray-10")).setChecked(color("gray-20")));
        mThemeColors.emplace_back(Token::WxUnderlineButtonText, "wx-underlineButton-text",
            ColorSet{color("gray-60")}.setPressed(color("gray-100")).setHovered(color("gray-100")).setChecked(color("gray-100")));
        mThemeColors.emplace_back(Token::WxUnderlineSearchFilterButtonText, "wx-underlineSearchFilterButton-text",
            ColorSet{color("gray-60")}.setPressed(color("gray-100")).setHovered(color("gray-100")).setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxSearchModifierBackground, "wx-searchModifier-background",
            ColorSet{color("gray-10")}.setPressed(color("gray-20")).setHovered(color("gray-30")));
        mThemeColors.emplace_back(Token::WxNotificationBackground, "wx-notification-background",
            ColorSet{color("black-100")});
        mThemeColors.emplace_back(Token::WxNotificationText, "wx-notification-text",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxNotificationSecondaryBackground, "wx-notification-secondary-background",
            ColorSet{color("gray-97")});
        mThemeColors.emplace_back(Token::WxNotificationSecondaryBorder, "wx-notification-secondary-border",
            ColorSet{color("white-100-alpha-20")});
        mThemeColors.emplace_back(Token::WxNotificationSecondaryText, "wx-notification-secondary-text",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxTeamButtonBackground, "wx-teamButton-background",
            ColorSet{color("gray-05")}.setPressed(color("gray-20")).setHovered(color("gray-10")));
        mThemeColors.emplace_back(Token::WxThemeButtonBackground, "wx-themeButton-background",
            ColorSet{color("white")}.setHovered(color("gray-20")).setChecked(color("gray-20")));
        mThemeColors.emplace_back(Token::WxShareSelectionWindowItemBorder, "wx-share-selection-window-item-border",
            ColorSet{color("transparent")}.setPressed(color("orange-50")).setHovered(color("gray-30")).setChecked(color("blue-50")));
        mThemeColors.emplace_back(Token::WxShareSeparator, "wx-shareSeparator",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxShareSelectionWindowBackground, "wx-share-selection-window-background",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::WxShareSelectedItemBorder, "wx-share-selected-item-border",
            ColorSet{color("orange-50")});
        mThemeColors.emplace_back(Token::WxShareApplicationIconBackground, "wx-share-application-icon-background",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::WxShareApplicationIconBorder, "wx-share-application-icon-border",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxShareItemHoverBackground, "wx-share-item-hover-background",
            ColorSet{color("white-100-alpha-60")});
        mThemeColors.emplace_back(Token::WxShareDropdownColor, "wx-share-dropdown-color",
            ColorSet{color("orange-50")}.setHovered(color("orange-60")));
        mThemeColors.emplace_back(Token::WxShareGrayDropdownColor, "wx-share-gray-dropdown-color",
            ColorSet{color("gray-50")}.setHovered(color("gray-60")));
        mThemeColors.emplace_back(Token::WxShareSharingBorderColor, "wx-share-sharing-border-color",
            ColorSet{color("orange-50")});
        mThemeColors.emplace_back(Token::WxShareSharingBorderColorOutline, "wx-share-sharing-border-color-outline",
            ColorSet{color("orange-50")});
        mThemeColors.emplace_back(Token::WxShareSelectionBorderColor, "wx-share-selection-border-color",
            ColorSet{color("green-50")});
        mThemeColors.emplace_back(Token::WxShareSelectionWindowPopoverBorderColor, "wx-share-selection-window-popover-border-color",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::WxShareSelectionIconBackgroundColor, "wx-share-selection-icon-background-color",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxShareUnsharedApplicationBorderColor, "wx-share-unshared-application-border-color",
            ColorSet{color("gray-50")});
        mThemeColors.emplace_back(Token::WxShareBarButtonColor, "wx-share-bar-button-color",
            ColorSet{color("orange-60")}.setPressed(color("orange-80")).setHovered(color("orange-70")));
        mThemeColors.emplace_back(Token::WxShareBarButtonFontColor, "wx-share-bar-button-font-color",
            ColorSet{color("white-100")}.setDisabled(color("white-100-alpha-50")));
        mThemeColors.emplace_back(Token::WxShareBarGrayButtonColor, "wx-share-bar-gray-button-color",
            ColorSet{color("gray-60")}.setPressed(color("gray-80")).setHovered(color("gray-70")));
        mThemeColors.emplace_back(Token::WxShareBarDraggerColor, "wx-share-bar-dragger-color",
            ColorSet{color("orange-30")});
        mThemeColors.emplace_back(Token::WxShareBarGrayDraggerColor, "wx-share-bar-gray-dragger-color",
            ColorSet{color("gray-30")});
        mThemeColors.emplace_back(Token::WxShareResumeBarColor, "wx-share-resume-bar-color",
            ColorSet{color("gray-70")});
        mThemeColors.emplace_back(Token::WxShareToastIconBackgroundColor, "wx-share-toast-icon-background-color",
            ColorSet{color("gray-30")});
        mThemeColors.emplace_back(Token::WxShareScreenNumberNotificationBackground, "wx-share-screen-number-notification-background",
            ColorSet{color("black-100-alpha-60")});
        mThemeColors.emplace_back(Token::WxTutorialSeparator, "wx-tutorialSeparator",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxTutorialHeaderText, "wx-tutorialHeader-text",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxTutorialDescriptionText, "wx-tutorialDescription-text",
            ColorSet{color("gray-60")});
        mThemeColors.emplace_back(Token::WxTutorialSelectorButton, "wx-tutorialSelectorButton",
            ColorSet{color("gray-50")}.setChecked(color("gray-90")));
        mThemeColors.emplace_back(Token::WxPreviewContentListIcon, "wx-previewContentListIcon",
            ColorSet{color("gray-60")}.setChecked(color("white-100")));
        mThemeColors.emplace_back(Token::WxPreviewContentListBackground, "wx-previewContentList-background",
            ColorSet{color("blue-40")});
        mThemeColors.emplace_back(Token::WxPreviewVideoRectBackground, "wx-previewVideoRect-background",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxSecondColumnFlagIcon, "wx-secondColumnFlagIcon",
            ColorSet{color("mint-70")});
        mThemeColors.emplace_back(Token::WxFilterControlIcon, "wx-filterControlIcon",
            ColorSet{color("gray-100")}.setDisabled(color("gray-60")));
        mThemeColors.emplace_back(Token::WxFilterControlBackground, "wx-filterControlBackground",
            ColorSet{color("gray-05")}.setHovered(color("gray-10")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxUcStatusButtonBackground, "wx-ucStatusButton-background",
            ColorSet{color("transparent")}.setPressed(color("white-100")).setHovered(color("white-100")));
        mThemeColors.emplace_back(Token::WxCustomAppButtonIcon, "wx-customAppButtonIcon",
            ColorSet{color("gray-100")}.setPressed(color("gray-80")).setHovered(color("gray-90")));
        mThemeColors.emplace_back(Token::WxCustomAppButtonIconBackground, "wx-customAppButtonIcon-background",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxUcStatusLabelText, "wx-ucStatus-label-text",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxPopupMenuItemBackground, "wx-popupMenuItem-background",
            ColorSet{color("white-100")}.setPressed(color("blue-10")).setHovered(color("blue-05")));
        mThemeColors.emplace_back(Token::WxPopupMenuItemText, "wx-popupMenuItem-text",
            ColorSet{color("gray-100")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxAvatarNameInputBorder, "wx-avatarNameInput-border",
            ColorSet{color("white")}.setHovered(color("blue-40")).setFocused(color("blue-40")));
        mThemeColors.emplace_back(Token::WxFilesAppButtonIcon, "wx-filesAppButtonIcon",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxFilesAppButtonBackground, "wx-filesAppButton-background",
            ColorSet{color("gray-90")}.setPressed(color("gray-80")).setHovered(color("gray-80")));
        mThemeColors.emplace_back(Token::WxFilesAppControlPanelBackground, "wx-filesAppControlPanel-background",
            ColorSet{color("gray-90")});
        mThemeColors.emplace_back(Token::WxFilesAppButtondividerLine, "wx-filesAppButtondividerLine",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxFilesListButtonBackground, "wx-filesListButton-background",
            ColorSet{color("gray-80")}.setHovered(color("gray-95")));
        mThemeColors.emplace_back(Token::WxFilesListIconBorder, "wx-filesListIcon-border",
            ColorSet{color("gray-80")}.setHovered(color("gray-95")));
        mThemeColors.emplace_back(Token::WxStatusDefaultIcon, "wx-statusDefaultIcon",
            ColorSet{color("yellow-40")});
        mThemeColors.emplace_back(Token::WxStatusReadyIcon, "wx-statusReadyIcon",
            ColorSet{color("green-40")});
        mThemeColors.emplace_back(Token::WxSelfViewEnabledButtonIcon, "wx-selfViewEnabledButtonIcon",
            ColorSet{color("blue-30")});
        mThemeColors.emplace_back(Token::WxCustomMenuBackground, "wx-customMenu-background",
            ColorSet{color("white-100")}.setPressed(color("gray-10")).setHovered(color("gray-05")));
        mThemeColors.emplace_back(Token::WxCustomMenuText, "wx-customMenu-text",
            ColorSet{color("gray-90")}.setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxCustomMenuBorder, "wx-customMenu-border",
            ColorSet{color("gray-30")});
        mThemeColors.emplace_back(Token::WxTransparentButton, "wx-transparent-button",
            ColorSet{color("transparent")}.setPressed(color("gray-20")).setHovered(color("gray-10")).setFocused(color("gray-05")));
        mThemeColors.emplace_back(Token::WxSemiTransparentPreviewBackground, "wx-semiTransparentPreview-background",
            ColorSet{color("white-100-alpha-50")});
        mThemeColors.emplace_back(Token::WxSemiTransparentControl, "wx-semiTransparentControl",
            ColorSet{color("white-100-alpha-60")}.setPressed(color("white-100-alpha-80")).setHovered(color("white-100-alpha-40")));
        mThemeColors.emplace_back(Token::WxCallStatisticsTitleBackground, "wx-callStatisticsTitle-background",
            ColorSet{color("gray-70")});
        mThemeColors.emplace_back(Token::WxCallStatisticsTitleText, "wx-callStatisticsTitle-text",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxCallStatisticsRecTranBackground, "wx-callStatisticsRecTran-background",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxCallStatisticsRecTranText, "wx-callStatisticsRecTran-text",
            ColorSet{color("gray-90")});
        mThemeColors.emplace_back(Token::WxCalendarIcon, "wx-calendarIcon",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxCopyButtonBackground, "wx-copyButton-background",
            ColorSet{color("gray-05")}.setHovered(color("gray-20")));
        mThemeColors.emplace_back(Token::WxSettingsButtonBackground, "wx-settingsButton-background",
            ColorSet{color("white")}.setPressed(color("gray-20")).setHovered(color("gray-10")));
        mThemeColors.emplace_back(Token::WxSettingsButtonIcon, "wx-settingsButtonIcon",
            ColorSet{color("gray-50")}.setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxCopyButtonIcon, "wx-copyButtonIcon",
            ColorSet{color("gray-100")}.setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxVideoAdressInputIcon, "wx-videoAdressInputIcon",
            ColorSet{color("gray-60")}.setPressed(color("gray-70")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxCopiedLabelBackground, "wx-copiedLabel-background",
            ColorSet{color("gray-50")});
        mThemeColors.emplace_back(Token::WxCopiedLabelText, "wx-copiedLabel-text",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::WxCopyButtonAfterCopiedIcon, "wx-copyButtonAfterCopiedIcon",
            ColorSet{color("black")}.setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxJoinMeetingButtonIcon, "wx-joinMeetingButtonIcon",
            ColorSet{color("white")}.setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxCopyPMRButtonIcon, "wx-copyPMRButtonIcon",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::WxCallPopupMenuItemBackground, "wx-callPopupMenuItem-background",
            ColorSet{color("gray-90")}.setPressed(color("blue-70")).setHovered(color("blue-80")).setDisabled(color("gray-100")));
        mThemeColors.emplace_back(Token::WxCallPopupMenuItemText, "wx-callPopupMenuItem-text",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::WxStopCallButtonIcon, "wx-stopCallButtonIcon",
            ColorSet{color("white")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxDefaultSparkToolbarBackground, "wx-defaultSparkToolbar-background",
            ColorSet{color("white-100")}.setPressed(color("blue-60")).setHovered(color("blue-50")).setDisabled(color("gray-05")));
        mThemeColors.emplace_back(Token::WxSparkToolbarButtonText, "wx-sparkToolbarButton-text",
            ColorSet{color("gray-70")}.setPressed(color("white-100")).setHovered(color("white-100")).setChecked(color("white-100")));
        mThemeColors.emplace_back(Token::WxWbClearAllButtonText, "wx-wbClearAllButton-text",
            ColorSet{color("red-60")}.setPressed(color("red-80")).setHovered(color("red-70")).setDisabled(color("red-20")));
        mThemeColors.emplace_back(Token::WxMultiAppShareShiftLabelBackground, "wx-multiAppShareShiftLabel-background",
            ColorSet{color("black-100-alpha-11")});
        mThemeColors.emplace_back(Token::WxAppShareButtonBackground, "wx-appShareButton-background",
            ColorSet{color("black-100-alpha-11")}.setHovered(color("blue-40")));
        mThemeColors.emplace_back(Token::WxAppShareIconBackground, "wx-appShareIcon-background",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxAppShareIconPlaceholder, "wx-appShareIconPlaceholder",
            ColorSet{color("blue-50")}.setPressed(color("blue-70")).setHovered(color("gray-20")).setFocused(color("red-60")).setDisabled(color("white-100")));
        mThemeColors.emplace_back(Token::WxCallWindowCheckedIcon, "wx-callWindowCheckedIcon",
            ColorSet{color("rebranding-blue-70")});
        mThemeColors.emplace_back(Token::WxSelfMessageCircleIcon, "wx-selfMessageCircleIcon",
            ColorSet{color("blue-50")});
        mThemeColors.emplace_back(Token::WxSelfMessageCircleBorder, "wx-selfMessageCircle-border",
            ColorSet{color("gray-20")});
        mThemeColors.emplace_back(Token::WxAddButtonBackground, "wx-addButton-background",
            ColorSet{color("gray-80")}.setPressed(color("gray-95")).setHovered(color("gray-90")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxAddButtonText, "wx-addButton-text",
            ColorSet{color("white-100")}.setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxAddButtonIcon, "wx-addButton-icon",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxPopoverBackground, "wx-popover-background",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::WxScreenShareButtonBorder, "wx-screenShareButton-border",
            ColorSet{color("gray-20")}.setChecked(color("red-60")));
        mThemeColors.emplace_back(Token::WxScreenShareTitleText, "wx-screenShareTitle-text",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxScreenShareInfoFrameBackground, "wx-screenShareInfoFrame-background",
            ColorSet{color("orange-50")}.setDisabled(color("gray-50")));
        mThemeColors.emplace_back(Token::WxScreenShareRebrandingInfoFrameBackground, "wx-screenShareRebrandingInfoFrame-background",
            ColorSet{color("orange-60")}.setDisabled(color("gray-60")));
        mThemeColors.emplace_back(Token::WxScreenShareDropdownBackground, "wx-screenShareDropdown-background",
            ColorSet{color("orange-60")}.setHovered(color("orange-70")));
        mThemeColors.emplace_back(Token::WxScreenShareDropdownGrayBackground, "wx-screenShareDropdownGray-background",
            ColorSet{color("gray-60")}.setHovered(color("gray-70")));
        mThemeColors.emplace_back(Token::WxScreenShareRecordingButtonBackground, "wx-screenShareRecordingButton-background",
            ColorSet{color("orange-50")}.setChecked(color("red-60")));
        mThemeColors.emplace_back(Token::WxGeneralListBackground, "wx-general-list-background",
            ColorSet{color("white-100")}.setPressed(color("gray-20")).setHovered(color("gray-10")));
        mThemeColors.emplace_back(Token::WxGeneralListBorder, "wx-general-list-border",
            ColorSet{color("white-100")}.setFocused(color("gray-100")));
        mThemeColors.emplace_back(Token::WxGeneralListText, "wx-general-list-text",
            ColorSet{color("gray-100")}.setFocused(color("gray-40")));
        mThemeColors.emplace_back(Token::WxCallStripAudioVideoButtonIcon, "wx-callStripAudioVideoButton-icon",
            ColorSet{color("red-60")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxDefaultBlurBorder, "wx-defaultBlur-border",
            ColorSet{color("gray-40")});
        mThemeColors.emplace_back(Token::WxExitHostPINViewButtonText, "wx-exitHostPINViewButton-text",
            ColorSet{color("gray-50")});
        mThemeColors.emplace_back(Token::WxInfoButtonBackground, "wx-infoButton-background",
            ColorSet{color("gray-30")});
        mThemeColors.emplace_back(Token::WxInputFieldBorder, "wx-inputField-border",
            ColorSet{color("blue-40")});
        mThemeColors.emplace_back(Token::WxMuteAudioButtonBackground, "wx-muteAudioButton-background",
            ColorSet{color("gray-90")}.setPressed(color("black")).setHovered(color("black")).setDisabled(color("gray-05")));
        mThemeColors.emplace_back(Token::WxFilmStripPipWidgetBackground, "wx-filmStripPipWidget-background",
            ColorSet{color("gray-20")});
        mThemeColors.emplace_back(Token::WxPinChallengeWidgetCloseButtonBackground, "wx-pinChallengeWidgetCloseButton-background",
            ColorSet{color("gray-50")});
        mThemeColors.emplace_back(Token::WxCloseXButtonIcon, "wx-closeXButtonIcon",
            ColorSet{color("gray-90")}.setPressed(color("gray-70")).setHovered(color("gray-80")));
        mThemeColors.emplace_back(Token::WxStopShareButtonBackground, "wx-stopShareButton-background",
            ColorSet{color("yellow-50")});
        mThemeColors.emplace_back(Token::WxCustomCalendarCellHighlightBackground, "wx-customCalendarCellHighlight-background",
            ColorSet{color("blue-50")}.setHovered(color("blue-20")));
        mThemeColors.emplace_back(Token::WxAvatarlistText, "wx-avatarlist-text",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxAvatarlistCircle, "wx-avatarlist-circle",
            ColorSet{color("gray-80")});
        mThemeColors.emplace_back(Token::WxDeviceMenuBackground, "wx-device-menu-background",
            ColorSet{color("gray-05")}.setPressed(color("gray-20")).setHovered(color("gray-10")).setFocused(color("gray-10")));
        mThemeColors.emplace_back(Token::WxInterstitialBackground, "wx-interstitial-background",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxInterstitialFrameBackground, "wx-interstitial-frame-background",
            ColorSet{color("white-100-alpha-50")});
        mThemeColors.emplace_back(Token::WxInterstitialChangeVideoButtonBackground, "wx-interstitial-change-video-button-background",
            ColorSet{color("gray-05")}.setPressed(color("gray-10")).setHovered(color("gray-20")).setDisabled(color("transparent")));
        mThemeColors.emplace_back(Token::WxInterstitialChangeVideoButtonBorder, "wx-interstitial-change-video-button-border",
            ColorSet{color("gray-05")}.setPressed(color("gray-10")).setHovered(color("gray-20")).setDisabled(color("transparent")));
        mThemeColors.emplace_back(Token::WxInterstitialAudioOptionsButton, "wx-interstitial-audio-options-button",
            ColorSet{color("transparent")}.setHovered(color("blue-05")));
        mThemeColors.emplace_back(Token::WxInterstitialButtonBackground, "wx-interstitial-button-background",
            ColorSet{color("transparent")}.setPressed(color("gray-20")).setHovered(color("gray-10")));
        mThemeColors.emplace_back(Token::WxInterstitialButtonBorder, "wx-interstitial-button-border",
            ColorSet{color("transparent")}.setPressed(color("gray-20")).setHovered(color("gray-10")));
        mThemeColors.emplace_back(Token::WxInterstitialFrameVideoBackground, "wx-interstitial-frame-video-background",
            ColorSet{color("white-100-alpha-60")});
        mThemeColors.emplace_back(Token::WxInterstitialFrameVideoBorder, "wx-interstitial-frame-video-border",
            ColorSet{color("black-100-alpha-12")});
        mThemeColors.emplace_back(Token::WxInterstitialFrameVideoBackgroundVdi, "wx-interstitial-frame-video-background-vdi",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxInterstitialDisconnectButtonText, "wx-interstitial-disconnect-button-text",
            ColorSet{color("red-60")}.setHovered(color("red-70")));
        mThemeColors.emplace_back(Token::WxInterstitialJoinButtonText, "wx-interstitial-join-button-text",
            ColorSet{color("white-100")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxInterstitialDisconnectButtonBackground, "wx-interstitial-disconnect-button-background",
            ColorSet{color("transparent")}.setPressed(color("gray-20")).setDisabled(color("gray-100")));
        mThemeColors.emplace_back(Token::WxInterstitialAudioButtonBackground, "wx-interstitial-audio-button-background",
            ColorSet{color("gray-10")}.setPressed(color("gray-30")).setHovered(color("gray-20")));
        mThemeColors.emplace_back(Token::WxInterstitialMuteButtonIcon, "wx-interstitial-mute-button-icon",
            ColorSet{color("red-60")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxInterstitialMuteButtonIconChecked, "wx-interstitial-mute-button-icon-checked",
            ColorSet{color("red-60")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxInterstitialAudioButtonBorder, "wx-interstitial-audio-button-border",
            ColorSet{color("gray-30")}.setPressed(color("gray-40")));
        mThemeColors.emplace_back(Token::WxInterstitialPairedComboboxText, "wx-interstitial-paired-combobox-text",
            ColorSet{color("blue-70")});
        mThemeColors.emplace_back(Token::WxInterstitialPairedComboboxBackground, "wx-interstitial-paired-combobox-background",
            ColorSet{color("transparent")}.setPressed(color("gray-20")).setHovered(color("gray-10")).setDisabled(color("gray-100")));
        mThemeColors.emplace_back(Token::WxInterstitialNotMirroredBackground, "wx-interstitial-not-mirrored-background",
            ColorSet{color("gray-05")}.setPressed(color("gray-20")).setHovered(color("gray-10")).setDisabled(color("transparent")));
        mThemeColors.emplace_back(Token::WxInterstitialMirroredBackground, "wx-interstitial-mirrored-background",
            ColorSet{color("blue-60")}.setPressed(color("blue-80")).setHovered(color("blue-70")));
        mThemeColors.emplace_back(Token::WxInterstitialMirroredTextMirror, "wx-interstitial-mirrored-text-mirror",
            ColorSet{color("gray-05")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxInterstitialMirroredTextUnmirror, "wx-interstitial-mirrored-text-unmirror",
            ColorSet{color("gray-100")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxInterstitialPreviewBackground, "wx-interstitial-preview-background",
            ColorSet{color("white-100-alpha-40")});
        mThemeColors.emplace_back(Token::WxInterstitialDeviceSettigBackground, "wx-interstitial-device-settig-background",
            ColorSet{color("white-100-alpha-80")});
        mThemeColors.emplace_back(Token::WxCallControlButtonBackground, "wx-call-control-button-background",
            ColorSet{color("white-100")}.setPressed(color("gray-10")).setHovered(color("gray-05")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxCallControlButtonBorder, "wx-call-control-button-border",
            ColorSet{color("white-100")}.setPressed(color("gray-10")).setHovered(color("gray-05")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxCallControlButtonText, "wx-call-control-button-text",
            ColorSet{color("white-100")}.setPressed(color("gray-10")).setHovered(color("gray-05")).setFocused(color("black-100")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxCallControlMoreButtonBackground, "wx-call-control-moreButton-background",
            ColorSet{color("white-100")}.setPressed(color("gray-10")).setHovered(color("gray-05")).setChecked(color("gray-10")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxCallViewTimeLabelBackground, "wx-call-view-timeLabel-background",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxTitilebarRecordinglabelBackground, "wx-titilebar-recordinglabel-background",
            ColorSet{color("red-50")});
        mThemeColors.emplace_back(Token::WxTitilebarPausedlabelBackground, "wx-titilebar-pausedlabel-background",
            ColorSet{color("yellow-40")});
        mThemeColors.emplace_back(Token::WxTitilebarLocklabelBackground, "wx-titilebar-locklabel-background",
            ColorSet{color("gray-50")});
        mThemeColors.emplace_back(Token::WxTitilebarMediaqualitygoodlabelBackground, "wx-titilebar-mediaqualitygoodlabel-background",
            ColorSet{color("green-50")});
        mThemeColors.emplace_back(Token::WxTitilebarMediaqualityunstablelabelBackground, "wx-titilebar-mediaqualityunstablelabel-background",
            ColorSet{color("yellow-50")});
        mThemeColors.emplace_back(Token::WxTitilebarMediaqualitypoorlabelBackground, "wx-titilebar-mediaqualitypoorlabel-background",
            ColorSet{color("red-50")});
        mThemeColors.emplace_back(Token::WxCustomCalendarCellBackground, "wx-customCalendarCell-background",
            ColorSet{color("black-100")});
        mThemeColors.emplace_back(Token::WxCallControlPanelButtonBackground, "wx-call-control-panelButton-background",
            ColorSet{color("white-100")}.setPressed(color("gray-10")).setHovered(color("gray-05")));
        mThemeColors.emplace_back(Token::WxCallControlPanelButtonBorder, "wx-call-control-panelButton-border",
            ColorSet{color("white-100")}.setPressed(color("gray-10")).setHovered(color("gray-05")));
        mThemeColors.emplace_back(Token::WxCallControlPanelButtonText, "wx-call-control-panelButton-text",
            ColorSet{color("gray-100")}.setChecked(color("blue-60")).setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxCallControlVolumeBackground, "wx-call-control-volume-background",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxCallControlPopoverBorder, "wx-call-control-popover-border",
            ColorSet{color("gray-20")});
        mThemeColors.emplace_back(Token::WxCallControlMoreMenuBackground, "wx-call-control-more-menu-background",
            ColorSet{color("gray-05")}.setPressed(color("gray-20")).setHovered(color("gray-10")));
        mThemeColors.emplace_back(Token::WxCallVideoLayoutMenuLayoutButtonText, "wx-call-videoLayoutMenu-layoutButton-text",
            ColorSet{color("gray-100")}.setPressed(color("blue-50")).setHovered(color("blue-60")).setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxCallVideoLayoutMenuLayoutButtonBackground, "wx-call-videoLayoutMenu-layoutButton-background",
            ColorSet{color("white")}.setPressed(color("gray-20")).setHovered(color("gray-05")).setChecked(color("gray-20")));
        mThemeColors.emplace_back(Token::WxCallVideoLayoutMenuSeparatorBackground, "wx-call-videoLayoutMenu-separator-background",
            ColorSet{color("black-100-alpha-10")});
        mThemeColors.emplace_back(Token::WxCallVideoLayoutMenuPopoverBackground, "wx-call-videoLayoutMenu-popover-background",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::MainList, "mainList",
            ColorSet{color("white-100")}.setPressed(color("gray-20")).setHovered(color("gray-10")));
        mThemeColors.emplace_back(Token::MainListItem, "mainList-item",
            ColorSet{color("white-100")}.setPressed(color("gray-20")).setHovered(color("gray-10")).setChecked(color("gray-10")));
        mThemeColors.emplace_back(Token::WxResumeCallButtonText, "wx-resumeCallButton-text",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::WxMeetingInfoBackground, "wx-meeting-info-background",
            ColorSet{color("transparent")}.setPressed(color("gray-30")).setHovered(color("gray-20")));
        mThemeColors.emplace_back(Token::WxSoftLandingLeftSideBackground, "wx-softLanding-leftSide-background",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::WxCallControlEndButtonIcon, "wx-call-control-endButton-icon",
            ColorSet{color("white")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxVideoLayoutControlButtonText, "wx-video-layout-controlButton-text",
            ColorSet{color("gray-100")}.setHovered(color("blue-70")).setChecked(color("blue-70")).setDisabled(color("gray-10")));
        mThemeColors.emplace_back(Token::WxVideoLayoutControlButtonBackground, "wx-video-layout-controlButton-background",
            ColorSet{color("gray-20")}.setPressed(color("white-100")).setHovered(color("gray-05")).setChecked(color("white-100")).setDisabled(color("gray-10")));
        mThemeColors.emplace_back(Token::WxTitilebarMeetingInfoSvgText, "wx-titilebar-meetingInfo-svg-text",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxTitilebarMeetingInfoButtonBackground, "wx-titilebar-meetingInfoButton-background",
            ColorSet{color("transparent")}.setPressed(color("gray-30")).setHovered(color("gray-20")));
        mThemeColors.emplace_back(Token::WxNametagBackground, "wx-nametag-background",
            ColorSet{color("white-100-alpha-80")});
        mThemeColors.emplace_back(Token::WxNametagBorder, "wx-nametag-border",
            ColorSet{color("black-100-alpha-12")});
        mThemeColors.emplace_back(Token::WxNametagBackgroundHasvideo, "wx-nametag-background-hasvideo",
            ColorSet{color("black-100-alpha-54")});
        mThemeColors.emplace_back(Token::WxNametagTextHasvideo, "wx-nametag-text-hasvideo",
            ColorSet{color("white-100-alpha-95")});
        mThemeColors.emplace_back(Token::WxMorebuttonBorder, "wx-morebutton-border",
            ColorSet{color("black-100-alpha-10")});
        mThemeColors.emplace_back(Token::WxFocusOutlineBorder, "wx-focusOutline-border",
            ColorSet{color("transparent")}.setFocused(color("blue-40")));
        mThemeColors.emplace_back(Token::WxFocusOutlineSplitbuttonBorder, "wx-focusOutline-splitbutton-border",
            ColorSet{color("white-100")}.setFocused(color("blue-40")));
        mThemeColors.emplace_back(Token::WxAvatarInitialsText, "wx-avatarInitials-text",
            ColorSet{color("black-100")});
        mThemeColors.emplace_back(Token::WxFocusOutlineTransparentBorder, "wx-focusOutline-transparent-border",
            ColorSet{color("transparent")}.setFocused(color("blue-40")));
        mThemeColors.emplace_back(Token::WxFocusOutlineButtonJoinBorder, "wx-focusOutline-buttonJoin-border",
            ColorSet{color("green-60")}.setFocused(color("blue-40")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxCallDialogBorder, "wx-call-dialog-border",
            ColorSet{color("transparent")});
        mThemeColors.emplace_back(Token::WxLayoutMenuButtonBackground, "wx-layout-menu-button-background",
            ColorSet{color("white")}.setHovered(color("gray-30")).setChecked(color("gray-40")));
        mThemeColors.emplace_back(Token::WxLayoutMenuButtonBorder, "wx-layout-menu-button-border",
            ColorSet{color("white")}.setHovered(color("gray-30")).setChecked(color("gray-40")));
        mThemeColors.emplace_back(Token::WxLayoutButtonBackground, "wx-layout-button-background",
            ColorSet{color("white")}.setChecked(color("gray-05")));
        mThemeColors.emplace_back(Token::WxLayoutButtonText, "wx-layout-button-text",
            ColorSet{color("black-100-alpha-95")}.setChecked(color("rebranding-blue-70")).setDisabled(color("black-100-alpha-40")));
        mThemeColors.emplace_back(Token::WxRosterMuteButtonBackground, "wx-roster-mute-button-background",
            ColorSet{color("white")}.setPressed(color("black-100-alpha-12")).setHovered(color("black-100-alpha-08")).setDisabled(color("transparent")));
        mThemeColors.emplace_back(Token::WxCallSplitterBackground, "wx-call-splitter-background",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxMeetingListItemBackground, "wx-meeting-list-item-background",
            ColorSet{color("gray-10")}.setPressed(color("gray-30")).setHovered(color("gray-20")));
        mThemeColors.emplace_back(Token::WxPopupLabelBackground, "wx-popupLabel-background",
            ColorSet{color("gray-90")});
        mThemeColors.emplace_back(Token::WxPopupLabelBorder, "wx-popupLabel-border",
            ColorSet{color("gray-80")});
        mThemeColors.emplace_back(Token::WxLobbyViewBackground, "wx-lobbyView-background",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxLobbyViewTextPrimary, "wx-lobbyView-text-primary",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxLobbyViewTextSecondary, "wx-lobbyView-text-secondary",
            ColorSet{color("gray-70")});
        mThemeColors.emplace_back(Token::WxPercentageIndicatorPossessive, "wx-percentage-indicator-possessive",
            ColorSet{color("blue-50")});
        mThemeColors.emplace_back(Token::WxPercentageIndicatorRemaining, "wx-percentage-indicator-remaining",
            ColorSet{color("gray-30")});
        mThemeColors.emplace_back(Token::WxMeetingReminderBorder, "wx-meeting-reminder-border",
            ColorSet{color("gray-30")});
        mThemeColors.emplace_back(Token::WxCallMoreEndPopupMenuItemBackground, "wx-callMoreEndPopupMenu-item-background",
            ColorSet{color("white")}.setPressed(color("gray-20")).setHovered(color("gray-10")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxCallHistoryItemMissed, "wx-callHistory-item-missed",
            ColorSet{color("red-60")});
        mThemeColors.emplace_back(Token::WxCallHistoryDetailMissed, "wx-callHistory-detail-missed",
            ColorSet{color("red-70")});
        mThemeColors.emplace_back(Token::WxDevicePremeetingVolumeControl, "wx-device-premeeting-volume-control",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxDeviceInMeetingButton, "wx-device-in-meeting-button",
            ColorSet{color("white-100")}.setPressed(color("gray-20")).setHovered(color("gray-10")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxToggleBlueColor, "wx-toggle-blue-color",
            ColorSet{color("blue-50")}.setPressed(color("blue-70")).setHovered(color("blue-60")).setDisabled(color("blue-50-alpha-30")));
        mThemeColors.emplace_back(Token::WxToggleGrayColor, "wx-toggle-gray-color",
            ColorSet{color("gray-30")}.setPressed(color("gray-50")).setHovered(color("gray-40")).setDisabled(color("gray-10")));
        mThemeColors.emplace_back(Token::WxFooterInfoIcon, "wx-footer-info-icon",
            ColorSet{color("blue-60")});
        mThemeColors.emplace_back(Token::WxMeetingRSVPStatusTentativeButtonBackground, "wx-meetingRSVPStatus-tentativeButton-background",
            ColorSet{color("transparent")}.setPressed(color("yellow-60")).setHovered(color("gray-30")).setChecked(color("yellow-60")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxMeetingRSVPStatusAcceptButtonBackground, "wx-meetingRSVPStatus-acceptButton-background",
            ColorSet{color("transparent")}.setPressed(color("cyan-70")).setHovered(color("gray-30")).setChecked(color("cyan-70")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxMeetingRSVPStatusDeclineButtonBackground, "wx-meetingRSVPStatus-declineButton-background",
            ColorSet{color("transparent")}.setPressed(color("red-60")).setHovered(color("gray-30")).setChecked(color("red-60")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxMeetingRSVPStatusButtonText, "wx-meetingRSVPStatus-button-text",
            ColorSet{color("gray-100")}.setPressed(color("gray-05")).setChecked(color("gray-05")).setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxMeetingRSVPStatusButtonBorder, "wx-meetingRSVPStatus-button-border",
            ColorSet{color("gray-30")}.setPressed(color("transparent")).setHovered(color("transparent")).setChecked(color("transparent")).setDisabled(color("transparent")));
        mThemeColors.emplace_back(Token::WxButtonJoinIconBackground, "wx-buttonJoinIcon-background",
            ColorSet{color("green-60")}.setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxButtonJoinIconOBTPBackground, "wx-buttonJoinIconOBTP-background",
            ColorSet{color("gray-60")}.setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxScheduleButtonBackground, "wx-scheduleButton-background",
            ColorSet{color("blue-60")}.setPressed(color("blue-80")).setHovered(color("blue-70")).setChecked(color("blue-80")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxScheduleButtonIcon, "wx-scheduleButton-icon",
            ColorSet{color("blue-60")}.setDisabled(color("transparent")));
        mThemeColors.emplace_back(Token::WxButtonJoinBackground, "wx-buttonJoin-background",
            ColorSet{color("transparent")}.setPressed(color("gray-10")).setHovered(color("gray-05")));
        mThemeColors.emplace_back(Token::WxFooterWarningIcon, "wx-footer-warning-icon",
            ColorSet{color("yellow-60")});
        mThemeColors.emplace_back(Token::ClosedCaptionsTextSecondary, "closedCaptions-text-secondary",
            ColorSet{color("gray-100")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::ClosedCaptionsTextPrimary, "closedCaptions-text-primary",
            ColorSet{color("gray-05")}.setDisabled(color("gray-70")));
        mThemeColors.emplace_back(Token::ClosedCaptionsSpeakerSecondary, "closedCaptions-speaker-secondary",
            ColorSet{color("gray-50")});
        mThemeColors.emplace_back(Token::ClosedCaptionsSpeakerPrimary, "closedCaptions-speaker-primary",
            ColorSet{color("gray-50")});
        mThemeColors.emplace_back(Token::ClosedCaptionsStaticBackgroundSecondary, "closedCaptions-static-background-secondary",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::ClosedCaptionsStaticBackgroundPrimary, "closedCaptions-static-background-primary",
            ColorSet{color("gray-90")});
        mThemeColors.emplace_back(Token::ClosedCaptionsBackgroundSecondary, "closedCaptions-background-secondary",
            ColorSet{color("white")}.setPressed(color("gray-20")).setHovered(color("gray-10")));
        mThemeColors.emplace_back(Token::ClosedCaptionsBackgroundPrimary, "closedCaptions-background-primary",
            ColorSet{color("gray-90")}.setPressed(color("gray-80")).setHovered(color("gray-70")));
        mThemeColors.emplace_back(Token::ClosedCaptionsMenuPrimary, "closedCaptions-menu-primary",
            ColorSet{color("gray-95")}.setPressed(color("gray-70")).setHovered(color("gray-80")));
        mThemeColors.emplace_back(Token::ClosedCaptionsMenuBackgroundPrimary, "closedCaptions-menu-background-primary",
            ColorSet{color("gray-95")});
        mThemeColors.emplace_back(Token::ClosedCaptionsBorderSecondary, "closedCaptions-border-secondary",
            ColorSet{color("gray-20")});
        mThemeColors.emplace_back(Token::ClosedCaptionsBorderPrimary, "closedCaptions-border-primary",
            ColorSet{color("gray-80")});
        mThemeColors.emplace_back(Token::HighlightDecision, "highlight-decision",
            ColorSet{color("pink-60")});
        mThemeColors.emplace_back(Token::HighlightSummary, "highlight-summary",
            ColorSet{color("orange-60")});
        mThemeColors.emplace_back(Token::HighlightAgenda, "highlight-agenda",
            ColorSet{color("yellow-60")});
        mThemeColors.emplace_back(Token::HighlightNextstep, "highlight-nextstep",
            ColorSet{color("green-60")});
        mThemeColors.emplace_back(Token::HighlightDebrief, "highlight-debrief",
            ColorSet{color("cyan-60")});
        mThemeColors.emplace_back(Token::HighlightActionitem, "highlight-actionitem",
            ColorSet{color("mint-60")});
        mThemeColors.emplace_back(Token::HighlightNote, "highlight-note",
            ColorSet{color("violet-60")});
        mThemeColors.emplace_back(Token::HighlightReminder, "highlight-reminder",
            ColorSet{color("purple-60")});
        mThemeColors.emplace_back(Token::HighlightParkinglot, "highlight-parkinglot",
            ColorSet{color("slate-60")});
        mThemeColors.emplace_back(Token::WxExternalBadgeBackground, "wx-external-badge-background",
            ColorSet{color("yellow-20")}.setHovered(color("yellow-30")));
        mThemeColors.emplace_back(Token::WxExternalBadgeText, "wx-external-badge-text",
            ColorSet{color("yellow-70")}.setHovered(color("yellow-80")));
        mThemeColors.emplace_back(Token::WxHandRecognizeCircularProgressBarBackground, "wx-hand-recognize-circular-progress-bar-background",
            ColorSet{color("black-100-alpha-08")});
        mThemeColors.emplace_back(Token::WxReactionListItemGradientBackgroundStartColor, "wx-reaction-list-item-gradient-background-start-color",
            ColorSet{color("white-100-alpha-00")});
        mThemeColors.emplace_back(Token::WxReactionListItemGradientBackgroundEndColor, "wx-reaction-list-item-gradient-background-end-color",
            ColorSet{color("white-100-alpha-86")});
        mThemeColors.emplace_back(Token::WxReactionListItemGradientBorderStartColor, "wx-reaction-list-item-gradient-border-start-color",
            ColorSet{color("black-100-alpha-00")});
        mThemeColors.emplace_back(Token::WxReactionListItemGradientBorderEndColor, "wx-reaction-list-item-gradient-border-end-color",
            ColorSet{color("gray-100-alpha-08")});
        mThemeColors.emplace_back(Token::WxReactionExpendButtonColor, "wx-reaction-expend-button-color",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxReactionExpendButtonBorderColor, "wx-reaction-expend-button-border-color",
            ColorSet{color("gray-20")});
        mThemeColors.emplace_back(Token::WxReactionListBackgroundColor, "wx-reaction-list-background-color",
            ColorSet{color("transparent")}.setHovered(color("white-100-alpha-40")));
        mThemeColors.emplace_back(Token::WxReactionListBackgroundColorVdi, "wx-reaction-list-background-color-vdi",
            ColorSet{color("transparent")}.setHovered(color("white-100-alpha-40")));
        mThemeColors.emplace_back(Token::WxReactionListItemBackgroundColor, "wx-reaction-list-item-background-color",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxReactionListItemBorderColor, "wx-reaction-list-item-border-color",
            ColorSet{color("black-100-alpha-08")});
        mThemeColors.emplace_back(Token::WxReactionListAvatarBorderColor, "wx-reaction-list-avatar-border-color",
            ColorSet{color("white-100-alpha-80")});
        mThemeColors.emplace_back(Token::WxReactionRecognizableIndicatorBackground, "wx-reaction-recognizable-indicator-background",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxMultitaskPanelButtonBackground, "wx-multitask-panel-button-background",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::WxMultitaskPanelButtonBackgroundOutline, "wx-multitask-panel-button-background-outline",
            ColorSet{color("gray-20")});
        mThemeColors.emplace_back(Token::WxMultitaskShadowWindow, "wx-multitask-shadow-window",
            ColorSet{color("black")});
        mThemeColors.emplace_back(Token::WxMultitaskActivespeakerBackground, "wx-multitask-activespeaker-background",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::WxRaiseHandRecognizableIndicatorBackground, "wx-raise-hand-recognizable-indicator-background",
            ColorSet{color("gray-10")});
        mThemeColors.emplace_back(Token::WxDeviceNewvolumnControlButtonBackground, "wx-device-newvolumn-control-button-background",
            ColorSet{color("white-100")}.setPressed(color("gray-20")).setHovered(color("gray-10")));
        mThemeColors.emplace_back(Token::WxDeviceNewvolumnControlButtonBorder, "wx-device-newvolumn-control-button-border",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::WxPhonenumberListBackground, "wx-phonenumber-list-background",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::WxActivatedDeviceStatus, "wx-activated-device-status",
            ColorSet{color("green-50")}.setDisabled(color("gray-30")));
        mThemeColors.emplace_back(Token::WxUcAccountInformationAlertBackground, "wx-uc-account-information-alert-background",
            ColorSet{color("yellow-05")});
        mThemeColors.emplace_back(Token::ParticipantListMutedIconColor, "participant-list-muted-icon-color",
            ColorSet{color("red-65")});
        mThemeColors.emplace_back(Token::ParticipantListMicrophoneOnColor, "participant-list-microphone-on-color",
            ColorSet{color("green-35")});
        mThemeColors.emplace_back(Token::WxDefaultAvatarBackground, "wx-default-avatar-background",
            ColorSet{color("gray-30")});
        mThemeColors.emplace_back(Token::WxLeftpaneShortcutAppIconOrange, "wx-leftpane-shortcut-app-icon-orange",
            ColorSet{color("orange-70")});
        mThemeColors.emplace_back(Token::WxLeftpaneShortcutAppIconGold, "wx-leftpane-shortcut-app-icon-gold",
            ColorSet{color("gold-70")});
        mThemeColors.emplace_back(Token::WxLeftpaneShortcutAppIconOlive, "wx-leftpane-shortcut-app-icon-olive",
            ColorSet{color("olive-70")});
        mThemeColors.emplace_back(Token::WxLeftpaneShortcutAppIconLime, "wx-leftpane-shortcut-app-icon-lime",
            ColorSet{color("lime-70")});
        mThemeColors.emplace_back(Token::WxLeftpaneShortcutAppIconMint, "wx-leftpane-shortcut-app-icon-mint",
            ColorSet{color("mint-70")});
        mThemeColors.emplace_back(Token::WxLeftpaneShortcutAppIconCyan, "wx-leftpane-shortcut-app-icon-cyan",
            ColorSet{color("cyan-70")});
        mThemeColors.emplace_back(Token::WxLeftpaneShortcutAppIconCobalt, "wx-leftpane-shortcut-app-icon-cobalt",
            ColorSet{color("cobalt-70")});
        mThemeColors.emplace_back(Token::WxLeftpaneShortcutAppIconSlate, "wx-leftpane-shortcut-app-icon-slate",
            ColorSet{color("slate-70")});
        mThemeColors.emplace_back(Token::WxLeftpaneShortcutAppIconViolet, "wx-leftpane-shortcut-app-icon-violet",
            ColorSet{color("violet-70")});
        mThemeColors.emplace_back(Token::WxLeftpaneShortcutAppIconPurple, "wx-leftpane-shortcut-app-icon-purple",
            ColorSet{color("purple-70")});
        mThemeColors.emplace_back(Token::WxLeftpaneShortcutAppIconPink, "wx-leftpane-shortcut-app-icon-pink",
            ColorSet{color("pink-70")});
        mThemeColors.emplace_back(Token::WxTextEditBackground, "wx-textEdit-background",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::WxTextEditText, "wx-textEdit-text",
            ColorSet{color("gray-100")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxSliderFull, "wx-slider-full",
            ColorSet{color("blue-50")});
        mThemeColors.emplace_back(Token::WxSliderEmpty, "wx-slider-empty",
            ColorSet{color("gray-30")});
        mThemeColors.emplace_back(Token::WxSliderHandle, "wx-slider-handle",
            ColorSet{color("white")}.setPressed(color("gray-20")));
        mThemeColors.emplace_back(Token::WxRecordingThumbnailBackground, "wx-recording-thumbnail-background",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::WxRecordingThumbnailBorder, "wx-recording-thumbnail-border",
            ColorSet{color("gray-80")});
        mThemeColors.emplace_back(Token::WxRecordingControlsBackground, "wx-recording-controls-background",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::WxRecordingVideoBackground, "wx-recording-video-background",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::WxTopBarMainMinMaxButtonBackground, "wx-topBarMainMinMaxButton-background",
            ColorSet{color("transparent")}.setPressed(color("gray-60")).setHovered(color("gray-70")));
        mThemeColors.emplace_back(Token::WxUnreadPillButtonCheckedColor, "wx-unread-pill-button-checked-color",
            ColorSet{color("gray-40")});
        mThemeColors.emplace_back(Token::WxListItemTextPrimary, "wx-listItemText-primary",
            ColorSet{color("gray-100")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxListItemTextSecondary, "wx-listItemText-secondary",
            ColorSet{color("gray-70")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxSpaceHeaderButtonText, "wx-space-header-button-text",
            ColorSet{color("gray-100")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxDefaultBorderForButton, "wx-defaultBorderForButton",
            ColorSet{color("transparent")});
        mThemeColors.emplace_back(Token::WxAppextensionListItemBorder, "wx-appextension-listItem-border",
            ColorSet{color("black-100-alpha-20")}.setFocused(color("blue-60")));
        mThemeColors.emplace_back(Token::WxPopupWidgetBorder, "wx-popup-widget-border",
            ColorSet{color("black-100-alpha-20")});
        mThemeColors.emplace_back(Token::WxAppextensionClearIcon, "wx-appextension-clear-icon",
            ColorSet{color("gray-70")});
        mThemeColors.emplace_back(Token::WxSendMessageIcon, "wx-sendMessage-icon",
            ColorSet{color("blue-60")}.setPressed(color("blue-80")).setHovered(color("blue-70")).setChecked(color("blue-80")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxInvertedButtonText, "wx-inverted-button-text",
            ColorSet{color("gray-100")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxMeetingsInnerButtonColor, "wx-meetingsInnerButton-color",
            ColorSet{color("gray-05")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxSubheaderText, "wx-subheader-text",
            ColorSet{color("gray-70")});
        mThemeColors.emplace_back(Token::WxCloseCreateSpaceButon, "wx-closeCreateSpaceButon",
            ColorSet{color("gray-50")}.setPressed(color("blue-40")));
        mThemeColors.emplace_back(Token::WxAppextensionDefaultWebsiteIcon, "wx-appextension-default-website-icon",
            ColorSet{color("gray-70")});
        mThemeColors.emplace_back(Token::WxTabSelectorViewText, "wx-tabSelectorView-text",
            ColorSet{color("gray-100")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxTeamNameLabelText, "wx-teamNameLabel-text",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxAppextensionInfoDialogAddedBy, "wx-appextension-info-dialog-added-by",
            ColorSet{color("blue-70")});
        mThemeColors.emplace_back(Token::WxRecordingContainerBorder, "wx-recordingContainer-border",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxAddNewTeamBackground, "wx-addNewTeam-background",
            ColorSet{color("gray-05")}.setPressed(color("gray-20")).setHovered(color("gray-10")).setDisabled(color("gray-100")));
        mThemeColors.emplace_back(Token::WxAddNewTeamText, "wx-addNewTeam-text",
            ColorSet{color("gray-100")});
        mThemeColors.emplace_back(Token::WxUnreadMessageIndicator, "wx-unreadMessageIndicator",
            ColorSet{color("blue-50")});
        mThemeColors.emplace_back(Token::WxMeetingSpaceName, "wx-meetingSpaceName",
            ColorSet{color("blue-70")});
        mThemeColors.emplace_back(Token::WxMeetingInProgress, "wx-meetingInProgress",
            ColorSet{color("green-50")});
        mThemeColors.emplace_back(Token::WxAlertTextErrorMeetingConflict, "wx-alertText-error-meeting-conflict",
            ColorSet{color("red-70")});
        mThemeColors.emplace_back(Token::WxTextPrimaryMeetingInfo, "wx-text-primary-meeting-info",
            ColorSet{color("gray-100")}.setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxCheckMark, "wx-checkMark",
            ColorSet{color("blue-70")}.setPressed(color("blue-90")).setHovered(color("blue-90")).setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxDeviceConnectionBorder, "wx-deviceConnection-border",
            ColorSet{color("gray-20")});
        mThemeColors.emplace_back(Token::WxDeviceVolumeControlBorder, "wx-device-volume-control-border",
            ColorSet{color("white-100")});
        mThemeColors.emplace_back(Token::UtLegacySettingsIcon, "ut-legacy-settings-icon",
            ColorSet{color("gray-100")}.setPressed(color("blue-80")).setHovered(color("blue-70")).setChecked(color("blue-60")).setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::UtLegacyFavoriteIcon, "ut-legacy-favorite-icon",
            ColorSet{color("gray-100")}.setPressed(color("yellow-70")).setHovered(color("yellow-60")).setChecked(color("yellow-50")).setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::UtLegacyExpressiveMessageIcon, "ut-legacy-expressiveMessage-icon",
            ColorSet{color("gray-70")}.setPressed(color("blue-60")).setHovered(color("blue-50")).setChecked(color("blue-60")).setDisabled(color("gray-40")));
        mThemeColors.emplace_back(Token::WxDeviceDisconnectButton, "wx-device-disconnect-button",
            ColorSet{color("red-60")}.setPressed(color("red-80")).setHovered(color("red-70")).setChecked(color("red-80")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::WxNotificationBorderShadow, "wx-notification-border-shadow",
            ColorSet{color("black-100-alpha-16")});
        mThemeColors.emplace_back(Token::WxHaloEffectSolidWaveStart, "wx-halo-effect-solid-wave-start",
            ColorSet{color("mint-40")});
        mThemeColors.emplace_back(Token::WxHaloEffectSolidWaveEnd, "wx-halo-effect-solid-wave-end",
            ColorSet{color("blue-100")});
        mThemeColors.emplace_back(Token::WxHaloEffectOutsideWaveStart, "wx-halo-effect-outside-wave-start",
            ColorSet{color("mint-40-alpha-40")});
        mThemeColors.emplace_back(Token::WxHaloEffectOutsideWaveEnd, "wx-halo-effect-outside-wave-end",
            ColorSet{color("blue-100-alpha-40")});
        mThemeColors.emplace_back(Token::ButtonSecondaryBackground, "button-secondary-background",
            ColorSet{color("transparent")}.setPressed(color("gray-40")).setHovered(color("gray-30")).setDisabled(color("gray-20")));
        mThemeColors.emplace_back(Token::ButtonSecondaryBorder, "button-secondary-border",
            ColorSet{color("black-100-alpha-30")}.setDisabled(color("black-100-alpha-20")));
        mThemeColors.emplace_back(Token::ButtonGhostBackground, "button-ghost-background",
            ColorSet{color("transparent")}.setPressed(color("black-100-alpha-20")).setHovered(color("black-100-alpha-07")).setDisabled(color("black-100-alpha-20")));
        mThemeColors.emplace_back(Token::ButtonSecondaryText, "button-secondary-text",
            ColorSet{color("black-100-alpha-95")}.setDisabled(color("black-100-alpha-40")));
        mThemeColors.emplace_back(Token::ButtonGhostBorder, "button-ghost-border",
            ColorSet{color("transparent")});
        mThemeColors.emplace_back(Token::ModalPrimaryBackground, "modal-primary-background",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::ModalPrimaryBorder, "modal-primary-border",
            ColorSet{color("black-100-alpha-20")});
        mThemeColors.emplace_back(Token::ModalSecondaryBackground, "modal-secondary-background",
            ColorSet{color("gray-05")});
        mThemeColors.emplace_back(Token::ModalSecondaryBorder, "modal-secondary-border",
            ColorSet{color("black-100-alpha-20")});
        mThemeColors.emplace_back(Token::SeparatorSecondary, "separator-secondary",
            ColorSet{color("black-100-alpha-20")});
        mThemeColors.emplace_back(Token::ListitemBackground, "listitem-background",
            ColorSet{color("transparent")}.setPressed(color("black-100-alpha-11")).setHovered(color("black-100-alpha-05")));
        mThemeColors.emplace_back(Token::ListitemTick, "listitem-tick",
            ColorSet{color("rebranding-blue-70")}.setDisabled(color("black-100-alpha-40")));
        mThemeColors.emplace_back(Token::CheckboxCheckedBorder, "checkbox-checked-border",
            ColorSet{color("rebranding-blue-70")});
        mThemeColors.emplace_back(Token::SharewindowPreviewActive, "sharewindow-preview-active",
            ColorSet{color("orange-60")});
        mThemeColors.emplace_back(Token::SharewindowPreviewInactive, "sharewindow-preview-inactive",
            ColorSet{color("gray-60")});
        mThemeColors.emplace_back(Token::SharewindowBorderSelected, "sharewindow-border-selected",
            ColorSet{color("rebranding-green-50")});
        mThemeColors.emplace_back(Token::SharewindowBorderActive, "sharewindow-border-active",
            ColorSet{color("orange-50")});
        mThemeColors.emplace_back(Token::SharewindowBorderInactive, "sharewindow-border-inactive",
            ColorSet{color("gray-50")});
        mThemeColors.emplace_back(Token::WxRemoteShareBackground, "wx-remote-share-background",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::TabActiveBackground, "tab-active-background",
            ColorSet{color("black-100-alpha-20")}.setHovered(color("black-100-alpha-30")));
        mThemeColors.emplace_back(Token::TabActiveText, "tab-active-text",
            ColorSet{color("black-100-alpha-95")});
        mThemeColors.emplace_back(Token::TabInactiveBackground, "tab-inactive-background",
            ColorSet{color("black-100-alpha-00")}.setPressed(color("black-100-alpha-20")).setHovered(color("black-100-alpha-07")));
        mThemeColors.emplace_back(Token::TabInactiveText, "tab-inactive-text",
            ColorSet{color("black-100-alpha-60")}.setPressed(color("black-100-alpha-95")).setHovered(color("black-100-alpha-95")).setDisabled(color("black-100-alpha-40")));
        mThemeColors.emplace_back(Token::ListitemTextprimary, "listitem-textprimary",
            ColorSet{color("black-100-alpha-95")}.setDisabled(color("black-100-alpha-40")));
        mThemeColors.emplace_back(Token::ListitemTextsecondary, "listitem-textsecondary",
            ColorSet{color("black-100-alpha-70")}.setDisabled(color("black-100-alpha-40")));
        mThemeColors.emplace_back(Token::ButtonSecondaryActiveBackground, "button-secondary-active-background",
            ColorSet{color("black-100-alpha-20")}.setPressed(color("black-100-alpha-40")).setHovered(color("black-100-alpha-30")));
        mThemeColors.emplace_back(Token::ButtonSecondaryActiveText, "button-secondary-active-text",
            ColorSet{color("black-100-alpha-95")}.setDisabled(color("black-100-alpha-40")));
        mThemeColors.emplace_back(Token::ButtonSecondaryActiveBorder, "button-secondary-active-border",
            ColorSet{color("transparent")});
        mThemeColors.emplace_back(Token::ButtonInvertedBackground, "button-inverted-background",
            ColorSet{color("white")}.setPressed(color("gray-20")).setHovered(color("gray-10")));
        mThemeColors.emplace_back(Token::ButtonInvertedText, "button-inverted-text",
            ColorSet{color("black-100-alpha-95")}.setDisabled(color("black-100-alpha-40")));
        mThemeColors.emplace_back(Token::ButtonInvertedBorder, "button-inverted-border",
            ColorSet{color("black-100-alpha-20")});
        mThemeColors.emplace_back(Token::BannerWarningBackground, "banner-warning-background",
            ColorSet{color("rebranding-yellow-10")});
        mThemeColors.emplace_back(Token::BannerWarningText, "banner-warning-text",
            ColorSet{color("rebranding-yellow-70")});
        mThemeColors.emplace_back(Token::BannerIssueBackground, "banner-issue-background",
            ColorSet{color("rebranding-yellow-10")});
        mThemeColors.emplace_back(Token::LabelWarningText, "label-warning-text",
            ColorSet{color("rebranding-yellow-70")});
        mThemeColors.emplace_back(Token::WxSharewindowDragger, "wx-sharewindow-dragger",
            ColorSet{color("white-100-alpha-30")});
        mThemeColors.emplace_back(Token::SharewindowControlTextPrimary, "sharewindow-control-text-primary",
            ColorSet{color("white-100-alpha-95")}.setDisabled(color("white-100-alpha-40")));
        mThemeColors.emplace_back(Token::SharewindowControlButtonPrimaryBackground, "sharewindow-control-button-primary-background",
            ColorSet{color("white-100-alpha-95")}.setPressed(color("white-100-alpha-70")).setHovered(color("white-100-alpha-80")).setDisabled(color("white-100-alpha-70")));
        mThemeColors.emplace_back(Token::SharewindowControlButtonPrimaryText, "sharewindow-control-button-primary-text",
            ColorSet{color("black")}.setDisabled(color("black-100-alpha-40")));
        mThemeColors.emplace_back(Token::SharewindowControlButtonSecondaryBackground, "sharewindow-control-button-secondary-background",
            ColorSet{color("transparent")}.setPressed(color("white-100-alpha-20")).setHovered(color("white-100-alpha-07")).setDisabled(color("white-100-alpha-20")));
        mThemeColors.emplace_back(Token::SharewindowControlButtonSecondaryBorder, "sharewindow-control-button-secondary-border",
            ColorSet{color("white-100-alpha-30")});
        mThemeColors.emplace_back(Token::SharewindowControlButtonSecondaryText, "sharewindow-control-button-secondary-text",
            ColorSet{color("white-100-alpha-95")}.setDisabled(color("white-100-alpha-40")));
        mThemeColors.emplace_back(Token::SharewindowControlButtonActiveBackground, "sharewindow-control-button-active-background",
            ColorSet{color("white-100-alpha-20")}.setPressed(color("white-100-alpha-40")).setHovered(color("white-100-alpha-30")).setDisabled(color("white-100-alpha-40")));
        mThemeColors.emplace_back(Token::SharewindowControlButtonActiveBorder, "sharewindow-control-button-active-border",
            ColorSet{color("white-100-alpha-30")});
        mThemeColors.emplace_back(Token::SharewindowControlButtonActiveText, "sharewindow-control-button-active-text",
            ColorSet{color("white-100-alpha-95")}.setDisabled(color("white-100-alpha-40")));
        mThemeColors.emplace_back(Token::ThemeGradientSecondary0Background, "theme-gradient-secondary-0-background",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::ThemeGradientSecondary1Background, "theme-gradient-secondary-1-background",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::WxCurrentCallingStatusBackground, "wx-currentCallingStatus-background",
            ColorSet{color("black-100-alpha-95")});
        mThemeColors.emplace_back(Token::ListitemTextprimaryNormal, "listitem-textprimary-normal",
            ColorSet{color("black-100-alpha-95")});
        mThemeColors.emplace_back(Token::AlertbadgeAnnouncementBackground, "alertbadge-announcement-background",
            ColorSet{color("rebranding-blue-10")}.setPressed(color("rebranding-blue-20")));
        mThemeColors.emplace_back(Token::AlertbadgeAnnouncementText, "alertbadge-announcement-text",
            ColorSet{color("rebranding-blue-70")}.setPressed(color("rebranding-blue-60")).setHovered(color("rebranding-blue-60")));
        mThemeColors.emplace_back(Token::ListitemTextmissed, "listitem-textmissed",
            ColorSet{color("rebranding-red-70")});
        mThemeColors.emplace_back(Token::WxCheckedQradiobuttonBorder, "wx-checked-qradiobutton-border",
            ColorSet{color("blue-50")});
        mThemeColors.emplace_back(Token::WxUncheckedQradiobuttonBorder, "wx-unchecked-qradiobutton-border",
            ColorSet{color("gray-30")});
        mThemeColors.emplace_back(Token::WxCheckedQradiobuttonBackgroud, "wx-checked-qradiobutton-backgroud",
            ColorSet{color("white")});
        mThemeColors.emplace_back(Token::SharewindowViewwindowActive, "sharewindow-viewwindow-active",
            ColorSet{color("orange-60")});
        mThemeColors.emplace_back(Token::SharewindowViewwindowHovered, "sharewindow-viewwindow-hovered",
            ColorSet{color("black-100-alpha-20")});
        mThemeColors.emplace_back(Token::SharewindowViewwindowSelected, "sharewindow-viewwindow-selected",
            ColorSet{color("rebranding-blue-70")});
        mThemeColors.emplace_back(Token::BadgeTabActiveDarkBackgroundLegacy, "badge-tab-active-dark-background-legacy",
            ColorSet{color("black-100-alpha-20")});
        mThemeColors.emplace_back(Token::BadgeTabActiveLightBackgroundLegacy, "badge-tab-active-light-background-legacy",
            ColorSet{color("white-100-alpha-20")});
        mThemeColors.emplace_back(Token::BadgeTabInactiveDarkBackgroundLegacy, "badge-tab-inactive-dark-background-legacy",
            ColorSet{color("transparent")}.setHovered(color("black-100-alpha-07")));
        mThemeColors.emplace_back(Token::BadgeTabInactiveLightBackgroundLegacy, "badge-tab-inactive-light-background-legacy",
            ColorSet{color("transparent")}.setHovered(color("white-100-alpha-07")));
        mThemeColors.emplace_back(Token::BadgeTabInactiveTextDarkBackgroundLegacy, "badge-tab-inactive-text-dark-background-legacy",
            ColorSet{color("black-100-alpha-70")});
        mThemeColors.emplace_back(Token::BadgeTabInactiveTextLightBackgroundLegacy, "badge-tab-inactive-text-light-background-legacy",
            ColorSet{color("white-100-alpha-70")});
        mThemeColors.emplace_back(Token::BadgeTabActiveTextDarkBackgroundLegacy, "badge-tab-active-text-dark-background-legacy",
            ColorSet{color("black-100-alpha-95")});
        mThemeColors.emplace_back(Token::BadgeTabActiveTextLightBackgroundLegacy, "badge-tab-active-text-light-background-legacy",
            ColorSet{color("white-100-alpha-95")});
        mThemeColors.emplace_back(Token::ConnectDialogBackground, "connect-dialog-background",
            ColorSet{color("gray-10")});
    }

    ThemeColors DefaultTheme::getThemeColors() const
    {
        return mThemeColors;
    }

    ThemeColors DefaultTheme::getRelevantColors() const
    {
        return mThemeColors;
    }
    
    template<typename T>
    static ColorSet getColorSetImpl(T searchKey, const ThemeColors& themeColors)
    {
        const auto colorSetIt = std::find_if(std::cbegin(themeColors), std::cend(themeColors), [=](auto themeColor)
            {
                return std::get<T>(themeColor) == searchKey;
            });

        return colorSetIt != std::end(themeColors) ? std::get<ColorSet>(*colorSetIt) : ColorSet{ Color{} };
    }

    ColorSet DefaultTheme::getColorSet(Token token) const
    {
        return getColorSetImpl(token, mThemeColors);
    }

    ColorSet DefaultTheme::getColorSet(const std::string& tokenString) const
    {
        return getColorSetImpl(tokenString, mThemeColors);
    }

    Color DefaultTheme::getColorByPath(const std::string& path) const
    {
        return Color{};
    }

    std::string DefaultTheme::getName() const
    {
        return "Default";
    }

    std::string DefaultTheme::tokenToString(Token token) const
    {
        return SemanticVisuals::tokenToString(token);
    }

/*
    std::string DefaultTheme::tokenToString(Token token) const
    {
        const auto colorSetIt = std::find_if(std::cbegin(mThemeColors), std::cend(mThemeColors), [=](auto t)
        {
            return std::get<Token>(t) == token;
        });

        return colorSetIt != std::end(mThemeColors) ? std::get<std::string>(*colorSetIt) : "";
    }
*/

    Token DefaultTheme::tokenFromString(const std::string& tokenString) const
    {
        return SemanticVisuals::tokenFromString(tokenString);
    }

/*
    Token DefaultTheme::tokenFromString(const std::string& tokenString) const
    {
        const auto colorSetIt = std::find_if(std::cbegin(mThemeColors), std::cend(mThemeColors), [=](auto t)
        {
            return std::get<std::string>(t) == tokenString;
        });

        return colorSetIt != std::end(mThemeColors) ? std::get<Token>(*colorSetIt) : Token::Unknown;
    }
*/

    bool DefaultTheme::isValidToken(Token token) const
    {
        return token != Token::Unknown;
    }

}