/*
    This file is AUTOGENERATED - DO NOT EDIT, or your changes will be lost
    Copyright 2020 Cisco Systems
*/

#pragma once

#include <string>

namespace SemanticVisuals
{
    enum class Token
    {
        Unknown,
        OverlayPrimary,
        OverlaySecondary,
        AvatarOverlay,
        ListItemPrimary,
        ListItemSecondary,
        ListItemTertiary,
        ListItemQuaternary,
        MessageListItem,
        AlertBackgroundDefault,
        AlertBackgroundError,
        AlertBackgroundSuccess,
        AlertBackgroundWarning,
        AlertTextDefault,
        AlertTextError,
        AlertTextSuccess,
        AlertTextWarning,
        BackgroundPrimary,
        WxAddParticipantsButtonInCallIcon,
        BackgroundSecondary,
        BackgroundTertiary,
        BackgroundQuaternary,
        BackgroundContrary,
        PopoverBackground,
        PopoverBackgroundCoachmark,
        PopoverCoachmarkText,
        PopoverCoachmarkButton,
        ButtonPrimary,
        ButtonPrimaryOutline,
        ButtonOutlinePrimaryBackground,
        ButtonOutlinePrimary,
        ButtonOutlineTextPrimary,
        ButtonSecondary,
        ButtonSecondaryOutline,
        ButtonOutlineSecondaryBackground,
        ButtonOutlineSecondary,
        ButtonOutlineTextSecondary,
        ButtonTertiary,
        ButtonCancel,
        ButtonCancelOutline,
        ButtonTextCancel,
        ButtonOutlineCancel,
        ButtonOutlineBorderCancel,
        ButtonOutlineTextCancel,
        ButtonQuaternary,
        ButtonGhost,
        ButtonGhostOutline,
        ButtonGhostTransparent,
        ButtonCallPrimary,
        ButtonCallSecondary,
        ButtonJoinPrimary,
        ButtonJoinPrimaryOutline,
        ButtonJoinBorderPrimary,
        FocusBorder,
        ButtonTextPrimary,
        ButtonTextSecondary,
        ButtonTextTertiary,
        ButtonTextQuaternary,
        ButtonTextGhost,
        ButtonOutlineJoin,
        InputBackground,
        SignInInputBackground,
        SignInInputOutline,
        InputBackgroundError,
        InputOutlineError,
        InputBackgroundWarning,
        InputOutlineWarning,
        InputTextWarning,
        BackgroundGradientStart,
        BackgroundGradientEnd,
        ContentGradientStart,
        ContentGradientEnd,
        InputOutline,
        InputTextPrimary,
        InputTextSecondary,
        WxInputTextSecondaryInverted,
        InputTextError,
        InputFocusRing,
        ModalDecorativeButtonPrimary,
        ModalDecorativeButtonText,
        ModalDecorativeButtonSecondary,
        ModalDecorativeButtonTextPrimary,
        ModalDecorativeButtonTextSecondary,
        ModalDecorativeBackgroundPrimarySlate,
        ModalDecorativeBackgroundPrimaryGold,
        ModalDecorativeBackgroundPrimaryViolet,
        ModalDecorativeBackgroundPrimaryMint,
        ModalDecorativeBackgroundPrimaryGreen,
        ModalDecorativeBackgroundPrimaryCobalt,
        ModalDecorativeBackgroundPrimaryBlue,
        ModalDecorativeBackgroundSecondarySlate,
        ModalDecorativeBackgroundSecondaryYellow,
        ModalDecorativeBackgroundSecondaryViolet,
        ModalDecorativeTitleSlate,
        ModalDecorativeTitleGold,
        ModalDecorativeTitleViolet,
        ModalDecorativeTitleMint,
        ModalDecorativeTitleGreen,
        ModalDecorativeTitleCobalt,
        ModalTextPrimary,
        ModalTextSecondary,
        TextHighlight,
        TextHyperlink,
        TextPrimary,
        TextSecondary,
        LegacySeparatorPrimary,
        LegacySeparatorSecondary,
        FooterBackground,
        EditSpaceSettingsButton,
        EditSpaceSettingsButtonText,
        EditSpaceSettingsButtonBorder,
        WhiteboardStickyNoteYellow,
        ScrollbarBackgroundGutter,
        WxKeyboardactionBackground,
        WxKeyboardactionBorder,
        WxKeyboardactionLabelText,
        WxCallWindowContainerBackground,
        WxCallWindowContentBackground,
        WxApplicationHeaderUserDeviceButtonText,
        WxAudioSelectionItemBackground,
        WxAudioSelectionItemInternalText,
        WxAudioSelectionItemVariantText,
        WxAudioVideoDeviceWarnIconBorder,
        WxAuxDeviceButtonBorder,
        WxAuxDeviceItemBackground,
        WxAuxDeviceItemBorder,
        WxAuxDeviceItemText,
        WxAuxDeviceItemCheckboxBackground,
        WxAuxDeviceItemCheckboxBorder,
        WxAuxDeviceSelectorButtonText,
        WxAuxDeviceUnknownItemText,
        WxAvatarMainAreaInnerRingBackground,
        WxButtonCallBackground,
        WxCallActivityDeviceIcon,
        WxCallingInterstitialPageBackground,
        WxCallMeCheckboxBackground,
        WxCallSettingButtonStateIcon,
        WxContactCardViewButtonBackground,
        WxContactCardViewButtonIcon,
        WxContactCardViewPhoneNumber,
        WxContentTabViewButtonText,
        WxContentTabViewButtonCheckedText,
        WxContentTabViewDropDownButton,
        WxContentTabViewFilesButton,
        WxContentTabViewFilesButtonChecked,
        WxContentTabViewLinksButton,
        WxContentTabViewLinksButtonChecked,
        WxContentTabViewRecordingsButton,
        WxContentTabViewRecordingsButtonChecked,
        WxContentTabViewWhiteboardButton,
        WxContentTabViewWhiteboardButtonChecked,
        WxContextMenuBackground,
        WxContextMenuText,
        WxPopupDropShadow,
        WxDefaultBorder,
        WxDefaultText,
        WxDefaultInvertedColorText,
        WxDefaultTextWithPressedText,
        WxFileBrickletBadgeBackground,
        WxFileBrickletBadgeText,
        WxFileBrickletCloseButtonBackground,
        WxFileBrickletCloseButtonDataBackground,
        WxFileBrickletStagingBackground,
        WxBalloonBackground,
        WxBalloonBorder,
        WxBalloonText,
        WxFileBrickletStagingImageBackground,
        WxGiphyBackground,
        WxGiphyFocusBorderBackground,
        WxGiphyIntegrationWidgetCancelSearchButtonBackground,
        WxEmojiPickerSearchBackground,
        WxEmojiPickerSearchBorder,
        WxEmojiPickerEmojiBackground,
        WxEmojiPickerSkinBackground,
        WxEmojiPickerCategoryIcon,
        WxEmojiPickerCategoryBorderTop,
        WxHeadingColorBackground,
        WxHeadingColorText,
        WxInputActionButtonBackground,
        WxInputBoxWidgetHasExternalParticipantBackground,
        WxInputBoxWidgetHasExternalParticipantBorder,
        WxClassificationInputBoxBackground,
        WxErrorMessageBackground,
        WxClassificationInputBoxBorder,
        WxInputBoxWidgetWithoutExternalParticipantBorder,
        WxLeaveSpaceButton,
        WxMenuItemButtonBackground,
        WxMenuItemButtonText,
        WxMarkButtonBackground,
        WxMessageHighlightsHeaderBackground,
        WxMessageHighlightsHeaderText,
        WxMessageHighlightsBorder,
        WxMessageHighlightsSignalBackground,
        WxMessageInputActionMarkDownButtonBackground,
        WxMessageInputActionExternalParticipantButtonBackground,
        WxMessageInputActionClassificationLabelBackground,
        WxMessageInputActionClassificationLabelBorder,
        WxMessageInputActionClassificationLabelText,
        WxNativeMessageTextBackground,
        WxOverlayBackground,
        WxOverlayUserGuidance,
        WxAddParticipantsButtonBackground,
        WxAddParticipantsButtonBackgroundOutline,
        WxAddParticipantsButtonIcon,
        WxExternalParticipantsBackground,
        WxExternalParticipantsText,
        WxQuoteWidgetBackground,
        WxQuoteWidgetBarBackground,
        WxRichTextMarkDownButtonBackground,
        WxSearchBackground,
        WxSpaceTabsBackground,
        WxSpaceTabsText,
        WxSpaceTabsUnderline,
        WxSubheadingText,
        WxSubheadingInvertedText,
        WxFavoriteIcon,
        WxSpaceActionsButtonBackground,
        WxSpaceActionsButtonText,
        WxSpaceActionsButtonIcon,
        WxSpinnerWithLabelBackground,
        WxSpinnerWithLabelText,
        WxTextInputBoxCodeBackground,
        WxTextInputBoxLinkText,
        WxTextInputBoxMessageText,
        WxBrickletAvatarErrorIconBackground,
        WxBrickletAvatarErrorIconBorder,
        WxBrickletAvatarIconBackground,
        WxBrickletItemBackground,
        WxBrickletItemHeaderText,
        WxBrickletItemTimerText,
        WxBrickletItemValidText,
        WxBrickletJoinButtonBackground,
        WxBrickletJoinButtonIMOnlyBackground,
        WxBrickletJoinButtonZSMBackground,
        WxBrickletJoinButtonZSMSharingBackground,
        WxBrickletJoinCallingBackground,
        WxBrickletJoinedButtonBackground,
        WxBrickletJoinedAdminButtonBackground,
        WxBrickletNotificationIconBackground,
        WxFilteredListHeaderText,
        WxFilteredListBodyText,
        WxMentionsHighlightText,
        WxIncomingMessageToastReplyLabel,
        WxIncomingMessageToastFileLabel,
        MainListIndicator,
        WxMediaOptionTitleFontColor,
        WxPreviewBackgroundButton,
        WxAddNewTeamButtonBackground,
        WxAddNewTeamButtonBorder,
        WxAddNewTeamButtonIcon,
        WxCallPullButtonBackground,
        WxParticipantsListDelegateBackground,
        WxNewParticipantsListDelegateBackground,
        WxPlusButtonBackground,
        WxPlusButtonSecColumnBackground,
        WxPlusButtonBorder,
        WxPlusButtonSecColumnBorder,
        WxPlusButtonIcon,
        WxPlusButtonSecColumnIcon,
        WxPlusButtonThirdColumnBackground,
        WxPlusButtonThirdColumnIcon,
        WxProgressbar,
        WxPhoneNumberRefreshButton,
        WxConversationActivitiesShareButton,
        WxConversationActivitiesShareButtonOutline,
        WxConversationActivitiesCallButton,
        WxConversationsHeaderText,
        WxConversationsSubHeaderText,
        WxInputBoxWidgetMentionsText,
        WxValidIcon,
        WxInvalidIcon,
        WxUrgentIcon,
        WxErrorText,
        WxCallPickupErrorBackground,
        WxCallPickupErrorText,
        WxOtherPickupBackground,
        WxOtherPickupText,
        WxCallForwardItemBrushBackground,
        WxCallForwardListItemBrushBackground,
        WxCallMeConnectionRectPenBackground,
        WxCallPreferencesButtonIcon,
        WxDefaultOnSecondColumnText,
        WxCustomStatusEmojiButton,
        WxSearchPlaceholderText,
        WxAvatarMenuItemIcon,
        WxMenuListBackground,
        WxControlButtonTransitioningBackground,
        WxLineEditBorder,
        WxLineEditErrorBorder,
        WxDefaultCheckbox,
        CheckboxCheckedBackground,
        CheckboxBackground,
        CheckboxIndicator,
        WxFourthColumnInnerRingBackground,
        WxPlaceHolderText,
        WxSearchButtonColorsBackground,
        WxSearchInputBoxContainerIcon,
        WxSearchItemAvatarInnerRingBackground,
        WxSearchItemContactItemHighlightedText,
        WxSearchItemSelectedContactAvatarInnerRingBackground,
        WxSearchItemDelegateEmptySeparatorExistBackground,
        WxSearchItemJoinButtonBackground,
        WxSearchItemMentionItemHighlightedText,
        WxSearchItemNewSpaceItemPenAndBrush,
        WxSearchItemModifierTypeFillPath,
        WxSearchItemModifierTypeItemPen,
        WxSearchItemText,
        WxSearchItemDelegatorMoreButtonBackground,
        WxSearchModifierInputPathBackground,
        WxSearchModifierInputText,
        WxSearchPeoplePresenceText,
        WxSearchResultListImageBackground,
        WxSearchResultSeparatorBackground,
        WxSpaceListText,
        WxSpaceListSubHeadingText,
        WxGhDropShadow,
        AppHeader,
        AppHeaderBorder,
        AppHeaderButtonStatus,
        AppHeaderButtonDevice,
        AppHeaderButtonDeviceTextActive,
        WxGhUserDeviceText,
        AppHeaderText,
        WxGhCancelSearchButton,
        WxGhCancelSearchButtonText,
        WxSearchItemWidget,
        WxSearchItemWidgetText,
        WxSearchItemWidgetIcon,
        WxCancelSearchButton,
        WxCancelSearchButtonText,
        WxGhSearchInputBoxActiveBorder,
        AppHeaderSearchBarOutlineActive,
        AppHeaderSearchBar,
        AppHeaderSearchBarActive,
        WxGhSearchInputBoxText,
        WxGhSearchInputBoxBackground,
        WxGhSearchModifierBackground,
        WxGhSearchModifierText,
        WxSearchInputBoxBorder,
        WxSearchInputBoxBackground,
        WxSearchInputBoxText,
        AppHeaderButtonPlus,
        AppHeaderButtonPlusIcon,
        WxSearchFilterBackground,
        WxSearchFilterText,
        WxSecondColumnBorder,
        WxNavigationIcon,
        WxUpdateNavigationIcon,
        WxUCConnectionIndicatorTabIcon,
        AppNavIcon,
        WxGhUpdateNavigationIcon,
        WxGlobalHeaderUCConnectionIndicatorTabIcon,
        AppNavBadge,
        AppNavBadgeText,
        WxUnreadCountCircleBackground,
        WxUnreadCountCircleText,
        WxFallbackNavigationTabBorder,
        AppNavBackground,
        WxNavigationTabBackground,
        WxNavigationBackground,
        WxTabErrorIcon,
        WxNavigationTabFocusRectInverted,
        WxGhNavigationTabFocusRectInverted,
        WxProductNameTitleText,
        WxTopBarMinimizeMaximizeButtonBackground,
        WxTopBarMinimizeMaximizeButtonText,
        WxTopBarCloseButtonBackground,
        WxTopBarCloseButtonText,
        WxGhTopBarMinimizeMaximizeButtonText,
        WxGhTopBarCloseButtonBackground,
        WxGhTopBarCloseButtonText,
        WxGhTitleText,
        WxGhText,
        WxGhCancelSearchIcon,
        WxGlobalFooterButtonBackground,
        WxGlobalFooterButtonOutline,
        WxGlobalFooterButtonText,
        WxGlobalFooterButtonTextFocus,
        WxGroupStateLinkButtonText,
        WxGroupStateLinkButtonSidebarText,
        WxGroupBackedHelpCompleteText,
        WxGroupBackedHelpCompleteBackground,
        WxGroupBackedHelpCompleteSidebarText,
        WxGroupBackedHelpCompleteSidebarBackground,
        WxMultilineBadgeOneBackground,
        WxMultilineBadgeTwoBackground,
        WxMultilineBadgeThreeBackground,
        WxMultilineBadgeFourBackground,
        WxMultilineBadgeFiveBackground,
        WxMultilineBadgeSixBackground,
        WxMultilineBadgeSevenBackground,
        WxMultilineBadgeEightBackground,
        WxTransparentBorder,
        WxCancelButtonText,
        WxCancelButtonBackground,
        WxCancelButtonBackgroundOutline,
        WxVoicemailPlayButtonBackground,
        WxVoicemailPlaySliderBackground,
        WxVoicemailPlaySliderBorder,
        WxVoicemailPlaySliderHandleBackground,
        WxRecipientButtonBackground,
        WxRecipientWidgetBackground,
        WxRecipientWidgetText,
        WxRecipientWidgetScrollBarHandleBackground,
        WxDeleteButtonBackground,
        WxComboBoxBackground,
        WxComboBoxBorder,
        WxTeamsComboboxBackground,
        WxTeamsComboboxBorder,
        WxTeamsComboboxText,
        WxTeamsComboboxDropdownArrow,
        WxVideoPreviewBorder,
        WxVideoPreviewTopBorder,
        WxVideotoolbarBackground,
        WxOptionsTabBackground,
        WxMeetingListRowBackground,
        WxDividerLineBackground,
        WxAuthLineEditBackground,
        WxRecorderComboBoxBorder,
        WxRecorderTitleBackground,
        WxRecorderOptionButtonBackground,
        WxRecorderComboboxBackground,
        WxScrollbarBackground,
        WxScrollbarHandle,
        WxScrollbarBackgroundSecondary,
        WxScrollbarHandleSecondary,
        WxSliderBackground,
        WxSliderAddPageBackground,
        WxSliderSubPageBackground,
        WxAreYouTheHostIcon,
        WxCloseAssociationCall,
        WxActMessage,
        WxActCall,
        WxActMeetingInfo,
        WxActParticipants,
        WxActFiles,
        WxActWhiteBoard,
        WxActScreenShare,
        WxActPeopleInsights,
        WxActMyThreads,
        WxActLinks,
        WxSpeakerButtonBackground,
        WxAudioOptionsPopupSliderColorBorder,
        WxAudioOptionsPopupSliderColorBackground,
        WxClassificationButtonUnselectedText,
        WxCreateSpaceWidgetInputBorder,
        WxClassificationLevelMenuButtonBackground,
        WxClassificationLevelMenuCheckbox,
        WxCoachmarkBackground,
        WxAddLinkDialogInputBorder,
        WxClassificationSelectionButton,
        WxClassificationSelectionButtonBorder,
        WxTopBarSearchButtonBackground,
        WxTopBarSearchButtonText,
        WxGhTopBarSearchButtonBackground,
        WxGhTopBarSearchButtonText,
        WxGhTopBarSearchButtonIcon,
        WxCustomButtonBorder,
        WxCustomButtonBackground,
        WxCustomButtonValueIcon,
        WxCustomButtonValueBorder,
        WxFocusColorOnColumnBackground,
        WxCustomCalendarHeaderTextBackground,
        WxCustomCalendarHeaderTextForeground,
        WxCustomListViewHeaderText,
        WxCustomListViewSubHeaderText,
        WxCustomListViewIcon,
        WxTransparentBackground,
        WxRectButtonBorder,
        WxWhiteboardThumbnailBackground,
        WxWhiteboardThumbnailText,
        WxWhiteboardThumbnailButtonIcon,
        WxWhiteboardThumbnailButtonIconBackground,
        WxCancelHostTransferButtonBackground,
        WxCancelHostTransferButtonText,
        WxCancelHostTransferButtonBorder,
        WxLinkActivityItemBackground,
        WxLinkActivityFocusRect,
        WxLinkActivityNoFavIconBackground,
        WxLinkActivityNoFavIcon,
        WxLinkActivityHoverRectBackground,
        WxLinkActivityButtonBackground,
        WxLinkActivityButtonText,
        WxButtonTabBorder,
        WxButtonTabText,
        WxButtonTabBackground,
        WxMeetingsTabButtonText,
        WxPrimaryButtonContraryBackgroud,
        WxSecondaryButtonContraryBackgroud,
        WxMeetingsTabButtonBackground,
        WxMeetingIcon,
        WxHealthCheckButtonBackground,
        WxHealthCheckButtonText,
        WxThreadsItemBackground,
        WxThreadsUnreadItemText,
        WxInsightsButtonBackground,
        WxClassificationButtonUnselectedBackground,
        WxUnderlineButtonBackground,
        WxUnderlineButtonText,
        WxUnderlineSearchFilterButtonText,
        WxSearchModifierBackground,
        WxNotificationBackground,
        WxNotificationText,
        WxNotificationSecondaryBackground,
        WxNotificationSecondaryBorder,
        WxNotificationSecondaryText,
        WxTeamButtonBackground,
        WxThemeButtonBackground,
        WxShareSelectionWindowItemBorder,
        WxShareSeparator,
        WxShareSelectionWindowBackground,
        WxShareSelectedItemBorder,
        WxShareApplicationIconBackground,
        WxShareApplicationIconBorder,
        WxShareItemHoverBackground,
        WxShareDropdownColor,
        WxShareGrayDropdownColor,
        WxShareSharingBorderColor,
        WxShareSharingBorderColorOutline,
        WxShareSelectionBorderColor,
        WxShareSelectionWindowPopoverBorderColor,
        WxShareSelectionIconBackgroundColor,
        WxShareUnsharedApplicationBorderColor,
        WxShareBarButtonColor,
        WxShareBarButtonFontColor,
        WxShareBarGrayButtonColor,
        WxShareBarDraggerColor,
        WxShareBarGrayDraggerColor,
        WxShareResumeBarColor,
        WxShareToastIconBackgroundColor,
        WxShareScreenNumberNotificationBackground,
        WxTutorialSeparator,
        WxTutorialHeaderText,
        WxTutorialDescriptionText,
        WxTutorialSelectorButton,
        WxPreviewContentListIcon,
        WxPreviewContentListBackground,
        WxPreviewVideoRectBackground,
        WxSecondColumnFlagIcon,
        WxFilterControlIcon,
        WxFilterControlBackground,
        WxUcStatusButtonBackground,
        WxCustomAppButtonIcon,
        WxCustomAppButtonIconBackground,
        WxUcStatusLabelText,
        WxPopupMenuItemBackground,
        WxPopupMenuItemText,
        WxAvatarNameInputBorder,
        WxFilesAppButtonIcon,
        WxFilesAppButtonBackground,
        WxFilesAppControlPanelBackground,
        WxFilesAppButtondividerLine,
        WxFilesListButtonBackground,
        WxFilesListIconBorder,
        WxStatusDefaultIcon,
        WxStatusReadyIcon,
        WxSelfViewEnabledButtonIcon,
        WxCustomMenuBackground,
        WxCustomMenuText,
        WxCustomMenuBorder,
        WxTransparentButton,
        WxSemiTransparentPreviewBackground,
        WxSemiTransparentControl,
        WxCallStatisticsTitleBackground,
        WxCallStatisticsTitleText,
        WxCallStatisticsRecTranBackground,
        WxCallStatisticsRecTranText,
        WxCalendarIcon,
        WxCopyButtonBackground,
        WxSettingsButtonBackground,
        WxSettingsButtonIcon,
        WxCopyButtonIcon,
        WxVideoAdressInputIcon,
        WxCopiedLabelBackground,
        WxCopiedLabelText,
        WxCopyButtonAfterCopiedIcon,
        WxJoinMeetingButtonIcon,
        WxCopyPMRButtonIcon,
        WxCallPopupMenuItemBackground,
        WxCallPopupMenuItemText,
        WxStopCallButtonIcon,
        WxDefaultSparkToolbarBackground,
        WxSparkToolbarButtonText,
        WxWbClearAllButtonText,
        WxMultiAppShareShiftLabelBackground,
        WxAppShareButtonBackground,
        WxAppShareIconBackground,
        WxAppShareIconPlaceholder,
        WxCallWindowCheckedIcon,
        WxSelfMessageCircleIcon,
        WxSelfMessageCircleBorder,
        WxAddButtonBackground,
        WxAddButtonText,
        WxAddButtonIcon,
        WxPopoverBackground,
        WxScreenShareButtonBorder,
        WxScreenShareTitleText,
        WxScreenShareInfoFrameBackground,
        WxScreenShareRebrandingInfoFrameBackground,
        WxScreenShareDropdownBackground,
        WxScreenShareDropdownGrayBackground,
        WxScreenShareRecordingButtonBackground,
        WxGeneralListBackground,
        WxGeneralListBorder,
        WxGeneralListText,
        WxCallStripAudioVideoButtonIcon,
        WxDefaultBlurBorder,
        WxExitHostPINViewButtonText,
        WxInfoButtonBackground,
        WxInputFieldBorder,
        WxMuteAudioButtonBackground,
        WxFilmStripPipWidgetBackground,
        WxPinChallengeWidgetCloseButtonBackground,
        WxCloseXButtonIcon,
        WxStopShareButtonBackground,
        WxCustomCalendarCellHighlightBackground,
        WxAvatarlistText,
        WxAvatarlistCircle,
        WxDeviceMenuBackground,
        WxInterstitialBackground,
        WxInterstitialFrameBackground,
        WxInterstitialChangeVideoButtonBackground,
        WxInterstitialChangeVideoButtonBorder,
        WxInterstitialAudioOptionsButton,
        WxInterstitialButtonBackground,
        WxInterstitialButtonBorder,
        WxInterstitialFrameVideoBackground,
        WxInterstitialFrameVideoBorder,
        WxInterstitialFrameVideoBackgroundVdi,
        WxInterstitialDisconnectButtonText,
        WxInterstitialJoinButtonText,
        WxInterstitialDisconnectButtonBackground,
        WxInterstitialAudioButtonBackground,
        WxInterstitialMuteButtonIcon,
        WxInterstitialMuteButtonIconChecked,
        WxInterstitialAudioButtonBorder,
        WxInterstitialPairedComboboxText,
        WxInterstitialPairedComboboxBackground,
        WxInterstitialNotMirroredBackground,
        WxInterstitialMirroredBackground,
        WxInterstitialMirroredTextMirror,
        WxInterstitialMirroredTextUnmirror,
        WxInterstitialPreviewBackground,
        WxInterstitialDeviceSettigBackground,
        WxCallControlButtonBackground,
        WxCallControlButtonBorder,
        WxCallControlButtonText,
        WxCallControlMoreButtonBackground,
        WxCallViewTimeLabelBackground,
        WxTitilebarRecordinglabelBackground,
        WxTitilebarPausedlabelBackground,
        WxTitilebarLocklabelBackground,
        WxTitilebarMediaqualitygoodlabelBackground,
        WxTitilebarMediaqualityunstablelabelBackground,
        WxTitilebarMediaqualitypoorlabelBackground,
        WxCustomCalendarCellBackground,
        WxCallControlPanelButtonBackground,
        WxCallControlPanelButtonBorder,
        WxCallControlPanelButtonText,
        WxCallControlVolumeBackground,
        WxCallControlPopoverBorder,
        WxCallControlMoreMenuBackground,
        WxCallVideoLayoutMenuLayoutButtonText,
        WxCallVideoLayoutMenuLayoutButtonBackground,
        WxCallVideoLayoutMenuSeparatorBackground,
        WxCallVideoLayoutMenuPopoverBackground,
        MainList,
        MainListItem,
        WxResumeCallButtonText,
        WxMeetingInfoBackground,
        WxSoftLandingLeftSideBackground,
        WxCallControlEndButtonIcon,
        WxVideoLayoutControlButtonText,
        WxVideoLayoutControlButtonBackground,
        WxTitilebarMeetingInfoSvgText,
        WxTitilebarMeetingInfoButtonBackground,
        WxNametagBackground,
        WxNametagBorder,
        WxNametagBackgroundHasvideo,
        WxNametagTextHasvideo,
        WxMorebuttonBorder,
        WxFocusOutlineBorder,
        WxFocusOutlineSplitbuttonBorder,
        WxAvatarInitialsText,
        WxFocusOutlineTransparentBorder,
        WxFocusOutlineButtonJoinBorder,
        WxCallDialogBorder,
        WxLayoutMenuButtonBackground,
        WxLayoutMenuButtonBorder,
        WxLayoutButtonBackground,
        WxLayoutButtonText,
        WxRosterMuteButtonBackground,
        WxCallSplitterBackground,
        WxMeetingListItemBackground,
        WxPopupLabelBackground,
        WxPopupLabelBorder,
        WxLobbyViewBackground,
        WxLobbyViewTextPrimary,
        WxLobbyViewTextSecondary,
        WxPercentageIndicatorPossessive,
        WxPercentageIndicatorRemaining,
        WxMeetingReminderBorder,
        WxCallMoreEndPopupMenuItemBackground,
        WxCallHistoryItemMissed,
        WxCallHistoryDetailMissed,
        WxDevicePremeetingVolumeControl,
        WxDeviceInMeetingButton,
        WxToggleBlueColor,
        WxToggleGrayColor,
        WxFooterInfoIcon,
        WxMeetingRSVPStatusTentativeButtonBackground,
        WxMeetingRSVPStatusAcceptButtonBackground,
        WxMeetingRSVPStatusDeclineButtonBackground,
        WxMeetingRSVPStatusButtonText,
        WxMeetingRSVPStatusButtonBorder,
        WxButtonJoinIconBackground,
        WxButtonJoinIconOBTPBackground,
        WxScheduleButtonBackground,
        WxScheduleButtonIcon,
        WxButtonJoinBackground,
        WxFooterWarningIcon,
        ClosedCaptionsTextSecondary,
        ClosedCaptionsTextPrimary,
        ClosedCaptionsSpeakerSecondary,
        ClosedCaptionsSpeakerPrimary,
        ClosedCaptionsStaticBackgroundSecondary,
        ClosedCaptionsStaticBackgroundPrimary,
        ClosedCaptionsBackgroundSecondary,
        ClosedCaptionsBackgroundPrimary,
        ClosedCaptionsMenuPrimary,
        ClosedCaptionsMenuBackgroundPrimary,
        ClosedCaptionsBorderSecondary,
        ClosedCaptionsBorderPrimary,
        HighlightDecision,
        HighlightSummary,
        HighlightAgenda,
        HighlightNextstep,
        HighlightDebrief,
        HighlightActionitem,
        HighlightNote,
        HighlightReminder,
        HighlightParkinglot,
        WxExternalBadgeBackground,
        WxExternalBadgeText,
        WxHandRecognizeCircularProgressBarBackground,
        WxReactionListItemGradientBackgroundStartColor,
        WxReactionListItemGradientBackgroundEndColor,
        WxReactionListItemGradientBorderStartColor,
        WxReactionListItemGradientBorderEndColor,
        WxReactionExpendButtonColor,
        WxReactionExpendButtonBorderColor,
        WxReactionListBackgroundColor,
        WxReactionListBackgroundColorVdi,
        WxReactionListItemBackgroundColor,
        WxReactionListItemBorderColor,
        WxReactionListAvatarBorderColor,
        WxReactionRecognizableIndicatorBackground,
        WxMultitaskPanelButtonBackground,
        WxMultitaskPanelButtonBackgroundOutline,
        WxMultitaskShadowWindow,
        WxMultitaskActivespeakerBackground,
        WxRaiseHandRecognizableIndicatorBackground,
        WxDeviceNewvolumnControlButtonBackground,
        WxDeviceNewvolumnControlButtonBorder,
        WxPhonenumberListBackground,
        WxActivatedDeviceStatus,
        WxUcAccountInformationAlertBackground,
        ParticipantListMutedIconColor,
        ParticipantListMicrophoneOnColor,
        WxDefaultAvatarBackground,
        WxLeftpaneShortcutAppIconOrange,
        WxLeftpaneShortcutAppIconGold,
        WxLeftpaneShortcutAppIconOlive,
        WxLeftpaneShortcutAppIconLime,
        WxLeftpaneShortcutAppIconMint,
        WxLeftpaneShortcutAppIconCyan,
        WxLeftpaneShortcutAppIconCobalt,
        WxLeftpaneShortcutAppIconSlate,
        WxLeftpaneShortcutAppIconViolet,
        WxLeftpaneShortcutAppIconPurple,
        WxLeftpaneShortcutAppIconPink,
        WxTextEditBackground,
        WxTextEditText,
        WxSliderFull,
        WxSliderEmpty,
        WxSliderHandle,
        WxRecordingThumbnailBackground,
        WxRecordingThumbnailBorder,
        WxRecordingControlsBackground,
        WxRecordingVideoBackground,
        WxTopBarMainMinMaxButtonBackground,
        WxUnreadPillButtonCheckedColor,
        WxListItemTextPrimary,
        WxListItemTextSecondary,
        WxSpaceHeaderButtonText,
        WxDefaultBorderForButton,
        WxAppextensionListItemBorder,
        WxPopupWidgetBorder,
        WxAppextensionClearIcon,
        WxSendMessageIcon,
        WxInvertedButtonText,
        WxMeetingsInnerButtonColor,
        WxSubheaderText,
        WxCloseCreateSpaceButon,
        WxAppextensionDefaultWebsiteIcon,
        WxTabSelectorViewText,
        WxTeamNameLabelText,
        WxAppextensionInfoDialogAddedBy,
        WxRecordingContainerBorder,
        WxAddNewTeamBackground,
        WxAddNewTeamText,
        WxUnreadMessageIndicator,
        WxMeetingSpaceName,
        WxMeetingInProgress,
        WxAlertTextErrorMeetingConflict,
        WxTextPrimaryMeetingInfo,
        WxCheckMark,
        WxDeviceConnectionBorder,
        WxDeviceVolumeControlBorder,
        UtLegacySettingsIcon,
        UtLegacyFavoriteIcon,
        UtLegacyExpressiveMessageIcon,
        WxDeviceDisconnectButton,
        WxNotificationBorderShadow,
        WxHaloEffectSolidWaveStart,
        WxHaloEffectSolidWaveEnd,
        WxHaloEffectOutsideWaveStart,
        WxHaloEffectOutsideWaveEnd,
        ButtonSecondaryBackground,
        ButtonSecondaryBorder,
        ButtonGhostBackground,
        ButtonSecondaryText,
        ButtonGhostBorder,
        ModalPrimaryBackground,
        ModalPrimaryBorder,
        ModalSecondaryBackground,
        ModalSecondaryBorder,
        SeparatorSecondary,
        ListitemBackground,
        ListitemTick,
        CheckboxCheckedBorder,
        SharewindowPreviewActive,
        SharewindowPreviewInactive,
        SharewindowBorderSelected,
        SharewindowBorderActive,
        SharewindowBorderInactive,
        WxRemoteShareBackground,
        TabActiveBackground,
        TabActiveText,
        TabInactiveBackground,
        TabInactiveText,
        ListitemTextprimary,
        ListitemTextsecondary,
        ButtonSecondaryActiveBackground,
        ButtonSecondaryActiveText,
        ButtonSecondaryActiveBorder,
        ButtonInvertedBackground,
        ButtonInvertedText,
        ButtonInvertedBorder,
        BannerWarningBackground,
        BannerWarningText,
        BannerIssueBackground,
        LabelWarningText,
        WxSharewindowDragger,
        SharewindowControlTextPrimary,
        SharewindowControlButtonPrimaryBackground,
        SharewindowControlButtonPrimaryText,
        SharewindowControlButtonSecondaryBackground,
        SharewindowControlButtonSecondaryBorder,
        SharewindowControlButtonSecondaryText,
        SharewindowControlButtonActiveBackground,
        SharewindowControlButtonActiveBorder,
        SharewindowControlButtonActiveText,
        ThemeGradientSecondary0Background,
        ThemeGradientSecondary1Background,
        WxCurrentCallingStatusBackground,
        ListitemTextprimaryNormal,
        AlertbadgeAnnouncementBackground,
        AlertbadgeAnnouncementText,
        ListitemTextmissed,
        WxCheckedQradiobuttonBorder,
        WxUncheckedQradiobuttonBorder,
        WxCheckedQradiobuttonBackgroud,
        SharewindowViewwindowActive,
        SharewindowViewwindowHovered,
        SharewindowViewwindowSelected,
        BadgeTabActiveDarkBackgroundLegacy,
        BadgeTabActiveLightBackgroundLegacy,
        BadgeTabInactiveDarkBackgroundLegacy,
        BadgeTabInactiveLightBackgroundLegacy,
        BadgeTabInactiveTextDarkBackgroundLegacy,
        BadgeTabInactiveTextLightBackgroundLegacy,
        BadgeTabActiveTextDarkBackgroundLegacy,
        BadgeTabActiveTextLightBackgroundLegacy,
        ConnectDialogBackground,
        AvatarPresenceIconActive,
        AvatarPresenceIconMeeting,
        AvatarPresenceIconSchedule,
        AvatarPresenceIconDnd,
        AvatarPresenceIconPresenting,
        AvatarPresenceIconQuietHours,
        AvatarPresenceIconAway,
        AvatarPresenceIconOoo,
        AvatarPresenceIconBackground,
        AvatarColorAvatarText,
        AvatarColorAvatarBackgroundDefault,
        AvatarColorAvatarBackgroundGold,
        AvatarColorAvatarBackgroundOrange,
        AvatarColorAvatarBackgroundLime,
        AvatarColorAvatarBackgroundMint,
        AvatarColorAvatarBackgroundCyan,
        AvatarColorAvatarBackgroundCobalt,
        AvatarColorAvatarBackgroundSlate,
        AvatarColorAvatarBackgroundViolet,
        AvatarColorAvatarBackgroundPurple,
        AvatarColorAvatarBackgroundPink,
        AvatarChatBubbleIconNormal,
        AvatarChatBubbleIconHover,
        AvatarChatBubbleIconPressed,
        AvatarChatBubbleIconActive,
        AvatarChatBubbleIconDisabled,
        AvatarChatBubbleBorderNormal,
        BadgeBackground,
        BadgeText,
        BadgeNotificationIndicator,
        BannerAnnouncementText,
        BannerAnnouncementBackground,
        BannerSuccessText,
        BannerSuccessBackground,
        BannerErrorText,
        BannerErrorBackground,
        BannerIssueText,
        BannerTransientText,
        BannerTransientBackground,
        ButtonPrimaryBackground,
        ButtonPrimaryText,
        ButtonPrimaryBorder,
        ButtonCancelGhostBackground,
        ButtonCancelGhostText,
        ButtonCancelFillBackground,
        ButtonCancelFillText,
        ButtonCancelFillBorder,
        ButtonCancelOutlineBackground,
        ButtonCancelOutlineText,
        ButtonCancelOutlineBorder,
        ButtonAccentGhostBackground,
        ButtonAccentGhostText,
        ButtonAccentFillBackground,
        ButtonAccentFillText,
        ButtonAccentFillBorder,
        ButtonMessageGhostBackground,
        ButtonMessageGhostText,
        ButtonMessageFillBackground,
        ButtonMessageFillText,
        ButtonMessageFillBorder,
        ButtonJoinFillBackground,
        ButtonJoinFillText,
        ButtonJoinFillBorder,
        ButtonJoinOutlineBackground,
        ButtonJoinOutlineText,
        ButtonJoinOutlineBorder,
        ButtonCounterBackground,
        ButtonCounterText,
        ButtonCounterBorder,
        ButtonDialpadBackground,
        ButtonDialpadTextNumber,
        ButtonDialpadTextCharacters,
        ButtonDialpadBorder,
        ButtonDialpadSpecialBackground,
        ButtonDialpadSpecialTextNumber,
        ButtonDialpadSpecialTextCharacters,
        ButtonHyperlinkBackground,
        ButtonHyperlinkText,
        ButtonHyperlinkBorder,
        ButtonLayoutBackground,
        ButtonLayoutText,
        ButtonLayoutBorder,
        ButtonOverlayBackground,
        ButtonOverlayText,
        ButtonOverlayBorder,
        ButtonGroupSeparatorBackground,
        ButtonGhostText,
        CoachmarkteachingBackground,
        CoachmarkteachingButtonPrimaryBackground,
        CoachmarkteachingButtonPrimaryText,
        CoachmarkteachingButtonPrimaryBorder,
        CoachmarkteachingButtonSecondaryBackground,
        CoachmarkteachingButtonSecondaryText,
        CoachmarkteachingButtonSecondaryBorder,
        CoachmarkteachingButtonHyperlinkBackground,
        CoachmarkteachingButtonHyperlinkText,
        CoachmarkteachingButtonHyperlinkBorder,
        CodeinputBackground,
        CodeinputText,
        CodeinputBorder,
        CodeinputErrorBackground,
        CodeinputErrorText,
        CodeinputErrorBorder,
        LabelPrimaryText,
        LabelSecondaryText,
        LabelSuccessText,
        LabelErrorText,
        ListitemIcon,
        ListitemDotdivider,
        PopoverPrimaryBackground,
        ReactionBadgePrimaryBackground,
        ReactionBadgePrimaryUnreactedText,
        ReactionBadgePrimaryReactedText,
        ReactionBadgePrimaryBorder,
        SearchPlaceholderText,
        SearchText,
        SearchBorder,
        SearchBackground,
        SeparatorPrimary,
        SeparatorClear,
        SeparatorAnnounce0,
        SeparatorAnnounce1,
        SeparatorWarn0,
        SeparatorWarn1,
        SeparatorError0,
        SeparatorError1,
        SpinnerLoadingCursor,
        SpinnerLoadingTrack,
        SpinnerProgressCursor,
        SpinnerProgressTrack,
        TabRefresh,
        TabOrange,
        TabGold,
        TabLime,
        TabMint,
        TabCyan,
        TabPink,
        TabSlate,
        TabViolet,
        TabCobalt,
        TabPurple,
        TeamMarkerBackgroundDefault,
        TeamMarkerBackgroundGold,
        TeamMarkerBackgroundOrange,
        TeamMarkerBackgroundLime,
        TeamMarkerBackgroundMint,
        TeamMarkerBackgroundCyan,
        TeamMarkerBackgroundCobalt,
        TeamMarkerBackgroundSlate,
        TeamMarkerBackgroundViolet,
        TeamMarkerBackgroundPurple,
        TeamMarkerBackgroundPink,
        TeamMarkerBackgroundArchived,
        TextinputPlaceholderText,
        TextinputBackground,
        TextinputText,
        TextinputBorder,
        TextinputErrorBackground,
        TextinputErrorText,
        TextinputErrorBorder,
        AlertbadgeDefaultBackground,
        AlertbadgeDefaultText,
        AlertbadgeWarningBackground,
        AlertbadgeWarningText,
        AlertbadgeImportantBackground,
        AlertbadgeImportantText,
        AlertbadgeGeneralBackground,
        AlertbadgeGeneralText,
        CanceliconDefaultIcon,
        CardActiveBackground,
        CardInactiveBackground,
        CardCancelledBackground,
        CardDisabledBorder,
        CheckboxCheckedText,
        CheckboxCheckedIcon,
        CheckboxUncheckedBackground,
        CheckboxUncheckedText,
        CheckboxUncheckedBorder,
        ComboboxPlaceholderText,
        ComboboxBackground,
        ComboboxText,
        ComboboxBorder,
        GlobalHeaderTextfieldBackground,
        GlobalHeaderTextfieldText,
        GlobalHeaderTextfieldBorder,
        GlobalHeaderTextfieldBorderModifier,
        GlobalHeaderTextfieldPlaceholderTextText,
        GlobalHeaderButtonDeviceBackground,
        GlobalHeaderButtonDeviceTextInactive,
        GlobalHeaderButtonDeviceTextActive,
        GlobalHeaderButtonIconBackground,
        GlobalHeaderButtonIconIcon,
        GlobalHeaderButtonStatusBackground,
        GlobalHeaderButtonStatusText,
        GlobalHeaderContainerBackground,
        GlobalHeaderModifierChipBackground,
        GlobalHeaderModifierChipText,
        GlobalHeaderTextfieldWinBackground,
        GlobalHeaderMaxMinButtonBackground,
        GlobalHeaderMaxMinButtonText,
        GlobalHeaderCloseButtonBackground,
        GlobalHeaderCloseButtonText,
        GlobalHeaderSearchCancelButtonBackground,
        GlobalHeaderSearchCancelButtonBorder,
        GlobalHeaderSearchCancelButtonText,
        ThemeGradientPrimary0Background,
        ThemeGradientPrimary1Background,
        InteractiveiconContainerBackground,
        InteractiveiconPrimaryFilledIconInactive,
        InteractiveiconPrimaryFilledIconActive,
        InteractiveiconPrimaryOutlineIconInactive,
        InteractiveiconPrimaryOutlineIconActive,
        InteractiveiconSecondaryFilledIconInactive,
        InteractiveiconSecondaryFilledIconActive,
        InteractiveiconTertiaryFilledIconInactive,
        InteractiveiconTertiaryFilledFavoriteIconActive,
        InteractiveiconQuaternaryFilledIconActive,
        MeetingmarkerDefaultBackground,
        MeetingmarkerActiveBackground,
        MeetingmarkerInactiveBackground,
        MenulistbackgroundPrimaryBackground,
        MenulistbackgroundPrimaryBorder,
        MenulistbackgroundSecondaryBackground,
        MenulistbackgroundSecondaryBorder,
        MenulistbackgroundTertiaryBackground,
        MenulistbackgroundTertiaryBorder,
        ModalTertiaryBackground,
        ModalTertiaryBorder,
        MultilineChipOneText,
        MultilineChipOneOutline,
        MultilineChipTwoText,
        MultilineChipTwoOutline,
        MultilineChipThreeText,
        MultilineChipThreeOutline,
        MultilineChipFourText,
        MultilineChipFourOutline,
        MultilineChipFiveText,
        MultilineChipFiveOutline,
        MultilineChipSixText,
        MultilineChipSixOutline,
        MultilineChipSevenText,
        MultilineChipSevenOutline,
        MultilineChipEightText,
        MultilineChipEightOutline,
        NavigationtabBackground,
        NavigationtabText,
        OverlayFadePrimaryBackground,
        OverlayFadeSecondaryBackground,
        PanelPrimaryBackground,
        PanelSecondaryBackground,
        PanelTertiaryBackground,
        ScrollbarTrackBackground,
        ScrollbarThumbBackground,
        ScrollbarArrowButtonText,
        ScrollbarArrowButtonBackground,
        SharewindowControlButtonPrimaryBorder,
        TagStaticBackground,
        TagStaticText,
        TagStaticBorder,
        TagOverlayBackground,
        TagOverlayText,
        TagOverlayBorder,
        TagPrimaryBackground,
        TagPrimaryText,
        TagPrimaryBorder,
        TagCobaltBackground,
        TagCobaltText,
        TagCobaltBorder,
        TagLimeBackground,
        TagLimeText,
        TagLimeBorder,
        TagMintBackground,
        TagMintText,
        TagMintBorder,
        TagSlateBackground,
        TagSlateText,
        TagSlateBorder,
        TagVioletBackground,
        TagVioletText,
        TagVioletBorder,
        TagPurpleBackground,
        TagPurpleText,
        TagPurpleBorder,
        TagOrangeBackground,
        TagOrangeText,
        TagOrangeBorder,
        TagGoldBackground,
        TagGoldText,
        TagGoldBorder
    };

    static inline std::string tokenToString(Token t)
    {
        switch(t)
        {
            case Token::OverlayPrimary:
                return "overlay-primary";
            case Token::OverlaySecondary:
                return "overlay-secondary";
            case Token::AvatarOverlay:
                return "avatar-overlay";
            case Token::ListItemPrimary:
                return "listItem-primary";
            case Token::ListItemSecondary:
                return "listItem-secondary";
            case Token::ListItemTertiary:
                return "listItem-tertiary";
            case Token::ListItemQuaternary:
                return "listItem-quaternary";
            case Token::MessageListItem:
                return "message-listItem";
            case Token::AlertBackgroundDefault:
                return "alertBackground-default";
            case Token::AlertBackgroundError:
                return "alertBackground-error";
            case Token::AlertBackgroundSuccess:
                return "alertBackground-success";
            case Token::AlertBackgroundWarning:
                return "alertBackground-warning";
            case Token::AlertTextDefault:
                return "alertText-default";
            case Token::AlertTextError:
                return "alertText-error";
            case Token::AlertTextSuccess:
                return "alertText-success";
            case Token::AlertTextWarning:
                return "alertText-warning";
            case Token::BackgroundPrimary:
                return "background-primary";
            case Token::WxAddParticipantsButtonInCallIcon:
                return "wx-addParticipantsButtonInCall-icon";
            case Token::BackgroundSecondary:
                return "background-secondary";
            case Token::BackgroundTertiary:
                return "background-tertiary";
            case Token::BackgroundQuaternary:
                return "background-quaternary";
            case Token::BackgroundContrary:
                return "background-contrary";
            case Token::PopoverBackground:
                return "popover-background";
            case Token::PopoverBackgroundCoachmark:
                return "popover-background-coachmark";
            case Token::PopoverCoachmarkText:
                return "popover-coachmark-text";
            case Token::PopoverCoachmarkButton:
                return "popover-coachmark-button";
            case Token::ButtonPrimary:
                return "button-primary";
            case Token::ButtonPrimaryOutline:
                return "button-primary-outline";
            case Token::ButtonOutlinePrimaryBackground:
                return "buttonOutline-primary-background";
            case Token::ButtonOutlinePrimary:
                return "buttonOutline-primary";
            case Token::ButtonOutlineTextPrimary:
                return "buttonOutlineText-primary";
            case Token::ButtonSecondary:
                return "button-secondary";
            case Token::ButtonSecondaryOutline:
                return "button-secondary-outline";
            case Token::ButtonOutlineSecondaryBackground:
                return "buttonOutline-secondary-background";
            case Token::ButtonOutlineSecondary:
                return "buttonOutline-secondary";
            case Token::ButtonOutlineTextSecondary:
                return "buttonOutlineText-secondary";
            case Token::ButtonTertiary:
                return "button-tertiary";
            case Token::ButtonCancel:
                return "button-cancel";
            case Token::ButtonCancelOutline:
                return "button-cancel-outline";
            case Token::ButtonTextCancel:
                return "buttonText-cancel";
            case Token::ButtonOutlineCancel:
                return "buttonOutline-cancel";
            case Token::ButtonOutlineBorderCancel:
                return "buttonOutlineBorder-cancel";
            case Token::ButtonOutlineTextCancel:
                return "buttonOutlineText-cancel";
            case Token::ButtonQuaternary:
                return "button-quaternary";
            case Token::ButtonGhost:
                return "button-ghost";
            case Token::ButtonGhostOutline:
                return "button-ghost-outline";
            case Token::ButtonGhostTransparent:
                return "button-ghost-transparent";
            case Token::ButtonCallPrimary:
                return "buttonCall-primary";
            case Token::ButtonCallSecondary:
                return "buttonCall-secondary";
            case Token::ButtonJoinPrimary:
                return "buttonJoin-primary";
            case Token::ButtonJoinPrimaryOutline:
                return "buttonJoin-primary-outline";
            case Token::ButtonJoinBorderPrimary:
                return "buttonJoinBorder-primary";
            case Token::FocusBorder:
                return "focus-border";
            case Token::ButtonTextPrimary:
                return "buttonText-primary";
            case Token::ButtonTextSecondary:
                return "buttonText-secondary";
            case Token::ButtonTextTertiary:
                return "buttonText-tertiary";
            case Token::ButtonTextQuaternary:
                return "buttonText-quaternary";
            case Token::ButtonTextGhost:
                return "buttonText-ghost";
            case Token::ButtonOutlineJoin:
                return "button-outline-join";
            case Token::InputBackground:
                return "inputBackground";
            case Token::SignInInputBackground:
                return "signIn-inputBackground";
            case Token::SignInInputOutline:
                return "signIn-inputOutline";
            case Token::InputBackgroundError:
                return "inputBackground-error";
            case Token::InputOutlineError:
                return "inputOutline-error";
            case Token::InputBackgroundWarning:
                return "inputBackground-warning";
            case Token::InputOutlineWarning:
                return "inputOutline-warning";
            case Token::InputTextWarning:
                return "inputText-warning";
            case Token::BackgroundGradientStart:
                return "background-gradient-start";
            case Token::BackgroundGradientEnd:
                return "background-gradient-end";
            case Token::ContentGradientStart:
                return "content-gradient-start";
            case Token::ContentGradientEnd:
                return "content-gradient-end";
            case Token::InputOutline:
                return "inputOutline";
            case Token::InputTextPrimary:
                return "inputText-primary";
            case Token::InputTextSecondary:
                return "inputText-secondary";
            case Token::WxInputTextSecondaryInverted:
                return "wx-inputText-secondary-inverted";
            case Token::InputTextError:
                return "inputText-error";
            case Token::InputFocusRing:
                return "input-focusRing";
            case Token::ModalDecorativeButtonPrimary:
                return "modal-decorative-button-primary";
            case Token::ModalDecorativeButtonText:
                return "modal-decorative-button-text";
            case Token::ModalDecorativeButtonSecondary:
                return "modal-decorative-button-secondary";
            case Token::ModalDecorativeButtonTextPrimary:
                return "modal-decorative-button-text-primary";
            case Token::ModalDecorativeButtonTextSecondary:
                return "modal-decorative-button-text-secondary";
            case Token::ModalDecorativeBackgroundPrimarySlate:
                return "modal-decorativeBackground-primary-slate";
            case Token::ModalDecorativeBackgroundPrimaryGold:
                return "modal-decorativeBackground-primary-gold";
            case Token::ModalDecorativeBackgroundPrimaryViolet:
                return "modal-decorativeBackground-primary-violet";
            case Token::ModalDecorativeBackgroundPrimaryMint:
                return "modal-decorativeBackground-primary-mint";
            case Token::ModalDecorativeBackgroundPrimaryGreen:
                return "modal-decorativeBackground-primary-green";
            case Token::ModalDecorativeBackgroundPrimaryCobalt:
                return "modal-decorativeBackground-primary-cobalt";
            case Token::ModalDecorativeBackgroundPrimaryBlue:
                return "modal-decorativeBackground-primary-blue";
            case Token::ModalDecorativeBackgroundSecondarySlate:
                return "modal-decorativeBackground-secondary-slate";
            case Token::ModalDecorativeBackgroundSecondaryYellow:
                return "modal-decorativeBackground-secondary-yellow";
            case Token::ModalDecorativeBackgroundSecondaryViolet:
                return "modal-decorativeBackground-secondary-violet";
            case Token::ModalDecorativeTitleSlate:
                return "modal-decorativeTitle-slate";
            case Token::ModalDecorativeTitleGold:
                return "modal-decorativeTitle-gold";
            case Token::ModalDecorativeTitleViolet:
                return "modal-decorativeTitle-violet";
            case Token::ModalDecorativeTitleMint:
                return "modal-decorativeTitle-mint";
            case Token::ModalDecorativeTitleGreen:
                return "modal-decorativeTitle-green";
            case Token::ModalDecorativeTitleCobalt:
                return "modal-decorativeTitle-cobalt";
            case Token::ModalTextPrimary:
                return "modal-text-primary";
            case Token::ModalTextSecondary:
                return "modal-text-secondary";
            case Token::TextHighlight:
                return "text-highlight";
            case Token::TextHyperlink:
                return "text-hyperlink";
            case Token::TextPrimary:
                return "text-primary";
            case Token::TextSecondary:
                return "text-secondary";
            case Token::LegacySeparatorPrimary:
                return "legacy-separator-primary";
            case Token::LegacySeparatorSecondary:
                return "legacy-separator-secondary";
            case Token::FooterBackground:
                return "footer-background";
            case Token::EditSpaceSettingsButton:
                return "edit-space-settings-button";
            case Token::EditSpaceSettingsButtonText:
                return "edit-space-settings-buttonText";
            case Token::EditSpaceSettingsButtonBorder:
                return "edit-space-settings-buttonBorder";
            case Token::WhiteboardStickyNoteYellow:
                return "whiteboard-stickyNote-yellow";
            case Token::ScrollbarBackgroundGutter:
                return "scrollbar-backgroundGutter";
            case Token::WxKeyboardactionBackground:
                return "wx-keyboardaction-background";
            case Token::WxKeyboardactionBorder:
                return "wx-keyboardaction-border";
            case Token::WxKeyboardactionLabelText:
                return "wx-keyboardaction-label-text";
            case Token::WxCallWindowContainerBackground:
                return "wx-callWindowContainer-background";
            case Token::WxCallWindowContentBackground:
                return "wx-callWindowContent-background";
            case Token::WxApplicationHeaderUserDeviceButtonText:
                return "wx-applicationHeaderUserDeviceButton-text";
            case Token::WxAudioSelectionItemBackground:
                return "wx-audioSelectionItem-background";
            case Token::WxAudioSelectionItemInternalText:
                return "wx-audioSelectionItemInternal-text";
            case Token::WxAudioSelectionItemVariantText:
                return "wx-audioSelectionItemVariant-text";
            case Token::WxAudioVideoDeviceWarnIconBorder:
                return "wx-audioVideoDeviceWarnIcon-border";
            case Token::WxAuxDeviceButtonBorder:
                return "wx-auxDeviceButton-border";
            case Token::WxAuxDeviceItemBackground:
                return "wx-auxDeviceItem-background";
            case Token::WxAuxDeviceItemBorder:
                return "wx-auxDeviceItem-border";
            case Token::WxAuxDeviceItemText:
                return "wx-auxDeviceItem-text";
            case Token::WxAuxDeviceItemCheckboxBackground:
                return "wx-auxDeviceItemCheckbox-background";
            case Token::WxAuxDeviceItemCheckboxBorder:
                return "wx-auxDeviceItemCheckbox-border";
            case Token::WxAuxDeviceSelectorButtonText:
                return "wx-auxDeviceSelectorButton-text";
            case Token::WxAuxDeviceUnknownItemText:
                return "wx-auxDeviceUnknownItem-text";
            case Token::WxAvatarMainAreaInnerRingBackground:
                return "wx-avatarMainAreaInnerRing-background";
            case Token::WxButtonCallBackground:
                return "wx-buttonCall-background";
            case Token::WxCallActivityDeviceIcon:
                return "wx-callActivityDeviceIcon";
            case Token::WxCallingInterstitialPageBackground:
                return "wx-callingInterstitialPage-background";
            case Token::WxCallMeCheckboxBackground:
                return "wx-callMeCheckbox-background";
            case Token::WxCallSettingButtonStateIcon:
                return "wx-callSettingButtonStateIcon";
            case Token::WxContactCardViewButtonBackground:
                return "wx-contactCardViewButton-background";
            case Token::WxContactCardViewButtonIcon:
                return "wx-contactCardViewButtonIcon";
            case Token::WxContactCardViewPhoneNumber:
                return "wx-contactCardViewPhoneNumber";
            case Token::WxContentTabViewButtonText:
                return "wx-contentTabViewButton-text";
            case Token::WxContentTabViewButtonCheckedText:
                return "wx-contentTabViewButtonChecked-text";
            case Token::WxContentTabViewDropDownButton:
                return "wx-contentTabViewDropDownButton";
            case Token::WxContentTabViewFilesButton:
                return "wx-contentTabViewFilesButton";
            case Token::WxContentTabViewFilesButtonChecked:
                return "wx-contentTabViewFilesButtonChecked";
            case Token::WxContentTabViewLinksButton:
                return "wx-contentTabViewLinksButton";
            case Token::WxContentTabViewLinksButtonChecked:
                return "wx-contentTabViewLinksButtonChecked";
            case Token::WxContentTabViewRecordingsButton:
                return "wx-contentTabViewRecordingsButton";
            case Token::WxContentTabViewRecordingsButtonChecked:
                return "wx-contentTabViewRecordingsButtonChecked";
            case Token::WxContentTabViewWhiteboardButton:
                return "wx-contentTabViewWhiteboardButton";
            case Token::WxContentTabViewWhiteboardButtonChecked:
                return "wx-contentTabViewWhiteboardButtonChecked";
            case Token::WxContextMenuBackground:
                return "wx-contextMenu-background";
            case Token::WxContextMenuText:
                return "wx-contextMenu-text";
            case Token::WxPopupDropShadow:
                return "wx-popupDropShadow";
            case Token::WxDefaultBorder:
                return "wx-default-border";
            case Token::WxDefaultText:
                return "wx-default-text";
            case Token::WxDefaultInvertedColorText:
                return "wx-default-invertedColor-text";
            case Token::WxDefaultTextWithPressedText:
                return "wx-defaultTextWithPressed-text";
            case Token::WxFileBrickletBadgeBackground:
                return "wx-fileBrickletBadge-background";
            case Token::WxFileBrickletBadgeText:
                return "wx-fileBrickletBadge-text";
            case Token::WxFileBrickletCloseButtonBackground:
                return "wx-fileBrickletCloseButton-background";
            case Token::WxFileBrickletCloseButtonDataBackground:
                return "wx-fileBrickletCloseButtonData-background";
            case Token::WxFileBrickletStagingBackground:
                return "wx-fileBrickletStaging-background";
            case Token::WxBalloonBackground:
                return "wx-balloon-background";
            case Token::WxBalloonBorder:
                return "wx-balloon-border";
            case Token::WxBalloonText:
                return "wx-balloon-text";
            case Token::WxFileBrickletStagingImageBackground:
                return "wx-fileBrickletStagingImage-background";
            case Token::WxGiphyBackground:
                return "wx-giphy-background";
            case Token::WxGiphyFocusBorderBackground:
                return "wx-giphyFocusBorder-background";
            case Token::WxGiphyIntegrationWidgetCancelSearchButtonBackground:
                return "wx-giphyIntegrationWidgetCancelSearchButton-background";
            case Token::WxEmojiPickerSearchBackground:
                return "wx-emojiPickerSearch-background";
            case Token::WxEmojiPickerSearchBorder:
                return "wx-emojiPickerSearch-border";
            case Token::WxEmojiPickerEmojiBackground:
                return "wx-emojiPickerEmoji-background";
            case Token::WxEmojiPickerSkinBackground:
                return "wx-emojiPickerSkin-background";
            case Token::WxEmojiPickerCategoryIcon:
                return "wx-emojiPickerCategory-icon";
            case Token::WxEmojiPickerCategoryBorderTop:
                return "wx-emojiPickerCategory-border-top";
            case Token::WxHeadingColorBackground:
                return "wx-headingColor-background";
            case Token::WxHeadingColorText:
                return "wx-headingColor-text";
            case Token::WxInputActionButtonBackground:
                return "wx-inputActionButton-background";
            case Token::WxInputBoxWidgetHasExternalParticipantBackground:
                return "wx-inputBoxWidgetHasExternalParticipant-background";
            case Token::WxInputBoxWidgetHasExternalParticipantBorder:
                return "wx-inputBoxWidgetHasExternalParticipant-border";
            case Token::WxClassificationInputBoxBackground:
                return "wx-classificationInputBox-background";
            case Token::WxErrorMessageBackground:
                return "wx-errorMessage-background";
            case Token::WxClassificationInputBoxBorder:
                return "wx-classificationInputBox-border";
            case Token::WxInputBoxWidgetWithoutExternalParticipantBorder:
                return "wx-inputBoxWidgetWithoutExternalParticipant-border";
            case Token::WxLeaveSpaceButton:
                return "wx-leaveSpaceButton";
            case Token::WxMenuItemButtonBackground:
                return "wx-menuItemButton-background";
            case Token::WxMenuItemButtonText:
                return "wx-menuItemButton-text";
            case Token::WxMarkButtonBackground:
                return "wx-markButton-background";
            case Token::WxMessageHighlightsHeaderBackground:
                return "wx-messageHighlights-header-background";
            case Token::WxMessageHighlightsHeaderText:
                return "wx-messageHighlights-header-text";
            case Token::WxMessageHighlightsBorder:
                return "wx-message-highlights-border";
            case Token::WxMessageHighlightsSignalBackground:
                return "wx-messageHighlights-signalBackground";
            case Token::WxMessageInputActionMarkDownButtonBackground:
                return "wx-messageInputActionMarkDownButton-background";
            case Token::WxMessageInputActionExternalParticipantButtonBackground:
                return "wx-messageInputActionExternalParticipantButton-background";
            case Token::WxMessageInputActionClassificationLabelBackground:
                return "wx-messageInputActionClassificationLabel-background";
            case Token::WxMessageInputActionClassificationLabelBorder:
                return "wx-messageInputActionClassificationLabel-border";
            case Token::WxMessageInputActionClassificationLabelText:
                return "wx-messageInputActionClassificationLabel-text";
            case Token::WxNativeMessageTextBackground:
                return "wx-native-messageText-background";
            case Token::WxOverlayBackground:
                return "wx-overlay-background";
            case Token::WxOverlayUserGuidance:
                return "wx-overlay-userGuidance";
            case Token::WxAddParticipantsButtonBackground:
                return "wx-addParticipantsButton-background";
            case Token::WxAddParticipantsButtonBackgroundOutline:
                return "wx-addParticipantsButton-background-outline";
            case Token::WxAddParticipantsButtonIcon:
                return "wx-addParticipantsButton-icon";
            case Token::WxExternalParticipantsBackground:
                return "wx-externalParticipants-background";
            case Token::WxExternalParticipantsText:
                return "wx-externalParticipants-text";
            case Token::WxQuoteWidgetBackground:
                return "wx-quoteWidget-background";
            case Token::WxQuoteWidgetBarBackground:
                return "wx-quoteWidgetBar-background";
            case Token::WxRichTextMarkDownButtonBackground:
                return "wx-richTextMarkDownButton-background";
            case Token::WxSearchBackground:
                return "wx-search-background";
            case Token::WxSpaceTabsBackground:
                return "wx-spaceTabs-background";
            case Token::WxSpaceTabsText:
                return "wx-spaceTabs-text";
            case Token::WxSpaceTabsUnderline:
                return "wx-spaceTabs-underline";
            case Token::WxSubheadingText:
                return "wx-subheading-text";
            case Token::WxSubheadingInvertedText:
                return "wx-subheadingInverted-text";
            case Token::WxFavoriteIcon:
                return "wx-favorite-icon";
            case Token::WxSpaceActionsButtonBackground:
                return "wx-spaceActionsButton-background";
            case Token::WxSpaceActionsButtonText:
                return "wx-spaceActionsButton-text";
            case Token::WxSpaceActionsButtonIcon:
                return "wx-spaceActionsButton-icon";
            case Token::WxSpinnerWithLabelBackground:
                return "wx-spinnerWithLabel-background";
            case Token::WxSpinnerWithLabelText:
                return "wx-spinnerWithLabel-text";
            case Token::WxTextInputBoxCodeBackground:
                return "wx-textInputBoxCode-background";
            case Token::WxTextInputBoxLinkText:
                return "wx-textInputBoxLink-text";
            case Token::WxTextInputBoxMessageText:
                return "wx-textInputBoxMessage-text";
            case Token::WxBrickletAvatarErrorIconBackground:
                return "wx-brickletAvatarErrorIcon-background";
            case Token::WxBrickletAvatarErrorIconBorder:
                return "wx-brickletAvatarErrorIcon-border";
            case Token::WxBrickletAvatarIconBackground:
                return "wx-brickletAvatarIcon-background";
            case Token::WxBrickletItemBackground:
                return "wx-brickletItem-background";
            case Token::WxBrickletItemHeaderText:
                return "wx-brickletItemHeader-text";
            case Token::WxBrickletItemTimerText:
                return "wx-brickletItemTimer-text";
            case Token::WxBrickletItemValidText:
                return "wx-brickletItemValid-text";
            case Token::WxBrickletJoinButtonBackground:
                return "wx-brickletJoinButton-background";
            case Token::WxBrickletJoinButtonIMOnlyBackground:
                return "wx-brickletJoinButtonIMOnly-background";
            case Token::WxBrickletJoinButtonZSMBackground:
                return "wx-brickletJoinButtonZSM-background";
            case Token::WxBrickletJoinButtonZSMSharingBackground:
                return "wx-brickletJoinButtonZSMSharing-background";
            case Token::WxBrickletJoinCallingBackground:
                return "wx-brickletJoinCalling-background";
            case Token::WxBrickletJoinedButtonBackground:
                return "wx-brickletJoinedButton-background";
            case Token::WxBrickletJoinedAdminButtonBackground:
                return "wx-brickletJoinedAdminButton-background";
            case Token::WxBrickletNotificationIconBackground:
                return "wx-brickletNotificationIcon-background";
            case Token::WxFilteredListHeaderText:
                return "wx-filteredListHeader-text";
            case Token::WxFilteredListBodyText:
                return "wx-filteredListBody-text";
            case Token::WxMentionsHighlightText:
                return "wx-mentionsHighlight-text";
            case Token::WxIncomingMessageToastReplyLabel:
                return "wx-incomingMessageToast-replyLabel";
            case Token::WxIncomingMessageToastFileLabel:
                return "wx-incomingMessageToast-fileLabel";
            case Token::MainListIndicator:
                return "mainList-indicator";
            case Token::WxMediaOptionTitleFontColor:
                return "wx-MediaOptionTitleFontColor";
            case Token::WxPreviewBackgroundButton:
                return "wx-PreviewBackgroundButton";
            case Token::WxAddNewTeamButtonBackground:
                return "wx-addNewTeamButton-background";
            case Token::WxAddNewTeamButtonBorder:
                return "wx-addNewTeamButton-border";
            case Token::WxAddNewTeamButtonIcon:
                return "wx-addNewTeamButtonIcon";
            case Token::WxCallPullButtonBackground:
                return "wx-callPullButton-background";
            case Token::WxParticipantsListDelegateBackground:
                return "wx-participantsListDelegate-background";
            case Token::WxNewParticipantsListDelegateBackground:
                return "wx-new-participantsListDelegate-background";
            case Token::WxPlusButtonBackground:
                return "wx-plusButton-background";
            case Token::WxPlusButtonSecColumnBackground:
                return "wx-plusButtonSecColumn-background";
            case Token::WxPlusButtonBorder:
                return "wx-plusButton-border";
            case Token::WxPlusButtonSecColumnBorder:
                return "wx-plusButtonSecColumn-border";
            case Token::WxPlusButtonIcon:
                return "wx-plusButtonIcon";
            case Token::WxPlusButtonSecColumnIcon:
                return "wx-plusButtonSecColumnIcon";
            case Token::WxPlusButtonThirdColumnBackground:
                return "wx-plusButtonThirdColumn-background";
            case Token::WxPlusButtonThirdColumnIcon:
                return "wx-plusButtonThirdColumnIcon";
            case Token::WxProgressbar:
                return "wx-progressbar";
            case Token::WxPhoneNumberRefreshButton:
                return "wx-phoneNumberRefreshButton";
            case Token::WxConversationActivitiesShareButton:
                return "wx-conversationActivitiesShareButton";
            case Token::WxConversationActivitiesShareButtonOutline:
                return "wx-conversationActivitiesShareButtonOutline";
            case Token::WxConversationActivitiesCallButton:
                return "wx-conversationActivitiesCallButton";
            case Token::WxConversationsHeaderText:
                return "wx-conversationsHeader-text";
            case Token::WxConversationsSubHeaderText:
                return "wx-conversationsSubHeader-text";
            case Token::WxInputBoxWidgetMentionsText:
                return "wx-inputBoxWidgetMentions-text";
            case Token::WxValidIcon:
                return "wx-validIcon";
            case Token::WxInvalidIcon:
                return "wx-invalidIcon";
            case Token::WxUrgentIcon:
                return "wx-urgentIcon";
            case Token::WxErrorText:
                return "wx-errorText";
            case Token::WxCallPickupErrorBackground:
                return "wx-callPickupError-background";
            case Token::WxCallPickupErrorText:
                return "wx-callPickupError-text";
            case Token::WxOtherPickupBackground:
                return "wx-otherPickup-background";
            case Token::WxOtherPickupText:
                return "wx-otherPickup-text";
            case Token::WxCallForwardItemBrushBackground:
                return "wx-callForwardItemBrush-background";
            case Token::WxCallForwardListItemBrushBackground:
                return "wx-callForwardListItemBrush-background";
            case Token::WxCallMeConnectionRectPenBackground:
                return "wx-callMeConnectionRectPen-background";
            case Token::WxCallPreferencesButtonIcon:
                return "wx-callPreferencesButtonIcon";
            case Token::WxDefaultOnSecondColumnText:
                return "wx-defaultOnSecondColumn-text";
            case Token::WxCustomStatusEmojiButton:
                return "wx-customStatusEmojiButton";
            case Token::WxSearchPlaceholderText:
                return "wx-searchPlaceholder-text";
            case Token::WxAvatarMenuItemIcon:
                return "wx-avatarMenuItemIcon";
            case Token::WxMenuListBackground:
                return "wx-menuList-background";
            case Token::WxControlButtonTransitioningBackground:
                return "wx-controlButtonTransitioning-background";
            case Token::WxLineEditBorder:
                return "wx-lineEdit-border";
            case Token::WxLineEditErrorBorder:
                return "wx-lineEditError-border";
            case Token::WxDefaultCheckbox:
                return "wx-default-checkbox";
            case Token::CheckboxCheckedBackground:
                return "checkbox-checked-background";
            case Token::CheckboxBackground:
                return "checkbox-background";
            case Token::CheckboxIndicator:
                return "checkbox-indicator";
            case Token::WxFourthColumnInnerRingBackground:
                return "wx-fourthColumnInnerRing-background";
            case Token::WxPlaceHolderText:
                return "wx-placeHolder-text";
            case Token::WxSearchButtonColorsBackground:
                return "wx-searchButtonColors-background";
            case Token::WxSearchInputBoxContainerIcon:
                return "wx-searchInputBoxContainer-icon";
            case Token::WxSearchItemAvatarInnerRingBackground:
                return "wx-searchItemAvatarInnerRing-background";
            case Token::WxSearchItemContactItemHighlightedText:
                return "wx-searchItemContactItemHighlighted-text";
            case Token::WxSearchItemSelectedContactAvatarInnerRingBackground:
                return "wx-searchItemSelectedContactAvatarInnerRing-background";
            case Token::WxSearchItemDelegateEmptySeparatorExistBackground:
                return "wx-searchItemDelegateEmptySeparatorExist-background";
            case Token::WxSearchItemJoinButtonBackground:
                return "wx-searchItemJoinButton-background";
            case Token::WxSearchItemMentionItemHighlightedText:
                return "wx-searchItemMentionItemHighlighted-text";
            case Token::WxSearchItemNewSpaceItemPenAndBrush:
                return "wx-searchItemNewSpaceItemPenAndBrush";
            case Token::WxSearchItemModifierTypeFillPath:
                return "wx-searchItemModifierTypeFillPath";
            case Token::WxSearchItemModifierTypeItemPen:
                return "wx-searchItemModifierTypeItemPen";
            case Token::WxSearchItemText:
                return "wx-searchItem-text";
            case Token::WxSearchItemDelegatorMoreButtonBackground:
                return "wx-searchItemDelegatorMoreButton-background";
            case Token::WxSearchModifierInputPathBackground:
                return "wx-searchModifierInputPath-background";
            case Token::WxSearchModifierInputText:
                return "wx-searchModifierInput-Text";
            case Token::WxSearchPeoplePresenceText:
                return "wx-searchPeoplePresence-text";
            case Token::WxSearchResultListImageBackground:
                return "wx-searchResultListImage-background";
            case Token::WxSearchResultSeparatorBackground:
                return "wx-searchResultSeparator-background";
            case Token::WxSpaceListText:
                return "wx-spaceList-text";
            case Token::WxSpaceListSubHeadingText:
                return "wx-spaceListSubHeading-text";
            case Token::WxGhDropShadow:
                return "wx-ghDropShadow";
            case Token::AppHeader:
                return "appHeader";
            case Token::AppHeaderBorder:
                return "appHeader-border";
            case Token::AppHeaderButtonStatus:
                return "appHeader-buttonStatus";
            case Token::AppHeaderButtonDevice:
                return "appHeader-buttonDevice";
            case Token::AppHeaderButtonDeviceTextActive:
                return "appHeader-buttonDevice-text-active";
            case Token::WxGhUserDeviceText:
                return "wx-ghUserDevice-text";
            case Token::AppHeaderText:
                return "appHeader-text";
            case Token::WxGhCancelSearchButton:
                return "wx-ghCancelSearchButton";
            case Token::WxGhCancelSearchButtonText:
                return "wx-ghCancelSearchButton-text";
            case Token::WxSearchItemWidget:
                return "wx-searchItemWidget";
            case Token::WxSearchItemWidgetText:
                return "wx-searchItemWidget-text";
            case Token::WxSearchItemWidgetIcon:
                return "wx-searchItemWidget-icon";
            case Token::WxCancelSearchButton:
                return "wx-cancelSearchButton";
            case Token::WxCancelSearchButtonText:
                return "wx-cancelSearchButton-text";
            case Token::WxGhSearchInputBoxActiveBorder:
                return "wx-ghSearchInputBoxActive-border";
            case Token::AppHeaderSearchBarOutlineActive:
                return "appHeader-searchBar-outline-active";
            case Token::AppHeaderSearchBar:
                return "appHeader-searchBar";
            case Token::AppHeaderSearchBarActive:
                return "appHeader-searchBar-active";
            case Token::WxGhSearchInputBoxText:
                return "wx-ghSearchInputBox-text";
            case Token::WxGhSearchInputBoxBackground:
                return "wx-ghSearchInputBox-background";
            case Token::WxGhSearchModifierBackground:
                return "wx-ghSearchModifier-background";
            case Token::WxGhSearchModifierText:
                return "wx-ghSearchModifier-text";
            case Token::WxSearchInputBoxBorder:
                return "wx-searchInputBox-border";
            case Token::WxSearchInputBoxBackground:
                return "wx-searchInputBox-background";
            case Token::WxSearchInputBoxText:
                return "wx-searchInputBox-text";
            case Token::AppHeaderButtonPlus:
                return "appHeader-buttonPlus";
            case Token::AppHeaderButtonPlusIcon:
                return "appHeader-buttonPlus-icon";
            case Token::WxSearchFilterBackground:
                return "wx-searchFilter-background";
            case Token::WxSearchFilterText:
                return "wx-searchFilter-text";
            case Token::WxSecondColumnBorder:
                return "wx-secondColumn-border";
            case Token::WxNavigationIcon:
                return "wx-navigationIcon";
            case Token::WxUpdateNavigationIcon:
                return "wx-updateNavigationIcon";
            case Token::WxUCConnectionIndicatorTabIcon:
                return "wx-uCConnectionIndicatorTab-icon";
            case Token::AppNavIcon:
                return "appNav-icon";
            case Token::WxGhUpdateNavigationIcon:
                return "wx-ghUpdateNavigationIcon";
            case Token::WxGlobalHeaderUCConnectionIndicatorTabIcon:
                return "wx-globalHeaderUCConnectionIndicatorTab-icon";
            case Token::AppNavBadge:
                return "appNav-badge";
            case Token::AppNavBadgeText:
                return "appNav-badge-text";
            case Token::WxUnreadCountCircleBackground:
                return "wx-unreadCountCircle-background";
            case Token::WxUnreadCountCircleText:
                return "wx-unreadCountCircle-text";
            case Token::WxFallbackNavigationTabBorder:
                return "wx-fallbackNavigationTab-border";
            case Token::AppNavBackground:
                return "appNav-background";
            case Token::WxNavigationTabBackground:
                return "wx-navigationTab-background";
            case Token::WxNavigationBackground:
                return "wx-navigation-background";
            case Token::WxTabErrorIcon:
                return "wx-tabError-icon";
            case Token::WxNavigationTabFocusRectInverted:
                return "wx-navigationTabFocusRectInverted";
            case Token::WxGhNavigationTabFocusRectInverted:
                return "wx-ghNavigationTabFocusRectInverted";
            case Token::WxProductNameTitleText:
                return "wx-productNameTitle-text";
            case Token::WxTopBarMinimizeMaximizeButtonBackground:
                return "wx-topBarMinimizeMaximizeButton-background";
            case Token::WxTopBarMinimizeMaximizeButtonText:
                return "wx-topBarMinimizeMaximizeButton-text";
            case Token::WxTopBarCloseButtonBackground:
                return "wx-topBarCloseButton-background";
            case Token::WxTopBarCloseButtonText:
                return "wx-topBarCloseButton-text";
            case Token::WxGhTopBarMinimizeMaximizeButtonText:
                return "wx-ghTopBarMinimizeMaximizeButton-text";
            case Token::WxGhTopBarCloseButtonBackground:
                return "wx-ghTopBarCloseButton-background";
            case Token::WxGhTopBarCloseButtonText:
                return "wx-ghTopBarCloseButton-text";
            case Token::WxGhTitleText:
                return "wx-ghTitle-text";
            case Token::WxGhText:
                return "wx-gh-text";
            case Token::WxGhCancelSearchIcon:
                return "wx-gh-cancelSearch-icon";
            case Token::WxGlobalFooterButtonBackground:
                return "wx-globalFooterButton-background";
            case Token::WxGlobalFooterButtonOutline:
                return "wx-globalFooterButton-Outline";
            case Token::WxGlobalFooterButtonText:
                return "wx-globalFooterButton-Text";
            case Token::WxGlobalFooterButtonTextFocus:
                return "wx-globalFooterButton-Text-Focus";
            case Token::WxGroupStateLinkButtonText:
                return "wx-groupStateLinkButton-text";
            case Token::WxGroupStateLinkButtonSidebarText:
                return "wx-groupStateLinkButtonSidebar-text";
            case Token::WxGroupBackedHelpCompleteText:
                return "wx-groupBackedHelpComplete-text";
            case Token::WxGroupBackedHelpCompleteBackground:
                return "wx-groupBackedHelpComplete-background";
            case Token::WxGroupBackedHelpCompleteSidebarText:
                return "wx-groupBackedHelpCompleteSidebar-text";
            case Token::WxGroupBackedHelpCompleteSidebarBackground:
                return "wx-groupBackedHelpCompleteSidebar-background";
            case Token::WxMultilineBadgeOneBackground:
                return "wx-multilineBadgeOne-background";
            case Token::WxMultilineBadgeTwoBackground:
                return "wx-multilineBadgeTwo-background";
            case Token::WxMultilineBadgeThreeBackground:
                return "wx-multilineBadgeThree-background";
            case Token::WxMultilineBadgeFourBackground:
                return "wx-multilineBadgeFour-background";
            case Token::WxMultilineBadgeFiveBackground:
                return "wx-multilineBadgeFive-background";
            case Token::WxMultilineBadgeSixBackground:
                return "wx-multilineBadgeSix-background";
            case Token::WxMultilineBadgeSevenBackground:
                return "wx-multilineBadgeSeven-background";
            case Token::WxMultilineBadgeEightBackground:
                return "wx-multilineBadgeEight-background";
            case Token::WxTransparentBorder:
                return "wx-transparent-border";
            case Token::WxCancelButtonText:
                return "wx-cancelButton-text";
            case Token::WxCancelButtonBackground:
                return "wx-cancelButton-background";
            case Token::WxCancelButtonBackgroundOutline:
                return "wx-cancelButton-background-outline";
            case Token::WxVoicemailPlayButtonBackground:
                return "wx-voicemailPlayButton-background";
            case Token::WxVoicemailPlaySliderBackground:
                return "wx-voicemailPlaySlider-background";
            case Token::WxVoicemailPlaySliderBorder:
                return "wx-voicemailPlaySlider-border";
            case Token::WxVoicemailPlaySliderHandleBackground:
                return "wx-voicemailPlaySliderHandle-background";
            case Token::WxRecipientButtonBackground:
                return "wx-recipientButton-background";
            case Token::WxRecipientWidgetBackground:
                return "wx-recipientWidget-background";
            case Token::WxRecipientWidgetText:
                return "wx-recipientWidget-text";
            case Token::WxRecipientWidgetScrollBarHandleBackground:
                return "wx-recipientWidgetScrollBarHandle-background";
            case Token::WxDeleteButtonBackground:
                return "wx-deleteButton-background";
            case Token::WxComboBoxBackground:
                return "wx-comboBox-background";
            case Token::WxComboBoxBorder:
                return "wx-comboBox-border";
            case Token::WxTeamsComboboxBackground:
                return "wx-teams-combobox-background";
            case Token::WxTeamsComboboxBorder:
                return "wx-teams-combobox-border";
            case Token::WxTeamsComboboxText:
                return "wx-teams-combobox-text";
            case Token::WxTeamsComboboxDropdownArrow:
                return "wx-teams-combobox-dropdown-arrow";
            case Token::WxVideoPreviewBorder:
                return "wx-videoPreview-border";
            case Token::WxVideoPreviewTopBorder:
                return "wx-videoPreviewTop-border";
            case Token::WxVideotoolbarBackground:
                return "wx-videotoolbar-background";
            case Token::WxOptionsTabBackground:
                return "wx-optionsTab-background";
            case Token::WxMeetingListRowBackground:
                return "wx-meetingListRow-background";
            case Token::WxDividerLineBackground:
                return "wx-dividerLine-background";
            case Token::WxAuthLineEditBackground:
                return "wx-authLineEdit-background";
            case Token::WxRecorderComboBoxBorder:
                return "wx-recorder-comboBox-border";
            case Token::WxRecorderTitleBackground:
                return "wx-recorder-title-background";
            case Token::WxRecorderOptionButtonBackground:
                return "wx-recorder-option-button-background";
            case Token::WxRecorderComboboxBackground:
                return "wx-recorder-combobox-background";
            case Token::WxScrollbarBackground:
                return "wx-scrollbar-background";
            case Token::WxScrollbarHandle:
                return "wx-scrollbarHandle";
            case Token::WxScrollbarBackgroundSecondary:
                return "wx-scrollbar-background-secondary";
            case Token::WxScrollbarHandleSecondary:
                return "wx-scrollbarHandle-secondary";
            case Token::WxSliderBackground:
                return "wx-slider-background";
            case Token::WxSliderAddPageBackground:
                return "wx-sliderAddPage-background";
            case Token::WxSliderSubPageBackground:
                return "wx-sliderSubPage-background";
            case Token::WxAreYouTheHostIcon:
                return "wx-areYouTheHostIcon";
            case Token::WxCloseAssociationCall:
                return "wx-closeAssociationCall";
            case Token::WxActMessage:
                return "wx-actMessage";
            case Token::WxActCall:
                return "wx-actCall";
            case Token::WxActMeetingInfo:
                return "wx-actMeetingInfo";
            case Token::WxActParticipants:
                return "wx-actParticipants";
            case Token::WxActFiles:
                return "wx-actFiles";
            case Token::WxActWhiteBoard:
                return "wx-actWhiteBoard";
            case Token::WxActScreenShare:
                return "wx-actScreenShare";
            case Token::WxActPeopleInsights:
                return "wx-actPeopleInsights";
            case Token::WxActMyThreads:
                return "wx-actMyThreads";
            case Token::WxActLinks:
                return "wx-actLinks";
            case Token::WxSpeakerButtonBackground:
                return "wx-speakerButton-background";
            case Token::WxAudioOptionsPopupSliderColorBorder:
                return "wx-audioOptionsPopupSliderColor-border";
            case Token::WxAudioOptionsPopupSliderColorBackground:
                return "wx-audioOptionsPopupSliderColor-background";
            case Token::WxClassificationButtonUnselectedText:
                return "wx-classificationButtonUnselected-text";
            case Token::WxCreateSpaceWidgetInputBorder:
                return "wx-createSpaceWidgetInput-border";
            case Token::WxClassificationLevelMenuButtonBackground:
                return "wx-classificationLevelMenuButton-background";
            case Token::WxClassificationLevelMenuCheckbox:
                return "wx-classificationLevelMenuCheckbox";
            case Token::WxCoachmarkBackground:
                return "wx-coachmark-background";
            case Token::WxAddLinkDialogInputBorder:
                return "wx-addLinkDialogInput-border";
            case Token::WxClassificationSelectionButton:
                return "wx-classificationSelection-button";
            case Token::WxClassificationSelectionButtonBorder:
                return "wx-classificationSelection-button-border";
            case Token::WxTopBarSearchButtonBackground:
                return "wx-topBarSearchButton-background";
            case Token::WxTopBarSearchButtonText:
                return "wx-topBarSearchButton-text";
            case Token::WxGhTopBarSearchButtonBackground:
                return "wx-ghTopBarSearchButton-background";
            case Token::WxGhTopBarSearchButtonText:
                return "wx-ghTopBarSearchButton-text";
            case Token::WxGhTopBarSearchButtonIcon:
                return "wx-ghTopBarSearchButtonIcon";
            case Token::WxCustomButtonBorder:
                return "wx-customButton-border";
            case Token::WxCustomButtonBackground:
                return "wx-customButton-background";
            case Token::WxCustomButtonValueIcon:
                return "wx-customButtonValueIcon";
            case Token::WxCustomButtonValueBorder:
                return "wx-customButtonValue-border";
            case Token::WxFocusColorOnColumnBackground:
                return "wx-focusColorOnColumn-background";
            case Token::WxCustomCalendarHeaderTextBackground:
                return "wx-customCalendarHeaderText-background";
            case Token::WxCustomCalendarHeaderTextForeground:
                return "wx-customCalendarHeaderText-foreground";
            case Token::WxCustomListViewHeaderText:
                return "wx-customListViewHeader-text";
            case Token::WxCustomListViewSubHeaderText:
                return "wx-customListViewSubHeader-text";
            case Token::WxCustomListViewIcon:
                return "wx-customListViewIcon";
            case Token::WxTransparentBackground:
                return "wx-transparent-background";
            case Token::WxRectButtonBorder:
                return "wx-rectButton-border";
            case Token::WxWhiteboardThumbnailBackground:
                return "wx-whiteboardThumbnail-background";
            case Token::WxWhiteboardThumbnailText:
                return "wx-whiteboardThumbnail-text";
            case Token::WxWhiteboardThumbnailButtonIcon:
                return "wx-whiteboardThumbnailButtonIcon";
            case Token::WxWhiteboardThumbnailButtonIconBackground:
                return "wx-whiteboardThumbnailButtonIcon-background";
            case Token::WxCancelHostTransferButtonBackground:
                return "wx-cancelHostTransferButton-background";
            case Token::WxCancelHostTransferButtonText:
                return "wx-cancelHostTransferButton-text";
            case Token::WxCancelHostTransferButtonBorder:
                return "wx-cancelHostTransferButton-border";
            case Token::WxLinkActivityItemBackground:
                return "wx-linkActivityItem-background";
            case Token::WxLinkActivityFocusRect:
                return "wx-linkActivityFocusRect";
            case Token::WxLinkActivityNoFavIconBackground:
                return "wx-linkActivityNoFavIcon-background";
            case Token::WxLinkActivityNoFavIcon:
                return "wx-linkActivityNoFavIcon";
            case Token::WxLinkActivityHoverRectBackground:
                return "wx-linkActivityHoverRect-background";
            case Token::WxLinkActivityButtonBackground:
                return "wx-linkActivityButton-background";
            case Token::WxLinkActivityButtonText:
                return "wx-linkActivityButton-text";
            case Token::WxButtonTabBorder:
                return "wx-buttonTab-border";
            case Token::WxButtonTabText:
                return "wx-buttonTab-text";
            case Token::WxButtonTabBackground:
                return "wx-buttonTab-background";
            case Token::WxMeetingsTabButtonText:
                return "wx-meetingsTabButton-text";
            case Token::WxPrimaryButtonContraryBackgroud:
                return "wx-primary-button-contrary-backgroud";
            case Token::WxSecondaryButtonContraryBackgroud:
                return "wx-secondary-button-contrary-backgroud";
            case Token::WxMeetingsTabButtonBackground:
                return "wx-meetingsTabButton-background";
            case Token::WxMeetingIcon:
                return "wx-meetingIcon";
            case Token::WxHealthCheckButtonBackground:
                return "wx-healthCheckButton-background";
            case Token::WxHealthCheckButtonText:
                return "wx-healthCheckButton-text";
            case Token::WxThreadsItemBackground:
                return "wx-threadsItem-background";
            case Token::WxThreadsUnreadItemText:
                return "wx-threadsUnreadItem-text";
            case Token::WxInsightsButtonBackground:
                return "wx-insightsButton-background";
            case Token::WxClassificationButtonUnselectedBackground:
                return "wx-classificationButtonUnselected-background";
            case Token::WxUnderlineButtonBackground:
                return "wx-underlineButton-background";
            case Token::WxUnderlineButtonText:
                return "wx-underlineButton-text";
            case Token::WxUnderlineSearchFilterButtonText:
                return "wx-underlineSearchFilterButton-text";
            case Token::WxSearchModifierBackground:
                return "wx-searchModifier-background";
            case Token::WxNotificationBackground:
                return "wx-notification-background";
            case Token::WxNotificationText:
                return "wx-notification-text";
            case Token::WxNotificationSecondaryBackground:
                return "wx-notification-secondary-background";
            case Token::WxNotificationSecondaryBorder:
                return "wx-notification-secondary-border";
            case Token::WxNotificationSecondaryText:
                return "wx-notification-secondary-text";
            case Token::WxTeamButtonBackground:
                return "wx-teamButton-background";
            case Token::WxThemeButtonBackground:
                return "wx-themeButton-background";
            case Token::WxShareSelectionWindowItemBorder:
                return "wx-share-selection-window-item-border";
            case Token::WxShareSeparator:
                return "wx-shareSeparator";
            case Token::WxShareSelectionWindowBackground:
                return "wx-share-selection-window-background";
            case Token::WxShareSelectedItemBorder:
                return "wx-share-selected-item-border";
            case Token::WxShareApplicationIconBackground:
                return "wx-share-application-icon-background";
            case Token::WxShareApplicationIconBorder:
                return "wx-share-application-icon-border";
            case Token::WxShareItemHoverBackground:
                return "wx-share-item-hover-background";
            case Token::WxShareDropdownColor:
                return "wx-share-dropdown-color";
            case Token::WxShareGrayDropdownColor:
                return "wx-share-gray-dropdown-color";
            case Token::WxShareSharingBorderColor:
                return "wx-share-sharing-border-color";
            case Token::WxShareSharingBorderColorOutline:
                return "wx-share-sharing-border-color-outline";
            case Token::WxShareSelectionBorderColor:
                return "wx-share-selection-border-color";
            case Token::WxShareSelectionWindowPopoverBorderColor:
                return "wx-share-selection-window-popover-border-color";
            case Token::WxShareSelectionIconBackgroundColor:
                return "wx-share-selection-icon-background-color";
            case Token::WxShareUnsharedApplicationBorderColor:
                return "wx-share-unshared-application-border-color";
            case Token::WxShareBarButtonColor:
                return "wx-share-bar-button-color";
            case Token::WxShareBarButtonFontColor:
                return "wx-share-bar-button-font-color";
            case Token::WxShareBarGrayButtonColor:
                return "wx-share-bar-gray-button-color";
            case Token::WxShareBarDraggerColor:
                return "wx-share-bar-dragger-color";
            case Token::WxShareBarGrayDraggerColor:
                return "wx-share-bar-gray-dragger-color";
            case Token::WxShareResumeBarColor:
                return "wx-share-resume-bar-color";
            case Token::WxShareToastIconBackgroundColor:
                return "wx-share-toast-icon-background-color";
            case Token::WxShareScreenNumberNotificationBackground:
                return "wx-share-screen-number-notification-background";
            case Token::WxTutorialSeparator:
                return "wx-tutorialSeparator";
            case Token::WxTutorialHeaderText:
                return "wx-tutorialHeader-text";
            case Token::WxTutorialDescriptionText:
                return "wx-tutorialDescription-text";
            case Token::WxTutorialSelectorButton:
                return "wx-tutorialSelectorButton";
            case Token::WxPreviewContentListIcon:
                return "wx-previewContentListIcon";
            case Token::WxPreviewContentListBackground:
                return "wx-previewContentList-background";
            case Token::WxPreviewVideoRectBackground:
                return "wx-previewVideoRect-background";
            case Token::WxSecondColumnFlagIcon:
                return "wx-secondColumnFlagIcon";
            case Token::WxFilterControlIcon:
                return "wx-filterControlIcon";
            case Token::WxFilterControlBackground:
                return "wx-filterControlBackground";
            case Token::WxUcStatusButtonBackground:
                return "wx-ucStatusButton-background";
            case Token::WxCustomAppButtonIcon:
                return "wx-customAppButtonIcon";
            case Token::WxCustomAppButtonIconBackground:
                return "wx-customAppButtonIcon-background";
            case Token::WxUcStatusLabelText:
                return "wx-ucStatus-label-text";
            case Token::WxPopupMenuItemBackground:
                return "wx-popupMenuItem-background";
            case Token::WxPopupMenuItemText:
                return "wx-popupMenuItem-text";
            case Token::WxAvatarNameInputBorder:
                return "wx-avatarNameInput-border";
            case Token::WxFilesAppButtonIcon:
                return "wx-filesAppButtonIcon";
            case Token::WxFilesAppButtonBackground:
                return "wx-filesAppButton-background";
            case Token::WxFilesAppControlPanelBackground:
                return "wx-filesAppControlPanel-background";
            case Token::WxFilesAppButtondividerLine:
                return "wx-filesAppButtondividerLine";
            case Token::WxFilesListButtonBackground:
                return "wx-filesListButton-background";
            case Token::WxFilesListIconBorder:
                return "wx-filesListIcon-border";
            case Token::WxStatusDefaultIcon:
                return "wx-statusDefaultIcon";
            case Token::WxStatusReadyIcon:
                return "wx-statusReadyIcon";
            case Token::WxSelfViewEnabledButtonIcon:
                return "wx-selfViewEnabledButtonIcon";
            case Token::WxCustomMenuBackground:
                return "wx-customMenu-background";
            case Token::WxCustomMenuText:
                return "wx-customMenu-text";
            case Token::WxCustomMenuBorder:
                return "wx-customMenu-border";
            case Token::WxTransparentButton:
                return "wx-transparent-button";
            case Token::WxSemiTransparentPreviewBackground:
                return "wx-semiTransparentPreview-background";
            case Token::WxSemiTransparentControl:
                return "wx-semiTransparentControl";
            case Token::WxCallStatisticsTitleBackground:
                return "wx-callStatisticsTitle-background";
            case Token::WxCallStatisticsTitleText:
                return "wx-callStatisticsTitle-text";
            case Token::WxCallStatisticsRecTranBackground:
                return "wx-callStatisticsRecTran-background";
            case Token::WxCallStatisticsRecTranText:
                return "wx-callStatisticsRecTran-text";
            case Token::WxCalendarIcon:
                return "wx-calendarIcon";
            case Token::WxCopyButtonBackground:
                return "wx-copyButton-background";
            case Token::WxSettingsButtonBackground:
                return "wx-settingsButton-background";
            case Token::WxSettingsButtonIcon:
                return "wx-settingsButtonIcon";
            case Token::WxCopyButtonIcon:
                return "wx-copyButtonIcon";
            case Token::WxVideoAdressInputIcon:
                return "wx-videoAdressInputIcon";
            case Token::WxCopiedLabelBackground:
                return "wx-copiedLabel-background";
            case Token::WxCopiedLabelText:
                return "wx-copiedLabel-text";
            case Token::WxCopyButtonAfterCopiedIcon:
                return "wx-copyButtonAfterCopiedIcon";
            case Token::WxJoinMeetingButtonIcon:
                return "wx-joinMeetingButtonIcon";
            case Token::WxCopyPMRButtonIcon:
                return "wx-copyPMRButtonIcon";
            case Token::WxCallPopupMenuItemBackground:
                return "wx-callPopupMenuItem-background";
            case Token::WxCallPopupMenuItemText:
                return "wx-callPopupMenuItem-text";
            case Token::WxStopCallButtonIcon:
                return "wx-stopCallButtonIcon";
            case Token::WxDefaultSparkToolbarBackground:
                return "wx-defaultSparkToolbar-background";
            case Token::WxSparkToolbarButtonText:
                return "wx-sparkToolbarButton-text";
            case Token::WxWbClearAllButtonText:
                return "wx-wbClearAllButton-text";
            case Token::WxMultiAppShareShiftLabelBackground:
                return "wx-multiAppShareShiftLabel-background";
            case Token::WxAppShareButtonBackground:
                return "wx-appShareButton-background";
            case Token::WxAppShareIconBackground:
                return "wx-appShareIcon-background";
            case Token::WxAppShareIconPlaceholder:
                return "wx-appShareIconPlaceholder";
            case Token::WxCallWindowCheckedIcon:
                return "wx-callWindowCheckedIcon";
            case Token::WxSelfMessageCircleIcon:
                return "wx-selfMessageCircleIcon";
            case Token::WxSelfMessageCircleBorder:
                return "wx-selfMessageCircle-border";
            case Token::WxAddButtonBackground:
                return "wx-addButton-background";
            case Token::WxAddButtonText:
                return "wx-addButton-text";
            case Token::WxAddButtonIcon:
                return "wx-addButton-icon";
            case Token::WxPopoverBackground:
                return "wx-popover-background";
            case Token::WxScreenShareButtonBorder:
                return "wx-screenShareButton-border";
            case Token::WxScreenShareTitleText:
                return "wx-screenShareTitle-text";
            case Token::WxScreenShareInfoFrameBackground:
                return "wx-screenShareInfoFrame-background";
            case Token::WxScreenShareRebrandingInfoFrameBackground:
                return "wx-screenShareRebrandingInfoFrame-background";
            case Token::WxScreenShareDropdownBackground:
                return "wx-screenShareDropdown-background";
            case Token::WxScreenShareDropdownGrayBackground:
                return "wx-screenShareDropdownGray-background";
            case Token::WxScreenShareRecordingButtonBackground:
                return "wx-screenShareRecordingButton-background";
            case Token::WxGeneralListBackground:
                return "wx-general-list-background";
            case Token::WxGeneralListBorder:
                return "wx-general-list-border";
            case Token::WxGeneralListText:
                return "wx-general-list-text";
            case Token::WxCallStripAudioVideoButtonIcon:
                return "wx-callStripAudioVideoButton-icon";
            case Token::WxDefaultBlurBorder:
                return "wx-defaultBlur-border";
            case Token::WxExitHostPINViewButtonText:
                return "wx-exitHostPINViewButton-text";
            case Token::WxInfoButtonBackground:
                return "wx-infoButton-background";
            case Token::WxInputFieldBorder:
                return "wx-inputField-border";
            case Token::WxMuteAudioButtonBackground:
                return "wx-muteAudioButton-background";
            case Token::WxFilmStripPipWidgetBackground:
                return "wx-filmStripPipWidget-background";
            case Token::WxPinChallengeWidgetCloseButtonBackground:
                return "wx-pinChallengeWidgetCloseButton-background";
            case Token::WxCloseXButtonIcon:
                return "wx-closeXButtonIcon";
            case Token::WxStopShareButtonBackground:
                return "wx-stopShareButton-background";
            case Token::WxCustomCalendarCellHighlightBackground:
                return "wx-customCalendarCellHighlight-background";
            case Token::WxAvatarlistText:
                return "wx-avatarlist-text";
            case Token::WxAvatarlistCircle:
                return "wx-avatarlist-circle";
            case Token::WxDeviceMenuBackground:
                return "wx-device-menu-background";
            case Token::WxInterstitialBackground:
                return "wx-interstitial-background";
            case Token::WxInterstitialFrameBackground:
                return "wx-interstitial-frame-background";
            case Token::WxInterstitialChangeVideoButtonBackground:
                return "wx-interstitial-change-video-button-background";
            case Token::WxInterstitialChangeVideoButtonBorder:
                return "wx-interstitial-change-video-button-border";
            case Token::WxInterstitialAudioOptionsButton:
                return "wx-interstitial-audio-options-button";
            case Token::WxInterstitialButtonBackground:
                return "wx-interstitial-button-background";
            case Token::WxInterstitialButtonBorder:
                return "wx-interstitial-button-border";
            case Token::WxInterstitialFrameVideoBackground:
                return "wx-interstitial-frame-video-background";
            case Token::WxInterstitialFrameVideoBorder:
                return "wx-interstitial-frame-video-border";
            case Token::WxInterstitialFrameVideoBackgroundVdi:
                return "wx-interstitial-frame-video-background-vdi";
            case Token::WxInterstitialDisconnectButtonText:
                return "wx-interstitial-disconnect-button-text";
            case Token::WxInterstitialJoinButtonText:
                return "wx-interstitial-join-button-text";
            case Token::WxInterstitialDisconnectButtonBackground:
                return "wx-interstitial-disconnect-button-background";
            case Token::WxInterstitialAudioButtonBackground:
                return "wx-interstitial-audio-button-background";
            case Token::WxInterstitialMuteButtonIcon:
                return "wx-interstitial-mute-button-icon";
            case Token::WxInterstitialMuteButtonIconChecked:
                return "wx-interstitial-mute-button-icon-checked";
            case Token::WxInterstitialAudioButtonBorder:
                return "wx-interstitial-audio-button-border";
            case Token::WxInterstitialPairedComboboxText:
                return "wx-interstitial-paired-combobox-text";
            case Token::WxInterstitialPairedComboboxBackground:
                return "wx-interstitial-paired-combobox-background";
            case Token::WxInterstitialNotMirroredBackground:
                return "wx-interstitial-not-mirrored-background";
            case Token::WxInterstitialMirroredBackground:
                return "wx-interstitial-mirrored-background";
            case Token::WxInterstitialMirroredTextMirror:
                return "wx-interstitial-mirrored-text-mirror";
            case Token::WxInterstitialMirroredTextUnmirror:
                return "wx-interstitial-mirrored-text-unmirror";
            case Token::WxInterstitialPreviewBackground:
                return "wx-interstitial-preview-background";
            case Token::WxInterstitialDeviceSettigBackground:
                return "wx-interstitial-device-settig-background";
            case Token::WxCallControlButtonBackground:
                return "wx-call-control-button-background";
            case Token::WxCallControlButtonBorder:
                return "wx-call-control-button-border";
            case Token::WxCallControlButtonText:
                return "wx-call-control-button-text";
            case Token::WxCallControlMoreButtonBackground:
                return "wx-call-control-moreButton-background";
            case Token::WxCallViewTimeLabelBackground:
                return "wx-call-view-timeLabel-background";
            case Token::WxTitilebarRecordinglabelBackground:
                return "wx-titilebar-recordinglabel-background";
            case Token::WxTitilebarPausedlabelBackground:
                return "wx-titilebar-pausedlabel-background";
            case Token::WxTitilebarLocklabelBackground:
                return "wx-titilebar-locklabel-background";
            case Token::WxTitilebarMediaqualitygoodlabelBackground:
                return "wx-titilebar-mediaqualitygoodlabel-background";
            case Token::WxTitilebarMediaqualityunstablelabelBackground:
                return "wx-titilebar-mediaqualityunstablelabel-background";
            case Token::WxTitilebarMediaqualitypoorlabelBackground:
                return "wx-titilebar-mediaqualitypoorlabel-background";
            case Token::WxCustomCalendarCellBackground:
                return "wx-customCalendarCell-background";
            case Token::WxCallControlPanelButtonBackground:
                return "wx-call-control-panelButton-background";
            case Token::WxCallControlPanelButtonBorder:
                return "wx-call-control-panelButton-border";
            case Token::WxCallControlPanelButtonText:
                return "wx-call-control-panelButton-text";
            case Token::WxCallControlVolumeBackground:
                return "wx-call-control-volume-background";
            case Token::WxCallControlPopoverBorder:
                return "wx-call-control-popover-border";
            case Token::WxCallControlMoreMenuBackground:
                return "wx-call-control-more-menu-background";
            case Token::WxCallVideoLayoutMenuLayoutButtonText:
                return "wx-call-videoLayoutMenu-layoutButton-text";
            case Token::WxCallVideoLayoutMenuLayoutButtonBackground:
                return "wx-call-videoLayoutMenu-layoutButton-background";
            case Token::WxCallVideoLayoutMenuSeparatorBackground:
                return "wx-call-videoLayoutMenu-separator-background";
            case Token::WxCallVideoLayoutMenuPopoverBackground:
                return "wx-call-videoLayoutMenu-popover-background";
            case Token::MainList:
                return "mainList";
            case Token::MainListItem:
                return "mainList-item";
            case Token::WxResumeCallButtonText:
                return "wx-resumeCallButton-text";
            case Token::WxMeetingInfoBackground:
                return "wx-meeting-info-background";
            case Token::WxSoftLandingLeftSideBackground:
                return "wx-softLanding-leftSide-background";
            case Token::WxCallControlEndButtonIcon:
                return "wx-call-control-endButton-icon";
            case Token::WxVideoLayoutControlButtonText:
                return "wx-video-layout-controlButton-text";
            case Token::WxVideoLayoutControlButtonBackground:
                return "wx-video-layout-controlButton-background";
            case Token::WxTitilebarMeetingInfoSvgText:
                return "wx-titilebar-meetingInfo-svg-text";
            case Token::WxTitilebarMeetingInfoButtonBackground:
                return "wx-titilebar-meetingInfoButton-background";
            case Token::WxNametagBackground:
                return "wx-nametag-background";
            case Token::WxNametagBorder:
                return "wx-nametag-border";
            case Token::WxNametagBackgroundHasvideo:
                return "wx-nametag-background-hasvideo";
            case Token::WxNametagTextHasvideo:
                return "wx-nametag-text-hasvideo";
            case Token::WxMorebuttonBorder:
                return "wx-morebutton-border";
            case Token::WxFocusOutlineBorder:
                return "wx-focusOutline-border";
            case Token::WxFocusOutlineSplitbuttonBorder:
                return "wx-focusOutline-splitbutton-border";
            case Token::WxAvatarInitialsText:
                return "wx-avatarInitials-text";
            case Token::WxFocusOutlineTransparentBorder:
                return "wx-focusOutline-transparent-border";
            case Token::WxFocusOutlineButtonJoinBorder:
                return "wx-focusOutline-buttonJoin-border";
            case Token::WxCallDialogBorder:
                return "wx-call-dialog-border";
            case Token::WxLayoutMenuButtonBackground:
                return "wx-layout-menu-button-background";
            case Token::WxLayoutMenuButtonBorder:
                return "wx-layout-menu-button-border";
            case Token::WxLayoutButtonBackground:
                return "wx-layout-button-background";
            case Token::WxLayoutButtonText:
                return "wx-layout-button-text";
            case Token::WxRosterMuteButtonBackground:
                return "wx-roster-mute-button-background";
            case Token::WxCallSplitterBackground:
                return "wx-call-splitter-background";
            case Token::WxMeetingListItemBackground:
                return "wx-meeting-list-item-background";
            case Token::WxPopupLabelBackground:
                return "wx-popupLabel-background";
            case Token::WxPopupLabelBorder:
                return "wx-popupLabel-border";
            case Token::WxLobbyViewBackground:
                return "wx-lobbyView-background";
            case Token::WxLobbyViewTextPrimary:
                return "wx-lobbyView-text-primary";
            case Token::WxLobbyViewTextSecondary:
                return "wx-lobbyView-text-secondary";
            case Token::WxPercentageIndicatorPossessive:
                return "wx-percentage-indicator-possessive";
            case Token::WxPercentageIndicatorRemaining:
                return "wx-percentage-indicator-remaining";
            case Token::WxMeetingReminderBorder:
                return "wx-meeting-reminder-border";
            case Token::WxCallMoreEndPopupMenuItemBackground:
                return "wx-callMoreEndPopupMenu-item-background";
            case Token::WxCallHistoryItemMissed:
                return "wx-callHistory-item-missed";
            case Token::WxCallHistoryDetailMissed:
                return "wx-callHistory-detail-missed";
            case Token::WxDevicePremeetingVolumeControl:
                return "wx-device-premeeting-volume-control";
            case Token::WxDeviceInMeetingButton:
                return "wx-device-in-meeting-button";
            case Token::WxToggleBlueColor:
                return "wx-toggle-blue-color";
            case Token::WxToggleGrayColor:
                return "wx-toggle-gray-color";
            case Token::WxFooterInfoIcon:
                return "wx-footer-info-icon";
            case Token::WxMeetingRSVPStatusTentativeButtonBackground:
                return "wx-meetingRSVPStatus-tentativeButton-background";
            case Token::WxMeetingRSVPStatusAcceptButtonBackground:
                return "wx-meetingRSVPStatus-acceptButton-background";
            case Token::WxMeetingRSVPStatusDeclineButtonBackground:
                return "wx-meetingRSVPStatus-declineButton-background";
            case Token::WxMeetingRSVPStatusButtonText:
                return "wx-meetingRSVPStatus-button-text";
            case Token::WxMeetingRSVPStatusButtonBorder:
                return "wx-meetingRSVPStatus-button-border";
            case Token::WxButtonJoinIconBackground:
                return "wx-buttonJoinIcon-background";
            case Token::WxButtonJoinIconOBTPBackground:
                return "wx-buttonJoinIconOBTP-background";
            case Token::WxScheduleButtonBackground:
                return "wx-scheduleButton-background";
            case Token::WxScheduleButtonIcon:
                return "wx-scheduleButton-icon";
            case Token::WxButtonJoinBackground:
                return "wx-buttonJoin-background";
            case Token::WxFooterWarningIcon:
                return "wx-footer-warning-icon";
            case Token::ClosedCaptionsTextSecondary:
                return "closedCaptions-text-secondary";
            case Token::ClosedCaptionsTextPrimary:
                return "closedCaptions-text-primary";
            case Token::ClosedCaptionsSpeakerSecondary:
                return "closedCaptions-speaker-secondary";
            case Token::ClosedCaptionsSpeakerPrimary:
                return "closedCaptions-speaker-primary";
            case Token::ClosedCaptionsStaticBackgroundSecondary:
                return "closedCaptions-static-background-secondary";
            case Token::ClosedCaptionsStaticBackgroundPrimary:
                return "closedCaptions-static-background-primary";
            case Token::ClosedCaptionsBackgroundSecondary:
                return "closedCaptions-background-secondary";
            case Token::ClosedCaptionsBackgroundPrimary:
                return "closedCaptions-background-primary";
            case Token::ClosedCaptionsMenuPrimary:
                return "closedCaptions-menu-primary";
            case Token::ClosedCaptionsMenuBackgroundPrimary:
                return "closedCaptions-menu-background-primary";
            case Token::ClosedCaptionsBorderSecondary:
                return "closedCaptions-border-secondary";
            case Token::ClosedCaptionsBorderPrimary:
                return "closedCaptions-border-primary";
            case Token::HighlightDecision:
                return "highlight-decision";
            case Token::HighlightSummary:
                return "highlight-summary";
            case Token::HighlightAgenda:
                return "highlight-agenda";
            case Token::HighlightNextstep:
                return "highlight-nextstep";
            case Token::HighlightDebrief:
                return "highlight-debrief";
            case Token::HighlightActionitem:
                return "highlight-actionitem";
            case Token::HighlightNote:
                return "highlight-note";
            case Token::HighlightReminder:
                return "highlight-reminder";
            case Token::HighlightParkinglot:
                return "highlight-parkinglot";
            case Token::WxExternalBadgeBackground:
                return "wx-external-badge-background";
            case Token::WxExternalBadgeText:
                return "wx-external-badge-text";
            case Token::WxHandRecognizeCircularProgressBarBackground:
                return "wx-hand-recognize-circular-progress-bar-background";
            case Token::WxReactionListItemGradientBackgroundStartColor:
                return "wx-reaction-list-item-gradient-background-start-color";
            case Token::WxReactionListItemGradientBackgroundEndColor:
                return "wx-reaction-list-item-gradient-background-end-color";
            case Token::WxReactionListItemGradientBorderStartColor:
                return "wx-reaction-list-item-gradient-border-start-color";
            case Token::WxReactionListItemGradientBorderEndColor:
                return "wx-reaction-list-item-gradient-border-end-color";
            case Token::WxReactionExpendButtonColor:
                return "wx-reaction-expend-button-color";
            case Token::WxReactionExpendButtonBorderColor:
                return "wx-reaction-expend-button-border-color";
            case Token::WxReactionListBackgroundColor:
                return "wx-reaction-list-background-color";
            case Token::WxReactionListBackgroundColorVdi:
                return "wx-reaction-list-background-color-vdi";
            case Token::WxReactionListItemBackgroundColor:
                return "wx-reaction-list-item-background-color";
            case Token::WxReactionListItemBorderColor:
                return "wx-reaction-list-item-border-color";
            case Token::WxReactionListAvatarBorderColor:
                return "wx-reaction-list-avatar-border-color";
            case Token::WxReactionRecognizableIndicatorBackground:
                return "wx-reaction-recognizable-indicator-background";
            case Token::WxMultitaskPanelButtonBackground:
                return "wx-multitask-panel-button-background";
            case Token::WxMultitaskPanelButtonBackgroundOutline:
                return "wx-multitask-panel-button-background-outline";
            case Token::WxMultitaskShadowWindow:
                return "wx-multitask-shadow-window";
            case Token::WxMultitaskActivespeakerBackground:
                return "wx-multitask-activespeaker-background";
            case Token::WxRaiseHandRecognizableIndicatorBackground:
                return "wx-raise-hand-recognizable-indicator-background";
            case Token::WxDeviceNewvolumnControlButtonBackground:
                return "wx-device-newvolumn-control-button-background";
            case Token::WxDeviceNewvolumnControlButtonBorder:
                return "wx-device-newvolumn-control-button-border";
            case Token::WxPhonenumberListBackground:
                return "wx-phonenumber-list-background";
            case Token::WxActivatedDeviceStatus:
                return "wx-activated-device-status";
            case Token::WxUcAccountInformationAlertBackground:
                return "wx-uc-account-information-alert-background";
            case Token::ParticipantListMutedIconColor:
                return "participant-list-muted-icon-color";
            case Token::ParticipantListMicrophoneOnColor:
                return "participant-list-microphone-on-color";
            case Token::WxDefaultAvatarBackground:
                return "wx-default-avatar-background";
            case Token::WxLeftpaneShortcutAppIconOrange:
                return "wx-leftpane-shortcut-app-icon-orange";
            case Token::WxLeftpaneShortcutAppIconGold:
                return "wx-leftpane-shortcut-app-icon-gold";
            case Token::WxLeftpaneShortcutAppIconOlive:
                return "wx-leftpane-shortcut-app-icon-olive";
            case Token::WxLeftpaneShortcutAppIconLime:
                return "wx-leftpane-shortcut-app-icon-lime";
            case Token::WxLeftpaneShortcutAppIconMint:
                return "wx-leftpane-shortcut-app-icon-mint";
            case Token::WxLeftpaneShortcutAppIconCyan:
                return "wx-leftpane-shortcut-app-icon-cyan";
            case Token::WxLeftpaneShortcutAppIconCobalt:
                return "wx-leftpane-shortcut-app-icon-cobalt";
            case Token::WxLeftpaneShortcutAppIconSlate:
                return "wx-leftpane-shortcut-app-icon-slate";
            case Token::WxLeftpaneShortcutAppIconViolet:
                return "wx-leftpane-shortcut-app-icon-violet";
            case Token::WxLeftpaneShortcutAppIconPurple:
                return "wx-leftpane-shortcut-app-icon-purple";
            case Token::WxLeftpaneShortcutAppIconPink:
                return "wx-leftpane-shortcut-app-icon-pink";
            case Token::WxTextEditBackground:
                return "wx-textEdit-background";
            case Token::WxTextEditText:
                return "wx-textEdit-text";
            case Token::WxSliderFull:
                return "wx-slider-full";
            case Token::WxSliderEmpty:
                return "wx-slider-empty";
            case Token::WxSliderHandle:
                return "wx-slider-handle";
            case Token::WxRecordingThumbnailBackground:
                return "wx-recording-thumbnail-background";
            case Token::WxRecordingThumbnailBorder:
                return "wx-recording-thumbnail-border";
            case Token::WxRecordingControlsBackground:
                return "wx-recording-controls-background";
            case Token::WxRecordingVideoBackground:
                return "wx-recording-video-background";
            case Token::WxTopBarMainMinMaxButtonBackground:
                return "wx-topBarMainMinMaxButton-background";
            case Token::WxUnreadPillButtonCheckedColor:
                return "wx-unread-pill-button-checked-color";
            case Token::WxListItemTextPrimary:
                return "wx-listItemText-primary";
            case Token::WxListItemTextSecondary:
                return "wx-listItemText-secondary";
            case Token::WxSpaceHeaderButtonText:
                return "wx-space-header-button-text";
            case Token::WxDefaultBorderForButton:
                return "wx-defaultBorderForButton";
            case Token::WxAppextensionListItemBorder:
                return "wx-appextension-listItem-border";
            case Token::WxPopupWidgetBorder:
                return "wx-popup-widget-border";
            case Token::WxAppextensionClearIcon:
                return "wx-appextension-clear-icon";
            case Token::WxSendMessageIcon:
                return "wx-sendMessage-icon";
            case Token::WxInvertedButtonText:
                return "wx-inverted-button-text";
            case Token::WxMeetingsInnerButtonColor:
                return "wx-meetingsInnerButton-color";
            case Token::WxSubheaderText:
                return "wx-subheader-text";
            case Token::WxCloseCreateSpaceButon:
                return "wx-closeCreateSpaceButon";
            case Token::WxAppextensionDefaultWebsiteIcon:
                return "wx-appextension-default-website-icon";
            case Token::WxTabSelectorViewText:
                return "wx-tabSelectorView-text";
            case Token::WxTeamNameLabelText:
                return "wx-teamNameLabel-text";
            case Token::WxAppextensionInfoDialogAddedBy:
                return "wx-appextension-info-dialog-added-by";
            case Token::WxRecordingContainerBorder:
                return "wx-recordingContainer-border";
            case Token::WxAddNewTeamBackground:
                return "wx-addNewTeam-background";
            case Token::WxAddNewTeamText:
                return "wx-addNewTeam-text";
            case Token::WxUnreadMessageIndicator:
                return "wx-unreadMessageIndicator";
            case Token::WxMeetingSpaceName:
                return "wx-meetingSpaceName";
            case Token::WxMeetingInProgress:
                return "wx-meetingInProgress";
            case Token::WxAlertTextErrorMeetingConflict:
                return "wx-alertText-error-meeting-conflict";
            case Token::WxTextPrimaryMeetingInfo:
                return "wx-text-primary-meeting-info";
            case Token::WxCheckMark:
                return "wx-checkMark";
            case Token::WxDeviceConnectionBorder:
                return "wx-deviceConnection-border";
            case Token::WxDeviceVolumeControlBorder:
                return "wx-device-volume-control-border";
            case Token::UtLegacySettingsIcon:
                return "ut-legacy-settings-icon";
            case Token::UtLegacyFavoriteIcon:
                return "ut-legacy-favorite-icon";
            case Token::UtLegacyExpressiveMessageIcon:
                return "ut-legacy-expressiveMessage-icon";
            case Token::WxDeviceDisconnectButton:
                return "wx-device-disconnect-button";
            case Token::WxNotificationBorderShadow:
                return "wx-notification-border-shadow";
            case Token::WxHaloEffectSolidWaveStart:
                return "wx-halo-effect-solid-wave-start";
            case Token::WxHaloEffectSolidWaveEnd:
                return "wx-halo-effect-solid-wave-end";
            case Token::WxHaloEffectOutsideWaveStart:
                return "wx-halo-effect-outside-wave-start";
            case Token::WxHaloEffectOutsideWaveEnd:
                return "wx-halo-effect-outside-wave-end";
            case Token::ButtonSecondaryBackground:
                return "button-secondary-background";
            case Token::ButtonSecondaryBorder:
                return "button-secondary-border";
            case Token::ButtonGhostBackground:
                return "button-ghost-background";
            case Token::ButtonSecondaryText:
                return "button-secondary-text";
            case Token::ButtonGhostBorder:
                return "button-ghost-border";
            case Token::ModalPrimaryBackground:
                return "modal-primary-background";
            case Token::ModalPrimaryBorder:
                return "modal-primary-border";
            case Token::ModalSecondaryBackground:
                return "modal-secondary-background";
            case Token::ModalSecondaryBorder:
                return "modal-secondary-border";
            case Token::SeparatorSecondary:
                return "separator-secondary";
            case Token::ListitemBackground:
                return "listitem-background";
            case Token::ListitemTick:
                return "listitem-tick";
            case Token::CheckboxCheckedBorder:
                return "checkbox-checked-border";
            case Token::SharewindowPreviewActive:
                return "sharewindow-preview-active";
            case Token::SharewindowPreviewInactive:
                return "sharewindow-preview-inactive";
            case Token::SharewindowBorderSelected:
                return "sharewindow-border-selected";
            case Token::SharewindowBorderActive:
                return "sharewindow-border-active";
            case Token::SharewindowBorderInactive:
                return "sharewindow-border-inactive";
            case Token::WxRemoteShareBackground:
                return "wx-remote-share-background";
            case Token::TabActiveBackground:
                return "tab-active-background";
            case Token::TabActiveText:
                return "tab-active-text";
            case Token::TabInactiveBackground:
                return "tab-inactive-background";
            case Token::TabInactiveText:
                return "tab-inactive-text";
            case Token::ListitemTextprimary:
                return "listitem-textprimary";
            case Token::ListitemTextsecondary:
                return "listitem-textsecondary";
            case Token::ButtonSecondaryActiveBackground:
                return "button-secondary-active-background";
            case Token::ButtonSecondaryActiveText:
                return "button-secondary-active-text";
            case Token::ButtonSecondaryActiveBorder:
                return "button-secondary-active-border";
            case Token::ButtonInvertedBackground:
                return "button-inverted-background";
            case Token::ButtonInvertedText:
                return "button-inverted-text";
            case Token::ButtonInvertedBorder:
                return "button-inverted-border";
            case Token::BannerWarningBackground:
                return "banner-warning-background";
            case Token::BannerWarningText:
                return "banner-warning-text";
            case Token::BannerIssueBackground:
                return "banner-issue-background";
            case Token::LabelWarningText:
                return "label-warning-text";
            case Token::WxSharewindowDragger:
                return "wx-sharewindow-dragger";
            case Token::SharewindowControlTextPrimary:
                return "sharewindow-control-text-primary";
            case Token::SharewindowControlButtonPrimaryBackground:
                return "sharewindow-control-button-primary-background";
            case Token::SharewindowControlButtonPrimaryText:
                return "sharewindow-control-button-primary-text";
            case Token::SharewindowControlButtonSecondaryBackground:
                return "sharewindow-control-button-secondary-background";
            case Token::SharewindowControlButtonSecondaryBorder:
                return "sharewindow-control-button-secondary-border";
            case Token::SharewindowControlButtonSecondaryText:
                return "sharewindow-control-button-secondary-text";
            case Token::SharewindowControlButtonActiveBackground:
                return "sharewindow-control-button-active-background";
            case Token::SharewindowControlButtonActiveBorder:
                return "sharewindow-control-button-active-border";
            case Token::SharewindowControlButtonActiveText:
                return "sharewindow-control-button-active-text";
            case Token::ThemeGradientSecondary0Background:
                return "theme-gradient-secondary-0-background";
            case Token::ThemeGradientSecondary1Background:
                return "theme-gradient-secondary-1-background";
            case Token::WxCurrentCallingStatusBackground:
                return "wx-currentCallingStatus-background";
            case Token::ListitemTextprimaryNormal:
                return "listitem-textprimary-normal";
            case Token::AlertbadgeAnnouncementBackground:
                return "alertbadge-announcement-background";
            case Token::AlertbadgeAnnouncementText:
                return "alertbadge-announcement-text";
            case Token::ListitemTextmissed:
                return "listitem-textmissed";
            case Token::WxCheckedQradiobuttonBorder:
                return "wx-checked-qradiobutton-border";
            case Token::WxUncheckedQradiobuttonBorder:
                return "wx-unchecked-qradiobutton-border";
            case Token::WxCheckedQradiobuttonBackgroud:
                return "wx-checked-qradiobutton-backgroud";
            case Token::SharewindowViewwindowActive:
                return "sharewindow-viewwindow-active";
            case Token::SharewindowViewwindowHovered:
                return "sharewindow-viewwindow-hovered";
            case Token::SharewindowViewwindowSelected:
                return "sharewindow-viewwindow-selected";
            case Token::BadgeTabActiveDarkBackgroundLegacy:
                return "badge-tab-active-dark-background-legacy";
            case Token::BadgeTabActiveLightBackgroundLegacy:
                return "badge-tab-active-light-background-legacy";
            case Token::BadgeTabInactiveDarkBackgroundLegacy:
                return "badge-tab-inactive-dark-background-legacy";
            case Token::BadgeTabInactiveLightBackgroundLegacy:
                return "badge-tab-inactive-light-background-legacy";
            case Token::BadgeTabInactiveTextDarkBackgroundLegacy:
                return "badge-tab-inactive-text-dark-background-legacy";
            case Token::BadgeTabInactiveTextLightBackgroundLegacy:
                return "badge-tab-inactive-text-light-background-legacy";
            case Token::BadgeTabActiveTextDarkBackgroundLegacy:
                return "badge-tab-active-text-dark-background-legacy";
            case Token::BadgeTabActiveTextLightBackgroundLegacy:
                return "badge-tab-active-text-light-background-legacy";
            case Token::ConnectDialogBackground:
                return "connect-dialog-background";
            case Token::AvatarPresenceIconActive:
                return "avatar-presence-icon-active";
            case Token::AvatarPresenceIconMeeting:
                return "avatar-presence-icon-meeting";
            case Token::AvatarPresenceIconSchedule:
                return "avatar-presence-icon-schedule";
            case Token::AvatarPresenceIconDnd:
                return "avatar-presence-icon-dnd";
            case Token::AvatarPresenceIconPresenting:
                return "avatar-presence-icon-presenting";
            case Token::AvatarPresenceIconQuietHours:
                return "avatar-presence-icon-quiet-hours";
            case Token::AvatarPresenceIconAway:
                return "avatar-presence-icon-away";
            case Token::AvatarPresenceIconOoo:
                return "avatar-presence-icon-ooo";
            case Token::AvatarPresenceIconBackground:
                return "avatar-presence-icon-background";
            case Token::AvatarColorAvatarText:
                return "avatar-color-avatar-text";
            case Token::AvatarColorAvatarBackgroundDefault:
                return "avatar-color-avatar-background-default";
            case Token::AvatarColorAvatarBackgroundGold:
                return "avatar-color-avatar-background-gold";
            case Token::AvatarColorAvatarBackgroundOrange:
                return "avatar-color-avatar-background-orange";
            case Token::AvatarColorAvatarBackgroundLime:
                return "avatar-color-avatar-background-lime";
            case Token::AvatarColorAvatarBackgroundMint:
                return "avatar-color-avatar-background-mint";
            case Token::AvatarColorAvatarBackgroundCyan:
                return "avatar-color-avatar-background-cyan";
            case Token::AvatarColorAvatarBackgroundCobalt:
                return "avatar-color-avatar-background-cobalt";
            case Token::AvatarColorAvatarBackgroundSlate:
                return "avatar-color-avatar-background-slate";
            case Token::AvatarColorAvatarBackgroundViolet:
                return "avatar-color-avatar-background-violet";
            case Token::AvatarColorAvatarBackgroundPurple:
                return "avatar-color-avatar-background-purple";
            case Token::AvatarColorAvatarBackgroundPink:
                return "avatar-color-avatar-background-pink";
            case Token::AvatarChatBubbleIconNormal:
                return "avatar-chat-bubble-icon-normal";
            case Token::AvatarChatBubbleIconHover:
                return "avatar-chat-bubble-icon-hover";
            case Token::AvatarChatBubbleIconPressed:
                return "avatar-chat-bubble-icon-pressed";
            case Token::AvatarChatBubbleIconActive:
                return "avatar-chat-bubble-icon-active";
            case Token::AvatarChatBubbleIconDisabled:
                return "avatar-chat-bubble-icon-disabled";
            case Token::AvatarChatBubbleBorderNormal:
                return "avatar-chat-bubble-border-normal";
            case Token::BadgeBackground:
                return "badge-background";
            case Token::BadgeText:
                return "badge-text";
            case Token::BadgeNotificationIndicator:
                return "badge-notification-indicator";
            case Token::BannerAnnouncementText:
                return "banner-announcement-text";
            case Token::BannerAnnouncementBackground:
                return "banner-announcement-background";
            case Token::BannerSuccessText:
                return "banner-success-text";
            case Token::BannerSuccessBackground:
                return "banner-success-background";
            case Token::BannerErrorText:
                return "banner-error-text";
            case Token::BannerErrorBackground:
                return "banner-error-background";
            case Token::BannerIssueText:
                return "banner-issue-text";
            case Token::BannerTransientText:
                return "banner-transient-text";
            case Token::BannerTransientBackground:
                return "banner-transient-background";
            case Token::ButtonPrimaryBackground:
                return "button-primary-background";
            case Token::ButtonPrimaryText:
                return "button-primary-text";
            case Token::ButtonPrimaryBorder:
                return "button-primary-border";
            case Token::ButtonCancelGhostBackground:
                return "button-cancel-ghost-background";
            case Token::ButtonCancelGhostText:
                return "button-cancel-ghost-text";
            case Token::ButtonCancelFillBackground:
                return "button-cancel-fill-background";
            case Token::ButtonCancelFillText:
                return "button-cancel-fill-text";
            case Token::ButtonCancelFillBorder:
                return "button-cancel-fill-border";
            case Token::ButtonCancelOutlineBackground:
                return "button-cancel-outline-background";
            case Token::ButtonCancelOutlineText:
                return "button-cancel-outline-text";
            case Token::ButtonCancelOutlineBorder:
                return "button-cancel-outline-border";
            case Token::ButtonAccentGhostBackground:
                return "button-accent-ghost-background";
            case Token::ButtonAccentGhostText:
                return "button-accent-ghost-text";
            case Token::ButtonAccentFillBackground:
                return "button-accent-fill-background";
            case Token::ButtonAccentFillText:
                return "button-accent-fill-text";
            case Token::ButtonAccentFillBorder:
                return "button-accent-fill-border";
            case Token::ButtonMessageGhostBackground:
                return "button-message-ghost-background";
            case Token::ButtonMessageGhostText:
                return "button-message-ghost-text";
            case Token::ButtonMessageFillBackground:
                return "button-message-fill-background";
            case Token::ButtonMessageFillText:
                return "button-message-fill-text";
            case Token::ButtonMessageFillBorder:
                return "button-message-fill-border";
            case Token::ButtonJoinFillBackground:
                return "button-join-fill-background";
            case Token::ButtonJoinFillText:
                return "button-join-fill-text";
            case Token::ButtonJoinFillBorder:
                return "button-join-fill-border";
            case Token::ButtonJoinOutlineBackground:
                return "button-join-outline-background";
            case Token::ButtonJoinOutlineText:
                return "button-join-outline-text";
            case Token::ButtonJoinOutlineBorder:
                return "button-join-outline-border";
            case Token::ButtonCounterBackground:
                return "button-counter-background";
            case Token::ButtonCounterText:
                return "button-counter-text";
            case Token::ButtonCounterBorder:
                return "button-counter-border";
            case Token::ButtonDialpadBackground:
                return "button-dialpad-background";
            case Token::ButtonDialpadTextNumber:
                return "button-dialpad-text-number";
            case Token::ButtonDialpadTextCharacters:
                return "button-dialpad-text-characters";
            case Token::ButtonDialpadBorder:
                return "button-dialpad-border";
            case Token::ButtonDialpadSpecialBackground:
                return "button-dialpad-special-background";
            case Token::ButtonDialpadSpecialTextNumber:
                return "button-dialpad-special-text-number";
            case Token::ButtonDialpadSpecialTextCharacters:
                return "button-dialpad-special-text-characters";
            case Token::ButtonHyperlinkBackground:
                return "button-hyperlink-background";
            case Token::ButtonHyperlinkText:
                return "button-hyperlink-text";
            case Token::ButtonHyperlinkBorder:
                return "button-hyperlink-border";
            case Token::ButtonLayoutBackground:
                return "button-layout-background";
            case Token::ButtonLayoutText:
                return "button-layout-text";
            case Token::ButtonLayoutBorder:
                return "button-layout-border";
            case Token::ButtonOverlayBackground:
                return "button-overlay-background";
            case Token::ButtonOverlayText:
                return "button-overlay-text";
            case Token::ButtonOverlayBorder:
                return "button-overlay-border";
            case Token::ButtonGroupSeparatorBackground:
                return "button-group-separator-background";
            case Token::ButtonGhostText:
                return "button-ghost-text";
            case Token::CoachmarkteachingBackground:
                return "coachmarkteaching-background";
            case Token::CoachmarkteachingButtonPrimaryBackground:
                return "coachmarkteaching-button-primary-background";
            case Token::CoachmarkteachingButtonPrimaryText:
                return "coachmarkteaching-button-primary-text";
            case Token::CoachmarkteachingButtonPrimaryBorder:
                return "coachmarkteaching-button-primary-border";
            case Token::CoachmarkteachingButtonSecondaryBackground:
                return "coachmarkteaching-button-secondary-background";
            case Token::CoachmarkteachingButtonSecondaryText:
                return "coachmarkteaching-button-secondary-text";
            case Token::CoachmarkteachingButtonSecondaryBorder:
                return "coachmarkteaching-button-secondary-border";
            case Token::CoachmarkteachingButtonHyperlinkBackground:
                return "coachmarkteaching-button-hyperlink-background";
            case Token::CoachmarkteachingButtonHyperlinkText:
                return "coachmarkteaching-button-hyperlink-text";
            case Token::CoachmarkteachingButtonHyperlinkBorder:
                return "coachmarkteaching-button-hyperlink-border";
            case Token::CodeinputBackground:
                return "codeinput-background";
            case Token::CodeinputText:
                return "codeinput-text";
            case Token::CodeinputBorder:
                return "codeinput-border";
            case Token::CodeinputErrorBackground:
                return "codeinput-error-background";
            case Token::CodeinputErrorText:
                return "codeinput-error-text";
            case Token::CodeinputErrorBorder:
                return "codeinput-error-border";
            case Token::LabelPrimaryText:
                return "label-primary-text";
            case Token::LabelSecondaryText:
                return "label-secondary-text";
            case Token::LabelSuccessText:
                return "label-success-text";
            case Token::LabelErrorText:
                return "label-error-text";
            case Token::ListitemIcon:
                return "listitem-icon";
            case Token::ListitemDotdivider:
                return "listitem-dotdivider";
            case Token::PopoverPrimaryBackground:
                return "popover-primary-background";
            case Token::ReactionBadgePrimaryBackground:
                return "reaction-badge-primary-background";
            case Token::ReactionBadgePrimaryUnreactedText:
                return "reaction-badge-primary-unreacted-text";
            case Token::ReactionBadgePrimaryReactedText:
                return "reaction-badge-primary-reacted-text";
            case Token::ReactionBadgePrimaryBorder:
                return "reaction-badge-primary-border";
            case Token::SearchPlaceholderText:
                return "search-placeholder-text";
            case Token::SearchText:
                return "search-text";
            case Token::SearchBorder:
                return "search-border";
            case Token::SearchBackground:
                return "search-background";
            case Token::SeparatorPrimary:
                return "separator-primary";
            case Token::SeparatorClear:
                return "separator-clear";
            case Token::SeparatorAnnounce0:
                return "separator-announce-0";
            case Token::SeparatorAnnounce1:
                return "separator-announce-1";
            case Token::SeparatorWarn0:
                return "separator-warn-0";
            case Token::SeparatorWarn1:
                return "separator-warn-1";
            case Token::SeparatorError0:
                return "separator-error-0";
            case Token::SeparatorError1:
                return "separator-error-1";
            case Token::SpinnerLoadingCursor:
                return "spinner-loading-cursor";
            case Token::SpinnerLoadingTrack:
                return "spinner-loading-track";
            case Token::SpinnerProgressCursor:
                return "spinner-progress-cursor";
            case Token::SpinnerProgressTrack:
                return "spinner-progress-track";
            case Token::TabRefresh:
                return "tab-refresh";
            case Token::TabOrange:
                return "tab-orange";
            case Token::TabGold:
                return "tab-gold";
            case Token::TabLime:
                return "tab-lime";
            case Token::TabMint:
                return "tab-mint";
            case Token::TabCyan:
                return "tab-cyan";
            case Token::TabPink:
                return "tab-pink";
            case Token::TabSlate:
                return "tab-slate";
            case Token::TabViolet:
                return "tab-violet";
            case Token::TabCobalt:
                return "tab-cobalt";
            case Token::TabPurple:
                return "tab-purple";
            case Token::TeamMarkerBackgroundDefault:
                return "teamMarker-background-default";
            case Token::TeamMarkerBackgroundGold:
                return "teamMarker-background-gold";
            case Token::TeamMarkerBackgroundOrange:
                return "teamMarker-background-orange";
            case Token::TeamMarkerBackgroundLime:
                return "teamMarker-background-lime";
            case Token::TeamMarkerBackgroundMint:
                return "teamMarker-background-mint";
            case Token::TeamMarkerBackgroundCyan:
                return "teamMarker-background-cyan";
            case Token::TeamMarkerBackgroundCobalt:
                return "teamMarker-background-cobalt";
            case Token::TeamMarkerBackgroundSlate:
                return "teamMarker-background-slate";
            case Token::TeamMarkerBackgroundViolet:
                return "teamMarker-background-violet";
            case Token::TeamMarkerBackgroundPurple:
                return "teamMarker-background-purple";
            case Token::TeamMarkerBackgroundPink:
                return "teamMarker-background-pink";
            case Token::TeamMarkerBackgroundArchived:
                return "teamMarker-background-archived";
            case Token::TextinputPlaceholderText:
                return "textinput-placeholder-text";
            case Token::TextinputBackground:
                return "textinput-background";
            case Token::TextinputText:
                return "textinput-text";
            case Token::TextinputBorder:
                return "textinput-border";
            case Token::TextinputErrorBackground:
                return "textinput-error-background";
            case Token::TextinputErrorText:
                return "textinput-error-text";
            case Token::TextinputErrorBorder:
                return "textinput-error-border";
            case Token::AlertbadgeDefaultBackground:
                return "alertbadge-default-background";
            case Token::AlertbadgeDefaultText:
                return "alertbadge-default-text";
            case Token::AlertbadgeWarningBackground:
                return "alertbadge-warning-background";
            case Token::AlertbadgeWarningText:
                return "alertbadge-warning-text";
            case Token::AlertbadgeImportantBackground:
                return "alertbadge-important-background";
            case Token::AlertbadgeImportantText:
                return "alertbadge-important-text";
            case Token::AlertbadgeGeneralBackground:
                return "alertbadge-general-background";
            case Token::AlertbadgeGeneralText:
                return "alertbadge-general-text";
            case Token::CanceliconDefaultIcon:
                return "cancelicon-default-icon";
            case Token::CardActiveBackground:
                return "card-active-background";
            case Token::CardInactiveBackground:
                return "card-inactive-background";
            case Token::CardCancelledBackground:
                return "card-cancelled-background";
            case Token::CardDisabledBorder:
                return "card-disabled-border";
            case Token::CheckboxCheckedText:
                return "checkbox-checked-text";
            case Token::CheckboxCheckedIcon:
                return "checkbox-checked-icon";
            case Token::CheckboxUncheckedBackground:
                return "checkbox-unchecked-background";
            case Token::CheckboxUncheckedText:
                return "checkbox-unchecked-text";
            case Token::CheckboxUncheckedBorder:
                return "checkbox-unchecked-border";
            case Token::ComboboxPlaceholderText:
                return "combobox-placeholder-text";
            case Token::ComboboxBackground:
                return "combobox-background";
            case Token::ComboboxText:
                return "combobox-text";
            case Token::ComboboxBorder:
                return "combobox-border";
            case Token::GlobalHeaderTextfieldBackground:
                return "globalHeader-textfield-background";
            case Token::GlobalHeaderTextfieldText:
                return "globalHeader-textfield-text";
            case Token::GlobalHeaderTextfieldBorder:
                return "globalHeader-textfield-border";
            case Token::GlobalHeaderTextfieldBorderModifier:
                return "globalHeader-textfield-borderModifier";
            case Token::GlobalHeaderTextfieldPlaceholderTextText:
                return "globalHeader-textfieldPlaceholderText-text";
            case Token::GlobalHeaderButtonDeviceBackground:
                return "globalHeader-buttonDevice-background";
            case Token::GlobalHeaderButtonDeviceTextInactive:
                return "globalHeader-buttonDevice-text-inactive";
            case Token::GlobalHeaderButtonDeviceTextActive:
                return "globalHeader-buttonDevice-text-active";
            case Token::GlobalHeaderButtonIconBackground:
                return "globalHeader-buttonIcon-background";
            case Token::GlobalHeaderButtonIconIcon:
                return "globalHeader-buttonIcon-icon";
            case Token::GlobalHeaderButtonStatusBackground:
                return "globalHeader-buttonStatus-background";
            case Token::GlobalHeaderButtonStatusText:
                return "globalHeader-buttonStatus-text";
            case Token::GlobalHeaderContainerBackground:
                return "globalHeader-container-background";
            case Token::GlobalHeaderModifierChipBackground:
                return "globalHeader-modifierChip-background";
            case Token::GlobalHeaderModifierChipText:
                return "globalHeader-modifierChip-text";
            case Token::GlobalHeaderTextfieldWinBackground:
                return "globalHeader-textfieldWin-background";
            case Token::GlobalHeaderMaxMinButtonBackground:
                return "globalHeader-maxMinButton-background";
            case Token::GlobalHeaderMaxMinButtonText:
                return "globalHeader-maxMinButton-text";
            case Token::GlobalHeaderCloseButtonBackground:
                return "globalHeader-closeButton-background";
            case Token::GlobalHeaderCloseButtonText:
                return "globalHeader-closeButton-text";
            case Token::GlobalHeaderSearchCancelButtonBackground:
                return "globalHeader-searchCancelButton-background";
            case Token::GlobalHeaderSearchCancelButtonBorder:
                return "globalHeader-searchCancelButton-border";
            case Token::GlobalHeaderSearchCancelButtonText:
                return "globalHeader-searchCancelButton-text";
            case Token::ThemeGradientPrimary0Background:
                return "theme-gradient-primary-0-background";
            case Token::ThemeGradientPrimary1Background:
                return "theme-gradient-primary-1-background";
            case Token::InteractiveiconContainerBackground:
                return "interactiveicon-container-background";
            case Token::InteractiveiconPrimaryFilledIconInactive:
                return "interactiveicon-primary-filled-icon-inactive";
            case Token::InteractiveiconPrimaryFilledIconActive:
                return "interactiveicon-primary-filled-icon-active";
            case Token::InteractiveiconPrimaryOutlineIconInactive:
                return "interactiveicon-primary-outline-icon-inactive";
            case Token::InteractiveiconPrimaryOutlineIconActive:
                return "interactiveicon-primary-outline-icon-active";
            case Token::InteractiveiconSecondaryFilledIconInactive:
                return "interactiveicon-secondary-filled-icon-inactive";
            case Token::InteractiveiconSecondaryFilledIconActive:
                return "interactiveicon-secondary-filled-icon-active";
            case Token::InteractiveiconTertiaryFilledIconInactive:
                return "interactiveicon-tertiary-filled-icon-inactive";
            case Token::InteractiveiconTertiaryFilledFavoriteIconActive:
                return "interactiveicon-tertiary-filled-favorite-icon-active";
            case Token::InteractiveiconQuaternaryFilledIconActive:
                return "interactiveicon-quaternary-filled-icon-active";
            case Token::MeetingmarkerDefaultBackground:
                return "meetingmarker-default-background";
            case Token::MeetingmarkerActiveBackground:
                return "meetingmarker-active-background";
            case Token::MeetingmarkerInactiveBackground:
                return "meetingmarker-inactive-background";
            case Token::MenulistbackgroundPrimaryBackground:
                return "menulistbackground-primary-background";
            case Token::MenulistbackgroundPrimaryBorder:
                return "menulistbackground-primary-border";
            case Token::MenulistbackgroundSecondaryBackground:
                return "menulistbackground-secondary-background";
            case Token::MenulistbackgroundSecondaryBorder:
                return "menulistbackground-secondary-border";
            case Token::MenulistbackgroundTertiaryBackground:
                return "menulistbackground-tertiary-background";
            case Token::MenulistbackgroundTertiaryBorder:
                return "menulistbackground-tertiary-border";
            case Token::ModalTertiaryBackground:
                return "modal-tertiary-background";
            case Token::ModalTertiaryBorder:
                return "modal-tertiary-border";
            case Token::MultilineChipOneText:
                return "multilineChip-one-text";
            case Token::MultilineChipOneOutline:
                return "multilineChip-one-outline";
            case Token::MultilineChipTwoText:
                return "multilineChip-two-text";
            case Token::MultilineChipTwoOutline:
                return "multilineChip-two-outline";
            case Token::MultilineChipThreeText:
                return "multilineChip-three-text";
            case Token::MultilineChipThreeOutline:
                return "multilineChip-three-outline";
            case Token::MultilineChipFourText:
                return "multilineChip-four-text";
            case Token::MultilineChipFourOutline:
                return "multilineChip-four-outline";
            case Token::MultilineChipFiveText:
                return "multilineChip-five-text";
            case Token::MultilineChipFiveOutline:
                return "multilineChip-five-outline";
            case Token::MultilineChipSixText:
                return "multilineChip-six-text";
            case Token::MultilineChipSixOutline:
                return "multilineChip-six-outline";
            case Token::MultilineChipSevenText:
                return "multilineChip-seven-text";
            case Token::MultilineChipSevenOutline:
                return "multilineChip-seven-outline";
            case Token::MultilineChipEightText:
                return "multilineChip-eight-text";
            case Token::MultilineChipEightOutline:
                return "multilineChip-eight-outline";
            case Token::NavigationtabBackground:
                return "navigationtab-background";
            case Token::NavigationtabText:
                return "navigationtab-text";
            case Token::OverlayFadePrimaryBackground:
                return "overlayFade-primary-background";
            case Token::OverlayFadeSecondaryBackground:
                return "overlayFade-secondary-background";
            case Token::PanelPrimaryBackground:
                return "panel-primary-background";
            case Token::PanelSecondaryBackground:
                return "panel-secondary-background";
            case Token::PanelTertiaryBackground:
                return "panel-tertiary-background";
            case Token::ScrollbarTrackBackground:
                return "scrollbar-track-background";
            case Token::ScrollbarThumbBackground:
                return "scrollbar-thumb-background";
            case Token::ScrollbarArrowButtonText:
                return "scrollbar-arrow-button-text";
            case Token::ScrollbarArrowButtonBackground:
                return "scrollbar-arrow-button-background";
            case Token::SharewindowControlButtonPrimaryBorder:
                return "sharewindow-control-button-primary-border";
            case Token::TagStaticBackground:
                return "tag-static-background";
            case Token::TagStaticText:
                return "tag-static-text";
            case Token::TagStaticBorder:
                return "tag-static-border";
            case Token::TagOverlayBackground:
                return "tag-overlay-background";
            case Token::TagOverlayText:
                return "tag-overlay-text";
            case Token::TagOverlayBorder:
                return "tag-overlay-border";
            case Token::TagPrimaryBackground:
                return "tag-primary-background";
            case Token::TagPrimaryText:
                return "tag-primary-text";
            case Token::TagPrimaryBorder:
                return "tag-primary-border";
            case Token::TagCobaltBackground:
                return "tag-cobalt-background";
            case Token::TagCobaltText:
                return "tag-cobalt-text";
            case Token::TagCobaltBorder:
                return "tag-cobalt-border";
            case Token::TagLimeBackground:
                return "tag-lime-background";
            case Token::TagLimeText:
                return "tag-lime-text";
            case Token::TagLimeBorder:
                return "tag-lime-border";
            case Token::TagMintBackground:
                return "tag-mint-background";
            case Token::TagMintText:
                return "tag-mint-text";
            case Token::TagMintBorder:
                return "tag-mint-border";
            case Token::TagSlateBackground:
                return "tag-slate-background";
            case Token::TagSlateText:
                return "tag-slate-text";
            case Token::TagSlateBorder:
                return "tag-slate-border";
            case Token::TagVioletBackground:
                return "tag-violet-background";
            case Token::TagVioletText:
                return "tag-violet-text";
            case Token::TagVioletBorder:
                return "tag-violet-border";
            case Token::TagPurpleBackground:
                return "tag-purple-background";
            case Token::TagPurpleText:
                return "tag-purple-text";
            case Token::TagPurpleBorder:
                return "tag-purple-border";
            case Token::TagOrangeBackground:
                return "tag-orange-background";
            case Token::TagOrangeText:
                return "tag-orange-text";
            case Token::TagOrangeBorder:
                return "tag-orange-border";
            case Token::TagGoldBackground:
                return "tag-gold-background";
            case Token::TagGoldText:
                return "tag-gold-text";
            case Token::TagGoldBorder:
                return "tag-gold-border";
            default:
              return "Unknown";
        }
    }

    static inline Token tokenFromString(std::string s)
    {
        if ("overlay-primary" == s)
        {
            return Token::OverlayPrimary;
        }
        if ("overlay-secondary" == s)
        {
            return Token::OverlaySecondary;
        }
        if ("avatar-overlay" == s)
        {
            return Token::AvatarOverlay;
        }
        if ("listItem-primary" == s)
        {
            return Token::ListItemPrimary;
        }
        if ("listItem-secondary" == s)
        {
            return Token::ListItemSecondary;
        }
        if ("listItem-tertiary" == s)
        {
            return Token::ListItemTertiary;
        }
        if ("listItem-quaternary" == s)
        {
            return Token::ListItemQuaternary;
        }
        if ("message-listItem" == s)
        {
            return Token::MessageListItem;
        }
        if ("alertBackground-default" == s)
        {
            return Token::AlertBackgroundDefault;
        }
        if ("alertBackground-error" == s)
        {
            return Token::AlertBackgroundError;
        }
        if ("alertBackground-success" == s)
        {
            return Token::AlertBackgroundSuccess;
        }
        if ("alertBackground-warning" == s)
        {
            return Token::AlertBackgroundWarning;
        }
        if ("alertText-default" == s)
        {
            return Token::AlertTextDefault;
        }
        if ("alertText-error" == s)
        {
            return Token::AlertTextError;
        }
        if ("alertText-success" == s)
        {
            return Token::AlertTextSuccess;
        }
        if ("alertText-warning" == s)
        {
            return Token::AlertTextWarning;
        }
        if ("background-primary" == s)
        {
            return Token::BackgroundPrimary;
        }
        if ("wx-addParticipantsButtonInCall-icon" == s)
        {
            return Token::WxAddParticipantsButtonInCallIcon;
        }
        if ("background-secondary" == s)
        {
            return Token::BackgroundSecondary;
        }
        if ("background-tertiary" == s)
        {
            return Token::BackgroundTertiary;
        }
        if ("background-quaternary" == s)
        {
            return Token::BackgroundQuaternary;
        }
        if ("background-contrary" == s)
        {
            return Token::BackgroundContrary;
        }
        if ("popover-background" == s)
        {
            return Token::PopoverBackground;
        }
        if ("popover-background-coachmark" == s)
        {
            return Token::PopoverBackgroundCoachmark;
        }
        if ("popover-coachmark-text" == s)
        {
            return Token::PopoverCoachmarkText;
        }
        if ("popover-coachmark-button" == s)
        {
            return Token::PopoverCoachmarkButton;
        }
        if ("button-primary" == s)
        {
            return Token::ButtonPrimary;
        }
        if ("button-primary-outline" == s)
        {
            return Token::ButtonPrimaryOutline;
        }
        if ("buttonOutline-primary-background" == s)
        {
            return Token::ButtonOutlinePrimaryBackground;
        }
        if ("buttonOutline-primary" == s)
        {
            return Token::ButtonOutlinePrimary;
        }
        if ("buttonOutlineText-primary" == s)
        {
            return Token::ButtonOutlineTextPrimary;
        }
        if ("button-secondary" == s)
        {
            return Token::ButtonSecondary;
        }
        if ("button-secondary-outline" == s)
        {
            return Token::ButtonSecondaryOutline;
        }
        if ("buttonOutline-secondary-background" == s)
        {
            return Token::ButtonOutlineSecondaryBackground;
        }
        if ("buttonOutline-secondary" == s)
        {
            return Token::ButtonOutlineSecondary;
        }
        if ("buttonOutlineText-secondary" == s)
        {
            return Token::ButtonOutlineTextSecondary;
        }
        if ("button-tertiary" == s)
        {
            return Token::ButtonTertiary;
        }
        if ("button-cancel" == s)
        {
            return Token::ButtonCancel;
        }
        if ("button-cancel-outline" == s)
        {
            return Token::ButtonCancelOutline;
        }
        if ("buttonText-cancel" == s)
        {
            return Token::ButtonTextCancel;
        }
        if ("buttonOutline-cancel" == s)
        {
            return Token::ButtonOutlineCancel;
        }
        if ("buttonOutlineBorder-cancel" == s)
        {
            return Token::ButtonOutlineBorderCancel;
        }
        if ("buttonOutlineText-cancel" == s)
        {
            return Token::ButtonOutlineTextCancel;
        }
        if ("button-quaternary" == s)
        {
            return Token::ButtonQuaternary;
        }
        if ("button-ghost" == s)
        {
            return Token::ButtonGhost;
        }
        if ("button-ghost-outline" == s)
        {
            return Token::ButtonGhostOutline;
        }
        if ("button-ghost-transparent" == s)
        {
            return Token::ButtonGhostTransparent;
        }
        if ("buttonCall-primary" == s)
        {
            return Token::ButtonCallPrimary;
        }
        if ("buttonCall-secondary" == s)
        {
            return Token::ButtonCallSecondary;
        }
        if ("buttonJoin-primary" == s)
        {
            return Token::ButtonJoinPrimary;
        }
        if ("buttonJoin-primary-outline" == s)
        {
            return Token::ButtonJoinPrimaryOutline;
        }
        if ("buttonJoinBorder-primary" == s)
        {
            return Token::ButtonJoinBorderPrimary;
        }
        if ("focus-border" == s)
        {
            return Token::FocusBorder;
        }
        if ("buttonText-primary" == s)
        {
            return Token::ButtonTextPrimary;
        }
        if ("buttonText-secondary" == s)
        {
            return Token::ButtonTextSecondary;
        }
        if ("buttonText-tertiary" == s)
        {
            return Token::ButtonTextTertiary;
        }
        if ("buttonText-quaternary" == s)
        {
            return Token::ButtonTextQuaternary;
        }
        if ("buttonText-ghost" == s)
        {
            return Token::ButtonTextGhost;
        }
        if ("button-outline-join" == s)
        {
            return Token::ButtonOutlineJoin;
        }
        if ("inputBackground" == s)
        {
            return Token::InputBackground;
        }
        if ("signIn-inputBackground" == s)
        {
            return Token::SignInInputBackground;
        }
        if ("signIn-inputOutline" == s)
        {
            return Token::SignInInputOutline;
        }
        if ("inputBackground-error" == s)
        {
            return Token::InputBackgroundError;
        }
        if ("inputOutline-error" == s)
        {
            return Token::InputOutlineError;
        }
        if ("inputBackground-warning" == s)
        {
            return Token::InputBackgroundWarning;
        }
        if ("inputOutline-warning" == s)
        {
            return Token::InputOutlineWarning;
        }
        if ("inputText-warning" == s)
        {
            return Token::InputTextWarning;
        }
        if ("background-gradient-start" == s)
        {
            return Token::BackgroundGradientStart;
        }
        if ("background-gradient-end" == s)
        {
            return Token::BackgroundGradientEnd;
        }
        if ("content-gradient-start" == s)
        {
            return Token::ContentGradientStart;
        }
        if ("content-gradient-end" == s)
        {
            return Token::ContentGradientEnd;
        }
        if ("inputOutline" == s)
        {
            return Token::InputOutline;
        }
        if ("inputText-primary" == s)
        {
            return Token::InputTextPrimary;
        }
        if ("inputText-secondary" == s)
        {
            return Token::InputTextSecondary;
        }
        if ("wx-inputText-secondary-inverted" == s)
        {
            return Token::WxInputTextSecondaryInverted;
        }
        if ("inputText-error" == s)
        {
            return Token::InputTextError;
        }
        if ("input-focusRing" == s)
        {
            return Token::InputFocusRing;
        }
        if ("modal-decorative-button-primary" == s)
        {
            return Token::ModalDecorativeButtonPrimary;
        }
        if ("modal-decorative-button-text" == s)
        {
            return Token::ModalDecorativeButtonText;
        }
        if ("modal-decorative-button-secondary" == s)
        {
            return Token::ModalDecorativeButtonSecondary;
        }
        if ("modal-decorative-button-text-primary" == s)
        {
            return Token::ModalDecorativeButtonTextPrimary;
        }
        if ("modal-decorative-button-text-secondary" == s)
        {
            return Token::ModalDecorativeButtonTextSecondary;
        }
        if ("modal-decorativeBackground-primary-slate" == s)
        {
            return Token::ModalDecorativeBackgroundPrimarySlate;
        }
        if ("modal-decorativeBackground-primary-gold" == s)
        {
            return Token::ModalDecorativeBackgroundPrimaryGold;
        }
        if ("modal-decorativeBackground-primary-violet" == s)
        {
            return Token::ModalDecorativeBackgroundPrimaryViolet;
        }
        if ("modal-decorativeBackground-primary-mint" == s)
        {
            return Token::ModalDecorativeBackgroundPrimaryMint;
        }
        if ("modal-decorativeBackground-primary-green" == s)
        {
            return Token::ModalDecorativeBackgroundPrimaryGreen;
        }
        if ("modal-decorativeBackground-primary-cobalt" == s)
        {
            return Token::ModalDecorativeBackgroundPrimaryCobalt;
        }
        if ("modal-decorativeBackground-primary-blue" == s)
        {
            return Token::ModalDecorativeBackgroundPrimaryBlue;
        }
        if ("modal-decorativeBackground-secondary-slate" == s)
        {
            return Token::ModalDecorativeBackgroundSecondarySlate;
        }
        if ("modal-decorativeBackground-secondary-yellow" == s)
        {
            return Token::ModalDecorativeBackgroundSecondaryYellow;
        }
        if ("modal-decorativeBackground-secondary-violet" == s)
        {
            return Token::ModalDecorativeBackgroundSecondaryViolet;
        }
        if ("modal-decorativeTitle-slate" == s)
        {
            return Token::ModalDecorativeTitleSlate;
        }
        if ("modal-decorativeTitle-gold" == s)
        {
            return Token::ModalDecorativeTitleGold;
        }
        if ("modal-decorativeTitle-violet" == s)
        {
            return Token::ModalDecorativeTitleViolet;
        }
        if ("modal-decorativeTitle-mint" == s)
        {
            return Token::ModalDecorativeTitleMint;
        }
        if ("modal-decorativeTitle-green" == s)
        {
            return Token::ModalDecorativeTitleGreen;
        }
        if ("modal-decorativeTitle-cobalt" == s)
        {
            return Token::ModalDecorativeTitleCobalt;
        }
        if ("modal-text-primary" == s)
        {
            return Token::ModalTextPrimary;
        }
        if ("modal-text-secondary" == s)
        {
            return Token::ModalTextSecondary;
        }
        if ("text-highlight" == s)
        {
            return Token::TextHighlight;
        }
        if ("text-hyperlink" == s)
        {
            return Token::TextHyperlink;
        }
        if ("text-primary" == s)
        {
            return Token::TextPrimary;
        }
        if ("text-secondary" == s)
        {
            return Token::TextSecondary;
        }
        if ("legacy-separator-primary" == s)
        {
            return Token::LegacySeparatorPrimary;
        }
        if ("legacy-separator-secondary" == s)
        {
            return Token::LegacySeparatorSecondary;
        }
        if ("footer-background" == s)
        {
            return Token::FooterBackground;
        }
        if ("edit-space-settings-button" == s)
        {
            return Token::EditSpaceSettingsButton;
        }
        if ("edit-space-settings-buttonText" == s)
        {
            return Token::EditSpaceSettingsButtonText;
        }
        if ("edit-space-settings-buttonBorder" == s)
        {
            return Token::EditSpaceSettingsButtonBorder;
        }
        if ("whiteboard-stickyNote-yellow" == s)
        {
            return Token::WhiteboardStickyNoteYellow;
        }
        if ("scrollbar-backgroundGutter" == s)
        {
            return Token::ScrollbarBackgroundGutter;
        }
        if ("wx-keyboardaction-background" == s)
        {
            return Token::WxKeyboardactionBackground;
        }
        if ("wx-keyboardaction-border" == s)
        {
            return Token::WxKeyboardactionBorder;
        }
        if ("wx-keyboardaction-label-text" == s)
        {
            return Token::WxKeyboardactionLabelText;
        }
        if ("wx-callWindowContainer-background" == s)
        {
            return Token::WxCallWindowContainerBackground;
        }
        if ("wx-callWindowContent-background" == s)
        {
            return Token::WxCallWindowContentBackground;
        }
        if ("wx-applicationHeaderUserDeviceButton-text" == s)
        {
            return Token::WxApplicationHeaderUserDeviceButtonText;
        }
        if ("wx-audioSelectionItem-background" == s)
        {
            return Token::WxAudioSelectionItemBackground;
        }
        if ("wx-audioSelectionItemInternal-text" == s)
        {
            return Token::WxAudioSelectionItemInternalText;
        }
        if ("wx-audioSelectionItemVariant-text" == s)
        {
            return Token::WxAudioSelectionItemVariantText;
        }
        if ("wx-audioVideoDeviceWarnIcon-border" == s)
        {
            return Token::WxAudioVideoDeviceWarnIconBorder;
        }
        if ("wx-auxDeviceButton-border" == s)
        {
            return Token::WxAuxDeviceButtonBorder;
        }
        if ("wx-auxDeviceItem-background" == s)
        {
            return Token::WxAuxDeviceItemBackground;
        }
        if ("wx-auxDeviceItem-border" == s)
        {
            return Token::WxAuxDeviceItemBorder;
        }
        if ("wx-auxDeviceItem-text" == s)
        {
            return Token::WxAuxDeviceItemText;
        }
        if ("wx-auxDeviceItemCheckbox-background" == s)
        {
            return Token::WxAuxDeviceItemCheckboxBackground;
        }
        if ("wx-auxDeviceItemCheckbox-border" == s)
        {
            return Token::WxAuxDeviceItemCheckboxBorder;
        }
        if ("wx-auxDeviceSelectorButton-text" == s)
        {
            return Token::WxAuxDeviceSelectorButtonText;
        }
        if ("wx-auxDeviceUnknownItem-text" == s)
        {
            return Token::WxAuxDeviceUnknownItemText;
        }
        if ("wx-avatarMainAreaInnerRing-background" == s)
        {
            return Token::WxAvatarMainAreaInnerRingBackground;
        }
        if ("wx-buttonCall-background" == s)
        {
            return Token::WxButtonCallBackground;
        }
        if ("wx-callActivityDeviceIcon" == s)
        {
            return Token::WxCallActivityDeviceIcon;
        }
        if ("wx-callingInterstitialPage-background" == s)
        {
            return Token::WxCallingInterstitialPageBackground;
        }
        if ("wx-callMeCheckbox-background" == s)
        {
            return Token::WxCallMeCheckboxBackground;
        }
        if ("wx-callSettingButtonStateIcon" == s)
        {
            return Token::WxCallSettingButtonStateIcon;
        }
        if ("wx-contactCardViewButton-background" == s)
        {
            return Token::WxContactCardViewButtonBackground;
        }
        if ("wx-contactCardViewButtonIcon" == s)
        {
            return Token::WxContactCardViewButtonIcon;
        }
        if ("wx-contactCardViewPhoneNumber" == s)
        {
            return Token::WxContactCardViewPhoneNumber;
        }
        if ("wx-contentTabViewButton-text" == s)
        {
            return Token::WxContentTabViewButtonText;
        }
        if ("wx-contentTabViewButtonChecked-text" == s)
        {
            return Token::WxContentTabViewButtonCheckedText;
        }
        if ("wx-contentTabViewDropDownButton" == s)
        {
            return Token::WxContentTabViewDropDownButton;
        }
        if ("wx-contentTabViewFilesButton" == s)
        {
            return Token::WxContentTabViewFilesButton;
        }
        if ("wx-contentTabViewFilesButtonChecked" == s)
        {
            return Token::WxContentTabViewFilesButtonChecked;
        }
        if ("wx-contentTabViewLinksButton" == s)
        {
            return Token::WxContentTabViewLinksButton;
        }
        if ("wx-contentTabViewLinksButtonChecked" == s)
        {
            return Token::WxContentTabViewLinksButtonChecked;
        }
        if ("wx-contentTabViewRecordingsButton" == s)
        {
            return Token::WxContentTabViewRecordingsButton;
        }
        if ("wx-contentTabViewRecordingsButtonChecked" == s)
        {
            return Token::WxContentTabViewRecordingsButtonChecked;
        }
        if ("wx-contentTabViewWhiteboardButton" == s)
        {
            return Token::WxContentTabViewWhiteboardButton;
        }
        if ("wx-contentTabViewWhiteboardButtonChecked" == s)
        {
            return Token::WxContentTabViewWhiteboardButtonChecked;
        }
        if ("wx-contextMenu-background" == s)
        {
            return Token::WxContextMenuBackground;
        }
        if ("wx-contextMenu-text" == s)
        {
            return Token::WxContextMenuText;
        }
        if ("wx-popupDropShadow" == s)
        {
            return Token::WxPopupDropShadow;
        }
        if ("wx-default-border" == s)
        {
            return Token::WxDefaultBorder;
        }
        if ("wx-default-text" == s)
        {
            return Token::WxDefaultText;
        }
        if ("wx-default-invertedColor-text" == s)
        {
            return Token::WxDefaultInvertedColorText;
        }
        if ("wx-defaultTextWithPressed-text" == s)
        {
            return Token::WxDefaultTextWithPressedText;
        }
        if ("wx-fileBrickletBadge-background" == s)
        {
            return Token::WxFileBrickletBadgeBackground;
        }
        if ("wx-fileBrickletBadge-text" == s)
        {
            return Token::WxFileBrickletBadgeText;
        }
        if ("wx-fileBrickletCloseButton-background" == s)
        {
            return Token::WxFileBrickletCloseButtonBackground;
        }
        if ("wx-fileBrickletCloseButtonData-background" == s)
        {
            return Token::WxFileBrickletCloseButtonDataBackground;
        }
        if ("wx-fileBrickletStaging-background" == s)
        {
            return Token::WxFileBrickletStagingBackground;
        }
        if ("wx-balloon-background" == s)
        {
            return Token::WxBalloonBackground;
        }
        if ("wx-balloon-border" == s)
        {
            return Token::WxBalloonBorder;
        }
        if ("wx-balloon-text" == s)
        {
            return Token::WxBalloonText;
        }
        if ("wx-fileBrickletStagingImage-background" == s)
        {
            return Token::WxFileBrickletStagingImageBackground;
        }
        if ("wx-giphy-background" == s)
        {
            return Token::WxGiphyBackground;
        }
        if ("wx-giphyFocusBorder-background" == s)
        {
            return Token::WxGiphyFocusBorderBackground;
        }
        if ("wx-giphyIntegrationWidgetCancelSearchButton-background" == s)
        {
            return Token::WxGiphyIntegrationWidgetCancelSearchButtonBackground;
        }
        if ("wx-emojiPickerSearch-background" == s)
        {
            return Token::WxEmojiPickerSearchBackground;
        }
        if ("wx-emojiPickerSearch-border" == s)
        {
            return Token::WxEmojiPickerSearchBorder;
        }
        if ("wx-emojiPickerEmoji-background" == s)
        {
            return Token::WxEmojiPickerEmojiBackground;
        }
        if ("wx-emojiPickerSkin-background" == s)
        {
            return Token::WxEmojiPickerSkinBackground;
        }
        if ("wx-emojiPickerCategory-icon" == s)
        {
            return Token::WxEmojiPickerCategoryIcon;
        }
        if ("wx-emojiPickerCategory-border-top" == s)
        {
            return Token::WxEmojiPickerCategoryBorderTop;
        }
        if ("wx-headingColor-background" == s)
        {
            return Token::WxHeadingColorBackground;
        }
        if ("wx-headingColor-text" == s)
        {
            return Token::WxHeadingColorText;
        }
        if ("wx-inputActionButton-background" == s)
        {
            return Token::WxInputActionButtonBackground;
        }
        if ("wx-inputBoxWidgetHasExternalParticipant-background" == s)
        {
            return Token::WxInputBoxWidgetHasExternalParticipantBackground;
        }
        if ("wx-inputBoxWidgetHasExternalParticipant-border" == s)
        {
            return Token::WxInputBoxWidgetHasExternalParticipantBorder;
        }
        if ("wx-classificationInputBox-background" == s)
        {
            return Token::WxClassificationInputBoxBackground;
        }
        if ("wx-errorMessage-background" == s)
        {
            return Token::WxErrorMessageBackground;
        }
        if ("wx-classificationInputBox-border" == s)
        {
            return Token::WxClassificationInputBoxBorder;
        }
        if ("wx-inputBoxWidgetWithoutExternalParticipant-border" == s)
        {
            return Token::WxInputBoxWidgetWithoutExternalParticipantBorder;
        }
        if ("wx-leaveSpaceButton" == s)
        {
            return Token::WxLeaveSpaceButton;
        }
        if ("wx-menuItemButton-background" == s)
        {
            return Token::WxMenuItemButtonBackground;
        }
        if ("wx-menuItemButton-text" == s)
        {
            return Token::WxMenuItemButtonText;
        }
        if ("wx-markButton-background" == s)
        {
            return Token::WxMarkButtonBackground;
        }
        if ("wx-messageHighlights-header-background" == s)
        {
            return Token::WxMessageHighlightsHeaderBackground;
        }
        if ("wx-messageHighlights-header-text" == s)
        {
            return Token::WxMessageHighlightsHeaderText;
        }
        if ("wx-message-highlights-border" == s)
        {
            return Token::WxMessageHighlightsBorder;
        }
        if ("wx-messageHighlights-signalBackground" == s)
        {
            return Token::WxMessageHighlightsSignalBackground;
        }
        if ("wx-messageInputActionMarkDownButton-background" == s)
        {
            return Token::WxMessageInputActionMarkDownButtonBackground;
        }
        if ("wx-messageInputActionExternalParticipantButton-background" == s)
        {
            return Token::WxMessageInputActionExternalParticipantButtonBackground;
        }
        if ("wx-messageInputActionClassificationLabel-background" == s)
        {
            return Token::WxMessageInputActionClassificationLabelBackground;
        }
        if ("wx-messageInputActionClassificationLabel-border" == s)
        {
            return Token::WxMessageInputActionClassificationLabelBorder;
        }
        if ("wx-messageInputActionClassificationLabel-text" == s)
        {
            return Token::WxMessageInputActionClassificationLabelText;
        }
        if ("wx-native-messageText-background" == s)
        {
            return Token::WxNativeMessageTextBackground;
        }
        if ("wx-overlay-background" == s)
        {
            return Token::WxOverlayBackground;
        }
        if ("wx-overlay-userGuidance" == s)
        {
            return Token::WxOverlayUserGuidance;
        }
        if ("wx-addParticipantsButton-background" == s)
        {
            return Token::WxAddParticipantsButtonBackground;
        }
        if ("wx-addParticipantsButton-background-outline" == s)
        {
            return Token::WxAddParticipantsButtonBackgroundOutline;
        }
        if ("wx-addParticipantsButton-icon" == s)
        {
            return Token::WxAddParticipantsButtonIcon;
        }
        if ("wx-externalParticipants-background" == s)
        {
            return Token::WxExternalParticipantsBackground;
        }
        if ("wx-externalParticipants-text" == s)
        {
            return Token::WxExternalParticipantsText;
        }
        if ("wx-quoteWidget-background" == s)
        {
            return Token::WxQuoteWidgetBackground;
        }
        if ("wx-quoteWidgetBar-background" == s)
        {
            return Token::WxQuoteWidgetBarBackground;
        }
        if ("wx-richTextMarkDownButton-background" == s)
        {
            return Token::WxRichTextMarkDownButtonBackground;
        }
        if ("wx-search-background" == s)
        {
            return Token::WxSearchBackground;
        }
        if ("wx-spaceTabs-background" == s)
        {
            return Token::WxSpaceTabsBackground;
        }
        if ("wx-spaceTabs-text" == s)
        {
            return Token::WxSpaceTabsText;
        }
        if ("wx-spaceTabs-underline" == s)
        {
            return Token::WxSpaceTabsUnderline;
        }
        if ("wx-subheading-text" == s)
        {
            return Token::WxSubheadingText;
        }
        if ("wx-subheadingInverted-text" == s)
        {
            return Token::WxSubheadingInvertedText;
        }
        if ("wx-favorite-icon" == s)
        {
            return Token::WxFavoriteIcon;
        }
        if ("wx-spaceActionsButton-background" == s)
        {
            return Token::WxSpaceActionsButtonBackground;
        }
        if ("wx-spaceActionsButton-text" == s)
        {
            return Token::WxSpaceActionsButtonText;
        }
        if ("wx-spaceActionsButton-icon" == s)
        {
            return Token::WxSpaceActionsButtonIcon;
        }
        if ("wx-spinnerWithLabel-background" == s)
        {
            return Token::WxSpinnerWithLabelBackground;
        }
        if ("wx-spinnerWithLabel-text" == s)
        {
            return Token::WxSpinnerWithLabelText;
        }
        if ("wx-textInputBoxCode-background" == s)
        {
            return Token::WxTextInputBoxCodeBackground;
        }
        if ("wx-textInputBoxLink-text" == s)
        {
            return Token::WxTextInputBoxLinkText;
        }
        if ("wx-textInputBoxMessage-text" == s)
        {
            return Token::WxTextInputBoxMessageText;
        }
        if ("wx-brickletAvatarErrorIcon-background" == s)
        {
            return Token::WxBrickletAvatarErrorIconBackground;
        }
        if ("wx-brickletAvatarErrorIcon-border" == s)
        {
            return Token::WxBrickletAvatarErrorIconBorder;
        }
        if ("wx-brickletAvatarIcon-background" == s)
        {
            return Token::WxBrickletAvatarIconBackground;
        }
        if ("wx-brickletItem-background" == s)
        {
            return Token::WxBrickletItemBackground;
        }
        if ("wx-brickletItemHeader-text" == s)
        {
            return Token::WxBrickletItemHeaderText;
        }
        if ("wx-brickletItemTimer-text" == s)
        {
            return Token::WxBrickletItemTimerText;
        }
        if ("wx-brickletItemValid-text" == s)
        {
            return Token::WxBrickletItemValidText;
        }
        if ("wx-brickletJoinButton-background" == s)
        {
            return Token::WxBrickletJoinButtonBackground;
        }
        if ("wx-brickletJoinButtonIMOnly-background" == s)
        {
            return Token::WxBrickletJoinButtonIMOnlyBackground;
        }
        if ("wx-brickletJoinButtonZSM-background" == s)
        {
            return Token::WxBrickletJoinButtonZSMBackground;
        }
        if ("wx-brickletJoinButtonZSMSharing-background" == s)
        {
            return Token::WxBrickletJoinButtonZSMSharingBackground;
        }
        if ("wx-brickletJoinCalling-background" == s)
        {
            return Token::WxBrickletJoinCallingBackground;
        }
        if ("wx-brickletJoinedButton-background" == s)
        {
            return Token::WxBrickletJoinedButtonBackground;
        }
        if ("wx-brickletJoinedAdminButton-background" == s)
        {
            return Token::WxBrickletJoinedAdminButtonBackground;
        }
        if ("wx-brickletNotificationIcon-background" == s)
        {
            return Token::WxBrickletNotificationIconBackground;
        }
        if ("wx-filteredListHeader-text" == s)
        {
            return Token::WxFilteredListHeaderText;
        }
        if ("wx-filteredListBody-text" == s)
        {
            return Token::WxFilteredListBodyText;
        }
        if ("wx-mentionsHighlight-text" == s)
        {
            return Token::WxMentionsHighlightText;
        }
        if ("wx-incomingMessageToast-replyLabel" == s)
        {
            return Token::WxIncomingMessageToastReplyLabel;
        }
        if ("wx-incomingMessageToast-fileLabel" == s)
        {
            return Token::WxIncomingMessageToastFileLabel;
        }
        if ("mainList-indicator" == s)
        {
            return Token::MainListIndicator;
        }
        if ("wx-MediaOptionTitleFontColor" == s)
        {
            return Token::WxMediaOptionTitleFontColor;
        }
        if ("wx-PreviewBackgroundButton" == s)
        {
            return Token::WxPreviewBackgroundButton;
        }
        if ("wx-addNewTeamButton-background" == s)
        {
            return Token::WxAddNewTeamButtonBackground;
        }
        if ("wx-addNewTeamButton-border" == s)
        {
            return Token::WxAddNewTeamButtonBorder;
        }
        if ("wx-addNewTeamButtonIcon" == s)
        {
            return Token::WxAddNewTeamButtonIcon;
        }
        if ("wx-callPullButton-background" == s)
        {
            return Token::WxCallPullButtonBackground;
        }
        if ("wx-participantsListDelegate-background" == s)
        {
            return Token::WxParticipantsListDelegateBackground;
        }
        if ("wx-new-participantsListDelegate-background" == s)
        {
            return Token::WxNewParticipantsListDelegateBackground;
        }
        if ("wx-plusButton-background" == s)
        {
            return Token::WxPlusButtonBackground;
        }
        if ("wx-plusButtonSecColumn-background" == s)
        {
            return Token::WxPlusButtonSecColumnBackground;
        }
        if ("wx-plusButton-border" == s)
        {
            return Token::WxPlusButtonBorder;
        }
        if ("wx-plusButtonSecColumn-border" == s)
        {
            return Token::WxPlusButtonSecColumnBorder;
        }
        if ("wx-plusButtonIcon" == s)
        {
            return Token::WxPlusButtonIcon;
        }
        if ("wx-plusButtonSecColumnIcon" == s)
        {
            return Token::WxPlusButtonSecColumnIcon;
        }
        if ("wx-plusButtonThirdColumn-background" == s)
        {
            return Token::WxPlusButtonThirdColumnBackground;
        }
        if ("wx-plusButtonThirdColumnIcon" == s)
        {
            return Token::WxPlusButtonThirdColumnIcon;
        }
        if ("wx-progressbar" == s)
        {
            return Token::WxProgressbar;
        }
        if ("wx-phoneNumberRefreshButton" == s)
        {
            return Token::WxPhoneNumberRefreshButton;
        }
        if ("wx-conversationActivitiesShareButton" == s)
        {
            return Token::WxConversationActivitiesShareButton;
        }
        if ("wx-conversationActivitiesShareButtonOutline" == s)
        {
            return Token::WxConversationActivitiesShareButtonOutline;
        }
        if ("wx-conversationActivitiesCallButton" == s)
        {
            return Token::WxConversationActivitiesCallButton;
        }
        if ("wx-conversationsHeader-text" == s)
        {
            return Token::WxConversationsHeaderText;
        }
        if ("wx-conversationsSubHeader-text" == s)
        {
            return Token::WxConversationsSubHeaderText;
        }
        if ("wx-inputBoxWidgetMentions-text" == s)
        {
            return Token::WxInputBoxWidgetMentionsText;
        }
        if ("wx-validIcon" == s)
        {
            return Token::WxValidIcon;
        }
        if ("wx-invalidIcon" == s)
        {
            return Token::WxInvalidIcon;
        }
        if ("wx-urgentIcon" == s)
        {
            return Token::WxUrgentIcon;
        }
        if ("wx-errorText" == s)
        {
            return Token::WxErrorText;
        }
        if ("wx-callPickupError-background" == s)
        {
            return Token::WxCallPickupErrorBackground;
        }
        if ("wx-callPickupError-text" == s)
        {
            return Token::WxCallPickupErrorText;
        }
        if ("wx-otherPickup-background" == s)
        {
            return Token::WxOtherPickupBackground;
        }
        if ("wx-otherPickup-text" == s)
        {
            return Token::WxOtherPickupText;
        }
        if ("wx-callForwardItemBrush-background" == s)
        {
            return Token::WxCallForwardItemBrushBackground;
        }
        if ("wx-callForwardListItemBrush-background" == s)
        {
            return Token::WxCallForwardListItemBrushBackground;
        }
        if ("wx-callMeConnectionRectPen-background" == s)
        {
            return Token::WxCallMeConnectionRectPenBackground;
        }
        if ("wx-callPreferencesButtonIcon" == s)
        {
            return Token::WxCallPreferencesButtonIcon;
        }
        if ("wx-defaultOnSecondColumn-text" == s)
        {
            return Token::WxDefaultOnSecondColumnText;
        }
        if ("wx-customStatusEmojiButton" == s)
        {
            return Token::WxCustomStatusEmojiButton;
        }
        if ("wx-searchPlaceholder-text" == s)
        {
            return Token::WxSearchPlaceholderText;
        }
        if ("wx-avatarMenuItemIcon" == s)
        {
            return Token::WxAvatarMenuItemIcon;
        }
        if ("wx-menuList-background" == s)
        {
            return Token::WxMenuListBackground;
        }
        if ("wx-controlButtonTransitioning-background" == s)
        {
            return Token::WxControlButtonTransitioningBackground;
        }
        if ("wx-lineEdit-border" == s)
        {
            return Token::WxLineEditBorder;
        }
        if ("wx-lineEditError-border" == s)
        {
            return Token::WxLineEditErrorBorder;
        }
        if ("wx-default-checkbox" == s)
        {
            return Token::WxDefaultCheckbox;
        }
        if ("checkbox-checked-background" == s)
        {
            return Token::CheckboxCheckedBackground;
        }
        if ("checkbox-background" == s)
        {
            return Token::CheckboxBackground;
        }
        if ("checkbox-indicator" == s)
        {
            return Token::CheckboxIndicator;
        }
        if ("wx-fourthColumnInnerRing-background" == s)
        {
            return Token::WxFourthColumnInnerRingBackground;
        }
        if ("wx-placeHolder-text" == s)
        {
            return Token::WxPlaceHolderText;
        }
        if ("wx-searchButtonColors-background" == s)
        {
            return Token::WxSearchButtonColorsBackground;
        }
        if ("wx-searchInputBoxContainer-icon" == s)
        {
            return Token::WxSearchInputBoxContainerIcon;
        }
        if ("wx-searchItemAvatarInnerRing-background" == s)
        {
            return Token::WxSearchItemAvatarInnerRingBackground;
        }
        if ("wx-searchItemContactItemHighlighted-text" == s)
        {
            return Token::WxSearchItemContactItemHighlightedText;
        }
        if ("wx-searchItemSelectedContactAvatarInnerRing-background" == s)
        {
            return Token::WxSearchItemSelectedContactAvatarInnerRingBackground;
        }
        if ("wx-searchItemDelegateEmptySeparatorExist-background" == s)
        {
            return Token::WxSearchItemDelegateEmptySeparatorExistBackground;
        }
        if ("wx-searchItemJoinButton-background" == s)
        {
            return Token::WxSearchItemJoinButtonBackground;
        }
        if ("wx-searchItemMentionItemHighlighted-text" == s)
        {
            return Token::WxSearchItemMentionItemHighlightedText;
        }
        if ("wx-searchItemNewSpaceItemPenAndBrush" == s)
        {
            return Token::WxSearchItemNewSpaceItemPenAndBrush;
        }
        if ("wx-searchItemModifierTypeFillPath" == s)
        {
            return Token::WxSearchItemModifierTypeFillPath;
        }
        if ("wx-searchItemModifierTypeItemPen" == s)
        {
            return Token::WxSearchItemModifierTypeItemPen;
        }
        if ("wx-searchItem-text" == s)
        {
            return Token::WxSearchItemText;
        }
        if ("wx-searchItemDelegatorMoreButton-background" == s)
        {
            return Token::WxSearchItemDelegatorMoreButtonBackground;
        }
        if ("wx-searchModifierInputPath-background" == s)
        {
            return Token::WxSearchModifierInputPathBackground;
        }
        if ("wx-searchModifierInput-Text" == s)
        {
            return Token::WxSearchModifierInputText;
        }
        if ("wx-searchPeoplePresence-text" == s)
        {
            return Token::WxSearchPeoplePresenceText;
        }
        if ("wx-searchResultListImage-background" == s)
        {
            return Token::WxSearchResultListImageBackground;
        }
        if ("wx-searchResultSeparator-background" == s)
        {
            return Token::WxSearchResultSeparatorBackground;
        }
        if ("wx-spaceList-text" == s)
        {
            return Token::WxSpaceListText;
        }
        if ("wx-spaceListSubHeading-text" == s)
        {
            return Token::WxSpaceListSubHeadingText;
        }
        if ("wx-ghDropShadow" == s)
        {
            return Token::WxGhDropShadow;
        }
        if ("appHeader" == s)
        {
            return Token::AppHeader;
        }
        if ("appHeader-border" == s)
        {
            return Token::AppHeaderBorder;
        }
        if ("appHeader-buttonStatus" == s)
        {
            return Token::AppHeaderButtonStatus;
        }
        if ("appHeader-buttonDevice" == s)
        {
            return Token::AppHeaderButtonDevice;
        }
        if ("appHeader-buttonDevice-text-active" == s)
        {
            return Token::AppHeaderButtonDeviceTextActive;
        }
        if ("wx-ghUserDevice-text" == s)
        {
            return Token::WxGhUserDeviceText;
        }
        if ("appHeader-text" == s)
        {
            return Token::AppHeaderText;
        }
        if ("wx-ghCancelSearchButton" == s)
        {
            return Token::WxGhCancelSearchButton;
        }
        if ("wx-ghCancelSearchButton-text" == s)
        {
            return Token::WxGhCancelSearchButtonText;
        }
        if ("wx-searchItemWidget" == s)
        {
            return Token::WxSearchItemWidget;
        }
        if ("wx-searchItemWidget-text" == s)
        {
            return Token::WxSearchItemWidgetText;
        }
        if ("wx-searchItemWidget-icon" == s)
        {
            return Token::WxSearchItemWidgetIcon;
        }
        if ("wx-cancelSearchButton" == s)
        {
            return Token::WxCancelSearchButton;
        }
        if ("wx-cancelSearchButton-text" == s)
        {
            return Token::WxCancelSearchButtonText;
        }
        if ("wx-ghSearchInputBoxActive-border" == s)
        {
            return Token::WxGhSearchInputBoxActiveBorder;
        }
        if ("appHeader-searchBar-outline-active" == s)
        {
            return Token::AppHeaderSearchBarOutlineActive;
        }
        if ("appHeader-searchBar" == s)
        {
            return Token::AppHeaderSearchBar;
        }
        if ("appHeader-searchBar-active" == s)
        {
            return Token::AppHeaderSearchBarActive;
        }
        if ("wx-ghSearchInputBox-text" == s)
        {
            return Token::WxGhSearchInputBoxText;
        }
        if ("wx-ghSearchInputBox-background" == s)
        {
            return Token::WxGhSearchInputBoxBackground;
        }
        if ("wx-ghSearchModifier-background" == s)
        {
            return Token::WxGhSearchModifierBackground;
        }
        if ("wx-ghSearchModifier-text" == s)
        {
            return Token::WxGhSearchModifierText;
        }
        if ("wx-searchInputBox-border" == s)
        {
            return Token::WxSearchInputBoxBorder;
        }
        if ("wx-searchInputBox-background" == s)
        {
            return Token::WxSearchInputBoxBackground;
        }
        if ("wx-searchInputBox-text" == s)
        {
            return Token::WxSearchInputBoxText;
        }
        if ("appHeader-buttonPlus" == s)
        {
            return Token::AppHeaderButtonPlus;
        }
        if ("appHeader-buttonPlus-icon" == s)
        {
            return Token::AppHeaderButtonPlusIcon;
        }
        if ("wx-searchFilter-background" == s)
        {
            return Token::WxSearchFilterBackground;
        }
        if ("wx-searchFilter-text" == s)
        {
            return Token::WxSearchFilterText;
        }
        if ("wx-secondColumn-border" == s)
        {
            return Token::WxSecondColumnBorder;
        }
        if ("wx-navigationIcon" == s)
        {
            return Token::WxNavigationIcon;
        }
        if ("wx-updateNavigationIcon" == s)
        {
            return Token::WxUpdateNavigationIcon;
        }
        if ("wx-uCConnectionIndicatorTab-icon" == s)
        {
            return Token::WxUCConnectionIndicatorTabIcon;
        }
        if ("appNav-icon" == s)
        {
            return Token::AppNavIcon;
        }
        if ("wx-ghUpdateNavigationIcon" == s)
        {
            return Token::WxGhUpdateNavigationIcon;
        }
        if ("wx-globalHeaderUCConnectionIndicatorTab-icon" == s)
        {
            return Token::WxGlobalHeaderUCConnectionIndicatorTabIcon;
        }
        if ("appNav-badge" == s)
        {
            return Token::AppNavBadge;
        }
        if ("appNav-badge-text" == s)
        {
            return Token::AppNavBadgeText;
        }
        if ("wx-unreadCountCircle-background" == s)
        {
            return Token::WxUnreadCountCircleBackground;
        }
        if ("wx-unreadCountCircle-text" == s)
        {
            return Token::WxUnreadCountCircleText;
        }
        if ("wx-fallbackNavigationTab-border" == s)
        {
            return Token::WxFallbackNavigationTabBorder;
        }
        if ("appNav-background" == s)
        {
            return Token::AppNavBackground;
        }
        if ("wx-navigationTab-background" == s)
        {
            return Token::WxNavigationTabBackground;
        }
        if ("wx-navigation-background" == s)
        {
            return Token::WxNavigationBackground;
        }
        if ("wx-tabError-icon" == s)
        {
            return Token::WxTabErrorIcon;
        }
        if ("wx-navigationTabFocusRectInverted" == s)
        {
            return Token::WxNavigationTabFocusRectInverted;
        }
        if ("wx-ghNavigationTabFocusRectInverted" == s)
        {
            return Token::WxGhNavigationTabFocusRectInverted;
        }
        if ("wx-productNameTitle-text" == s)
        {
            return Token::WxProductNameTitleText;
        }
        if ("wx-topBarMinimizeMaximizeButton-background" == s)
        {
            return Token::WxTopBarMinimizeMaximizeButtonBackground;
        }
        if ("wx-topBarMinimizeMaximizeButton-text" == s)
        {
            return Token::WxTopBarMinimizeMaximizeButtonText;
        }
        if ("wx-topBarCloseButton-background" == s)
        {
            return Token::WxTopBarCloseButtonBackground;
        }
        if ("wx-topBarCloseButton-text" == s)
        {
            return Token::WxTopBarCloseButtonText;
        }
        if ("wx-ghTopBarMinimizeMaximizeButton-text" == s)
        {
            return Token::WxGhTopBarMinimizeMaximizeButtonText;
        }
        if ("wx-ghTopBarCloseButton-background" == s)
        {
            return Token::WxGhTopBarCloseButtonBackground;
        }
        if ("wx-ghTopBarCloseButton-text" == s)
        {
            return Token::WxGhTopBarCloseButtonText;
        }
        if ("wx-ghTitle-text" == s)
        {
            return Token::WxGhTitleText;
        }
        if ("wx-gh-text" == s)
        {
            return Token::WxGhText;
        }
        if ("wx-gh-cancelSearch-icon" == s)
        {
            return Token::WxGhCancelSearchIcon;
        }
        if ("wx-globalFooterButton-background" == s)
        {
            return Token::WxGlobalFooterButtonBackground;
        }
        if ("wx-globalFooterButton-Outline" == s)
        {
            return Token::WxGlobalFooterButtonOutline;
        }
        if ("wx-globalFooterButton-Text" == s)
        {
            return Token::WxGlobalFooterButtonText;
        }
        if ("wx-globalFooterButton-Text-Focus" == s)
        {
            return Token::WxGlobalFooterButtonTextFocus;
        }
        if ("wx-groupStateLinkButton-text" == s)
        {
            return Token::WxGroupStateLinkButtonText;
        }
        if ("wx-groupStateLinkButtonSidebar-text" == s)
        {
            return Token::WxGroupStateLinkButtonSidebarText;
        }
        if ("wx-groupBackedHelpComplete-text" == s)
        {
            return Token::WxGroupBackedHelpCompleteText;
        }
        if ("wx-groupBackedHelpComplete-background" == s)
        {
            return Token::WxGroupBackedHelpCompleteBackground;
        }
        if ("wx-groupBackedHelpCompleteSidebar-text" == s)
        {
            return Token::WxGroupBackedHelpCompleteSidebarText;
        }
        if ("wx-groupBackedHelpCompleteSidebar-background" == s)
        {
            return Token::WxGroupBackedHelpCompleteSidebarBackground;
        }
        if ("wx-multilineBadgeOne-background" == s)
        {
            return Token::WxMultilineBadgeOneBackground;
        }
        if ("wx-multilineBadgeTwo-background" == s)
        {
            return Token::WxMultilineBadgeTwoBackground;
        }
        if ("wx-multilineBadgeThree-background" == s)
        {
            return Token::WxMultilineBadgeThreeBackground;
        }
        if ("wx-multilineBadgeFour-background" == s)
        {
            return Token::WxMultilineBadgeFourBackground;
        }
        if ("wx-multilineBadgeFive-background" == s)
        {
            return Token::WxMultilineBadgeFiveBackground;
        }
        if ("wx-multilineBadgeSix-background" == s)
        {
            return Token::WxMultilineBadgeSixBackground;
        }
        if ("wx-multilineBadgeSeven-background" == s)
        {
            return Token::WxMultilineBadgeSevenBackground;
        }
        if ("wx-multilineBadgeEight-background" == s)
        {
            return Token::WxMultilineBadgeEightBackground;
        }
        if ("wx-transparent-border" == s)
        {
            return Token::WxTransparentBorder;
        }
        if ("wx-cancelButton-text" == s)
        {
            return Token::WxCancelButtonText;
        }
        if ("wx-cancelButton-background" == s)
        {
            return Token::WxCancelButtonBackground;
        }
        if ("wx-cancelButton-background-outline" == s)
        {
            return Token::WxCancelButtonBackgroundOutline;
        }
        if ("wx-voicemailPlayButton-background" == s)
        {
            return Token::WxVoicemailPlayButtonBackground;
        }
        if ("wx-voicemailPlaySlider-background" == s)
        {
            return Token::WxVoicemailPlaySliderBackground;
        }
        if ("wx-voicemailPlaySlider-border" == s)
        {
            return Token::WxVoicemailPlaySliderBorder;
        }
        if ("wx-voicemailPlaySliderHandle-background" == s)
        {
            return Token::WxVoicemailPlaySliderHandleBackground;
        }
        if ("wx-recipientButton-background" == s)
        {
            return Token::WxRecipientButtonBackground;
        }
        if ("wx-recipientWidget-background" == s)
        {
            return Token::WxRecipientWidgetBackground;
        }
        if ("wx-recipientWidget-text" == s)
        {
            return Token::WxRecipientWidgetText;
        }
        if ("wx-recipientWidgetScrollBarHandle-background" == s)
        {
            return Token::WxRecipientWidgetScrollBarHandleBackground;
        }
        if ("wx-deleteButton-background" == s)
        {
            return Token::WxDeleteButtonBackground;
        }
        if ("wx-comboBox-background" == s)
        {
            return Token::WxComboBoxBackground;
        }
        if ("wx-comboBox-border" == s)
        {
            return Token::WxComboBoxBorder;
        }
        if ("wx-teams-combobox-background" == s)
        {
            return Token::WxTeamsComboboxBackground;
        }
        if ("wx-teams-combobox-border" == s)
        {
            return Token::WxTeamsComboboxBorder;
        }
        if ("wx-teams-combobox-text" == s)
        {
            return Token::WxTeamsComboboxText;
        }
        if ("wx-teams-combobox-dropdown-arrow" == s)
        {
            return Token::WxTeamsComboboxDropdownArrow;
        }
        if ("wx-videoPreview-border" == s)
        {
            return Token::WxVideoPreviewBorder;
        }
        if ("wx-videoPreviewTop-border" == s)
        {
            return Token::WxVideoPreviewTopBorder;
        }
        if ("wx-videotoolbar-background" == s)
        {
            return Token::WxVideotoolbarBackground;
        }
        if ("wx-optionsTab-background" == s)
        {
            return Token::WxOptionsTabBackground;
        }
        if ("wx-meetingListRow-background" == s)
        {
            return Token::WxMeetingListRowBackground;
        }
        if ("wx-dividerLine-background" == s)
        {
            return Token::WxDividerLineBackground;
        }
        if ("wx-authLineEdit-background" == s)
        {
            return Token::WxAuthLineEditBackground;
        }
        if ("wx-recorder-comboBox-border" == s)
        {
            return Token::WxRecorderComboBoxBorder;
        }
        if ("wx-recorder-title-background" == s)
        {
            return Token::WxRecorderTitleBackground;
        }
        if ("wx-recorder-option-button-background" == s)
        {
            return Token::WxRecorderOptionButtonBackground;
        }
        if ("wx-recorder-combobox-background" == s)
        {
            return Token::WxRecorderComboboxBackground;
        }
        if ("wx-scrollbar-background" == s)
        {
            return Token::WxScrollbarBackground;
        }
        if ("wx-scrollbarHandle" == s)
        {
            return Token::WxScrollbarHandle;
        }
        if ("wx-scrollbar-background-secondary" == s)
        {
            return Token::WxScrollbarBackgroundSecondary;
        }
        if ("wx-scrollbarHandle-secondary" == s)
        {
            return Token::WxScrollbarHandleSecondary;
        }
        if ("wx-slider-background" == s)
        {
            return Token::WxSliderBackground;
        }
        if ("wx-sliderAddPage-background" == s)
        {
            return Token::WxSliderAddPageBackground;
        }
        if ("wx-sliderSubPage-background" == s)
        {
            return Token::WxSliderSubPageBackground;
        }
        if ("wx-areYouTheHostIcon" == s)
        {
            return Token::WxAreYouTheHostIcon;
        }
        if ("wx-closeAssociationCall" == s)
        {
            return Token::WxCloseAssociationCall;
        }
        if ("wx-actMessage" == s)
        {
            return Token::WxActMessage;
        }
        if ("wx-actCall" == s)
        {
            return Token::WxActCall;
        }
        if ("wx-actMeetingInfo" == s)
        {
            return Token::WxActMeetingInfo;
        }
        if ("wx-actParticipants" == s)
        {
            return Token::WxActParticipants;
        }
        if ("wx-actFiles" == s)
        {
            return Token::WxActFiles;
        }
        if ("wx-actWhiteBoard" == s)
        {
            return Token::WxActWhiteBoard;
        }
        if ("wx-actScreenShare" == s)
        {
            return Token::WxActScreenShare;
        }
        if ("wx-actPeopleInsights" == s)
        {
            return Token::WxActPeopleInsights;
        }
        if ("wx-actMyThreads" == s)
        {
            return Token::WxActMyThreads;
        }
        if ("wx-actLinks" == s)
        {
            return Token::WxActLinks;
        }
        if ("wx-speakerButton-background" == s)
        {
            return Token::WxSpeakerButtonBackground;
        }
        if ("wx-audioOptionsPopupSliderColor-border" == s)
        {
            return Token::WxAudioOptionsPopupSliderColorBorder;
        }
        if ("wx-audioOptionsPopupSliderColor-background" == s)
        {
            return Token::WxAudioOptionsPopupSliderColorBackground;
        }
        if ("wx-classificationButtonUnselected-text" == s)
        {
            return Token::WxClassificationButtonUnselectedText;
        }
        if ("wx-createSpaceWidgetInput-border" == s)
        {
            return Token::WxCreateSpaceWidgetInputBorder;
        }
        if ("wx-classificationLevelMenuButton-background" == s)
        {
            return Token::WxClassificationLevelMenuButtonBackground;
        }
        if ("wx-classificationLevelMenuCheckbox" == s)
        {
            return Token::WxClassificationLevelMenuCheckbox;
        }
        if ("wx-coachmark-background" == s)
        {
            return Token::WxCoachmarkBackground;
        }
        if ("wx-addLinkDialogInput-border" == s)
        {
            return Token::WxAddLinkDialogInputBorder;
        }
        if ("wx-classificationSelection-button" == s)
        {
            return Token::WxClassificationSelectionButton;
        }
        if ("wx-classificationSelection-button-border" == s)
        {
            return Token::WxClassificationSelectionButtonBorder;
        }
        if ("wx-topBarSearchButton-background" == s)
        {
            return Token::WxTopBarSearchButtonBackground;
        }
        if ("wx-topBarSearchButton-text" == s)
        {
            return Token::WxTopBarSearchButtonText;
        }
        if ("wx-ghTopBarSearchButton-background" == s)
        {
            return Token::WxGhTopBarSearchButtonBackground;
        }
        if ("wx-ghTopBarSearchButton-text" == s)
        {
            return Token::WxGhTopBarSearchButtonText;
        }
        if ("wx-ghTopBarSearchButtonIcon" == s)
        {
            return Token::WxGhTopBarSearchButtonIcon;
        }
        if ("wx-customButton-border" == s)
        {
            return Token::WxCustomButtonBorder;
        }
        if ("wx-customButton-background" == s)
        {
            return Token::WxCustomButtonBackground;
        }
        if ("wx-customButtonValueIcon" == s)
        {
            return Token::WxCustomButtonValueIcon;
        }
        if ("wx-customButtonValue-border" == s)
        {
            return Token::WxCustomButtonValueBorder;
        }
        if ("wx-focusColorOnColumn-background" == s)
        {
            return Token::WxFocusColorOnColumnBackground;
        }
        if ("wx-customCalendarHeaderText-background" == s)
        {
            return Token::WxCustomCalendarHeaderTextBackground;
        }
        if ("wx-customCalendarHeaderText-foreground" == s)
        {
            return Token::WxCustomCalendarHeaderTextForeground;
        }
        if ("wx-customListViewHeader-text" == s)
        {
            return Token::WxCustomListViewHeaderText;
        }
        if ("wx-customListViewSubHeader-text" == s)
        {
            return Token::WxCustomListViewSubHeaderText;
        }
        if ("wx-customListViewIcon" == s)
        {
            return Token::WxCustomListViewIcon;
        }
        if ("wx-transparent-background" == s)
        {
            return Token::WxTransparentBackground;
        }
        if ("wx-rectButton-border" == s)
        {
            return Token::WxRectButtonBorder;
        }
        if ("wx-whiteboardThumbnail-background" == s)
        {
            return Token::WxWhiteboardThumbnailBackground;
        }
        if ("wx-whiteboardThumbnail-text" == s)
        {
            return Token::WxWhiteboardThumbnailText;
        }
        if ("wx-whiteboardThumbnailButtonIcon" == s)
        {
            return Token::WxWhiteboardThumbnailButtonIcon;
        }
        if ("wx-whiteboardThumbnailButtonIcon-background" == s)
        {
            return Token::WxWhiteboardThumbnailButtonIconBackground;
        }
        if ("wx-cancelHostTransferButton-background" == s)
        {
            return Token::WxCancelHostTransferButtonBackground;
        }
        if ("wx-cancelHostTransferButton-text" == s)
        {
            return Token::WxCancelHostTransferButtonText;
        }
        if ("wx-cancelHostTransferButton-border" == s)
        {
            return Token::WxCancelHostTransferButtonBorder;
        }
        if ("wx-linkActivityItem-background" == s)
        {
            return Token::WxLinkActivityItemBackground;
        }
        if ("wx-linkActivityFocusRect" == s)
        {
            return Token::WxLinkActivityFocusRect;
        }
        if ("wx-linkActivityNoFavIcon-background" == s)
        {
            return Token::WxLinkActivityNoFavIconBackground;
        }
        if ("wx-linkActivityNoFavIcon" == s)
        {
            return Token::WxLinkActivityNoFavIcon;
        }
        if ("wx-linkActivityHoverRect-background" == s)
        {
            return Token::WxLinkActivityHoverRectBackground;
        }
        if ("wx-linkActivityButton-background" == s)
        {
            return Token::WxLinkActivityButtonBackground;
        }
        if ("wx-linkActivityButton-text" == s)
        {
            return Token::WxLinkActivityButtonText;
        }
        if ("wx-buttonTab-border" == s)
        {
            return Token::WxButtonTabBorder;
        }
        if ("wx-buttonTab-text" == s)
        {
            return Token::WxButtonTabText;
        }
        if ("wx-buttonTab-background" == s)
        {
            return Token::WxButtonTabBackground;
        }
        if ("wx-meetingsTabButton-text" == s)
        {
            return Token::WxMeetingsTabButtonText;
        }
        if ("wx-primary-button-contrary-backgroud" == s)
        {
            return Token::WxPrimaryButtonContraryBackgroud;
        }
        if ("wx-secondary-button-contrary-backgroud" == s)
        {
            return Token::WxSecondaryButtonContraryBackgroud;
        }
        if ("wx-meetingsTabButton-background" == s)
        {
            return Token::WxMeetingsTabButtonBackground;
        }
        if ("wx-meetingIcon" == s)
        {
            return Token::WxMeetingIcon;
        }
        if ("wx-healthCheckButton-background" == s)
        {
            return Token::WxHealthCheckButtonBackground;
        }
        if ("wx-healthCheckButton-text" == s)
        {
            return Token::WxHealthCheckButtonText;
        }
        if ("wx-threadsItem-background" == s)
        {
            return Token::WxThreadsItemBackground;
        }
        if ("wx-threadsUnreadItem-text" == s)
        {
            return Token::WxThreadsUnreadItemText;
        }
        if ("wx-insightsButton-background" == s)
        {
            return Token::WxInsightsButtonBackground;
        }
        if ("wx-classificationButtonUnselected-background" == s)
        {
            return Token::WxClassificationButtonUnselectedBackground;
        }
        if ("wx-underlineButton-background" == s)
        {
            return Token::WxUnderlineButtonBackground;
        }
        if ("wx-underlineButton-text" == s)
        {
            return Token::WxUnderlineButtonText;
        }
        if ("wx-underlineSearchFilterButton-text" == s)
        {
            return Token::WxUnderlineSearchFilterButtonText;
        }
        if ("wx-searchModifier-background" == s)
        {
            return Token::WxSearchModifierBackground;
        }
        if ("wx-notification-background" == s)
        {
            return Token::WxNotificationBackground;
        }
        if ("wx-notification-text" == s)
        {
            return Token::WxNotificationText;
        }
        if ("wx-notification-secondary-background" == s)
        {
            return Token::WxNotificationSecondaryBackground;
        }
        if ("wx-notification-secondary-border" == s)
        {
            return Token::WxNotificationSecondaryBorder;
        }
        if ("wx-notification-secondary-text" == s)
        {
            return Token::WxNotificationSecondaryText;
        }
        if ("wx-teamButton-background" == s)
        {
            return Token::WxTeamButtonBackground;
        }
        if ("wx-themeButton-background" == s)
        {
            return Token::WxThemeButtonBackground;
        }
        if ("wx-share-selection-window-item-border" == s)
        {
            return Token::WxShareSelectionWindowItemBorder;
        }
        if ("wx-shareSeparator" == s)
        {
            return Token::WxShareSeparator;
        }
        if ("wx-share-selection-window-background" == s)
        {
            return Token::WxShareSelectionWindowBackground;
        }
        if ("wx-share-selected-item-border" == s)
        {
            return Token::WxShareSelectedItemBorder;
        }
        if ("wx-share-application-icon-background" == s)
        {
            return Token::WxShareApplicationIconBackground;
        }
        if ("wx-share-application-icon-border" == s)
        {
            return Token::WxShareApplicationIconBorder;
        }
        if ("wx-share-item-hover-background" == s)
        {
            return Token::WxShareItemHoverBackground;
        }
        if ("wx-share-dropdown-color" == s)
        {
            return Token::WxShareDropdownColor;
        }
        if ("wx-share-gray-dropdown-color" == s)
        {
            return Token::WxShareGrayDropdownColor;
        }
        if ("wx-share-sharing-border-color" == s)
        {
            return Token::WxShareSharingBorderColor;
        }
        if ("wx-share-sharing-border-color-outline" == s)
        {
            return Token::WxShareSharingBorderColorOutline;
        }
        if ("wx-share-selection-border-color" == s)
        {
            return Token::WxShareSelectionBorderColor;
        }
        if ("wx-share-selection-window-popover-border-color" == s)
        {
            return Token::WxShareSelectionWindowPopoverBorderColor;
        }
        if ("wx-share-selection-icon-background-color" == s)
        {
            return Token::WxShareSelectionIconBackgroundColor;
        }
        if ("wx-share-unshared-application-border-color" == s)
        {
            return Token::WxShareUnsharedApplicationBorderColor;
        }
        if ("wx-share-bar-button-color" == s)
        {
            return Token::WxShareBarButtonColor;
        }
        if ("wx-share-bar-button-font-color" == s)
        {
            return Token::WxShareBarButtonFontColor;
        }
        if ("wx-share-bar-gray-button-color" == s)
        {
            return Token::WxShareBarGrayButtonColor;
        }
        if ("wx-share-bar-dragger-color" == s)
        {
            return Token::WxShareBarDraggerColor;
        }
        if ("wx-share-bar-gray-dragger-color" == s)
        {
            return Token::WxShareBarGrayDraggerColor;
        }
        if ("wx-share-resume-bar-color" == s)
        {
            return Token::WxShareResumeBarColor;
        }
        if ("wx-share-toast-icon-background-color" == s)
        {
            return Token::WxShareToastIconBackgroundColor;
        }
        if ("wx-share-screen-number-notification-background" == s)
        {
            return Token::WxShareScreenNumberNotificationBackground;
        }
        if ("wx-tutorialSeparator" == s)
        {
            return Token::WxTutorialSeparator;
        }
        if ("wx-tutorialHeader-text" == s)
        {
            return Token::WxTutorialHeaderText;
        }
        if ("wx-tutorialDescription-text" == s)
        {
            return Token::WxTutorialDescriptionText;
        }
        if ("wx-tutorialSelectorButton" == s)
        {
            return Token::WxTutorialSelectorButton;
        }
        if ("wx-previewContentListIcon" == s)
        {
            return Token::WxPreviewContentListIcon;
        }
        if ("wx-previewContentList-background" == s)
        {
            return Token::WxPreviewContentListBackground;
        }
        if ("wx-previewVideoRect-background" == s)
        {
            return Token::WxPreviewVideoRectBackground;
        }
        if ("wx-secondColumnFlagIcon" == s)
        {
            return Token::WxSecondColumnFlagIcon;
        }
        if ("wx-filterControlIcon" == s)
        {
            return Token::WxFilterControlIcon;
        }
        if ("wx-filterControlBackground" == s)
        {
            return Token::WxFilterControlBackground;
        }
        if ("wx-ucStatusButton-background" == s)
        {
            return Token::WxUcStatusButtonBackground;
        }
        if ("wx-customAppButtonIcon" == s)
        {
            return Token::WxCustomAppButtonIcon;
        }
        if ("wx-customAppButtonIcon-background" == s)
        {
            return Token::WxCustomAppButtonIconBackground;
        }
        if ("wx-ucStatus-label-text" == s)
        {
            return Token::WxUcStatusLabelText;
        }
        if ("wx-popupMenuItem-background" == s)
        {
            return Token::WxPopupMenuItemBackground;
        }
        if ("wx-popupMenuItem-text" == s)
        {
            return Token::WxPopupMenuItemText;
        }
        if ("wx-avatarNameInput-border" == s)
        {
            return Token::WxAvatarNameInputBorder;
        }
        if ("wx-filesAppButtonIcon" == s)
        {
            return Token::WxFilesAppButtonIcon;
        }
        if ("wx-filesAppButton-background" == s)
        {
            return Token::WxFilesAppButtonBackground;
        }
        if ("wx-filesAppControlPanel-background" == s)
        {
            return Token::WxFilesAppControlPanelBackground;
        }
        if ("wx-filesAppButtondividerLine" == s)
        {
            return Token::WxFilesAppButtondividerLine;
        }
        if ("wx-filesListButton-background" == s)
        {
            return Token::WxFilesListButtonBackground;
        }
        if ("wx-filesListIcon-border" == s)
        {
            return Token::WxFilesListIconBorder;
        }
        if ("wx-statusDefaultIcon" == s)
        {
            return Token::WxStatusDefaultIcon;
        }
        if ("wx-statusReadyIcon" == s)
        {
            return Token::WxStatusReadyIcon;
        }
        if ("wx-selfViewEnabledButtonIcon" == s)
        {
            return Token::WxSelfViewEnabledButtonIcon;
        }
        if ("wx-customMenu-background" == s)
        {
            return Token::WxCustomMenuBackground;
        }
        if ("wx-customMenu-text" == s)
        {
            return Token::WxCustomMenuText;
        }
        if ("wx-customMenu-border" == s)
        {
            return Token::WxCustomMenuBorder;
        }
        if ("wx-transparent-button" == s)
        {
            return Token::WxTransparentButton;
        }
        if ("wx-semiTransparentPreview-background" == s)
        {
            return Token::WxSemiTransparentPreviewBackground;
        }
        if ("wx-semiTransparentControl" == s)
        {
            return Token::WxSemiTransparentControl;
        }
        if ("wx-callStatisticsTitle-background" == s)
        {
            return Token::WxCallStatisticsTitleBackground;
        }
        if ("wx-callStatisticsTitle-text" == s)
        {
            return Token::WxCallStatisticsTitleText;
        }
        if ("wx-callStatisticsRecTran-background" == s)
        {
            return Token::WxCallStatisticsRecTranBackground;
        }
        if ("wx-callStatisticsRecTran-text" == s)
        {
            return Token::WxCallStatisticsRecTranText;
        }
        if ("wx-calendarIcon" == s)
        {
            return Token::WxCalendarIcon;
        }
        if ("wx-copyButton-background" == s)
        {
            return Token::WxCopyButtonBackground;
        }
        if ("wx-settingsButton-background" == s)
        {
            return Token::WxSettingsButtonBackground;
        }
        if ("wx-settingsButtonIcon" == s)
        {
            return Token::WxSettingsButtonIcon;
        }
        if ("wx-copyButtonIcon" == s)
        {
            return Token::WxCopyButtonIcon;
        }
        if ("wx-videoAdressInputIcon" == s)
        {
            return Token::WxVideoAdressInputIcon;
        }
        if ("wx-copiedLabel-background" == s)
        {
            return Token::WxCopiedLabelBackground;
        }
        if ("wx-copiedLabel-text" == s)
        {
            return Token::WxCopiedLabelText;
        }
        if ("wx-copyButtonAfterCopiedIcon" == s)
        {
            return Token::WxCopyButtonAfterCopiedIcon;
        }
        if ("wx-joinMeetingButtonIcon" == s)
        {
            return Token::WxJoinMeetingButtonIcon;
        }
        if ("wx-copyPMRButtonIcon" == s)
        {
            return Token::WxCopyPMRButtonIcon;
        }
        if ("wx-callPopupMenuItem-background" == s)
        {
            return Token::WxCallPopupMenuItemBackground;
        }
        if ("wx-callPopupMenuItem-text" == s)
        {
            return Token::WxCallPopupMenuItemText;
        }
        if ("wx-stopCallButtonIcon" == s)
        {
            return Token::WxStopCallButtonIcon;
        }
        if ("wx-defaultSparkToolbar-background" == s)
        {
            return Token::WxDefaultSparkToolbarBackground;
        }
        if ("wx-sparkToolbarButton-text" == s)
        {
            return Token::WxSparkToolbarButtonText;
        }
        if ("wx-wbClearAllButton-text" == s)
        {
            return Token::WxWbClearAllButtonText;
        }
        if ("wx-multiAppShareShiftLabel-background" == s)
        {
            return Token::WxMultiAppShareShiftLabelBackground;
        }
        if ("wx-appShareButton-background" == s)
        {
            return Token::WxAppShareButtonBackground;
        }
        if ("wx-appShareIcon-background" == s)
        {
            return Token::WxAppShareIconBackground;
        }
        if ("wx-appShareIconPlaceholder" == s)
        {
            return Token::WxAppShareIconPlaceholder;
        }
        if ("wx-callWindowCheckedIcon" == s)
        {
            return Token::WxCallWindowCheckedIcon;
        }
        if ("wx-selfMessageCircleIcon" == s)
        {
            return Token::WxSelfMessageCircleIcon;
        }
        if ("wx-selfMessageCircle-border" == s)
        {
            return Token::WxSelfMessageCircleBorder;
        }
        if ("wx-addButton-background" == s)
        {
            return Token::WxAddButtonBackground;
        }
        if ("wx-addButton-text" == s)
        {
            return Token::WxAddButtonText;
        }
        if ("wx-addButton-icon" == s)
        {
            return Token::WxAddButtonIcon;
        }
        if ("wx-popover-background" == s)
        {
            return Token::WxPopoverBackground;
        }
        if ("wx-screenShareButton-border" == s)
        {
            return Token::WxScreenShareButtonBorder;
        }
        if ("wx-screenShareTitle-text" == s)
        {
            return Token::WxScreenShareTitleText;
        }
        if ("wx-screenShareInfoFrame-background" == s)
        {
            return Token::WxScreenShareInfoFrameBackground;
        }
        if ("wx-screenShareRebrandingInfoFrame-background" == s)
        {
            return Token::WxScreenShareRebrandingInfoFrameBackground;
        }
        if ("wx-screenShareDropdown-background" == s)
        {
            return Token::WxScreenShareDropdownBackground;
        }
        if ("wx-screenShareDropdownGray-background" == s)
        {
            return Token::WxScreenShareDropdownGrayBackground;
        }
        if ("wx-screenShareRecordingButton-background" == s)
        {
            return Token::WxScreenShareRecordingButtonBackground;
        }
        if ("wx-general-list-background" == s)
        {
            return Token::WxGeneralListBackground;
        }
        if ("wx-general-list-border" == s)
        {
            return Token::WxGeneralListBorder;
        }
        if ("wx-general-list-text" == s)
        {
            return Token::WxGeneralListText;
        }
        if ("wx-callStripAudioVideoButton-icon" == s)
        {
            return Token::WxCallStripAudioVideoButtonIcon;
        }
        if ("wx-defaultBlur-border" == s)
        {
            return Token::WxDefaultBlurBorder;
        }
        if ("wx-exitHostPINViewButton-text" == s)
        {
            return Token::WxExitHostPINViewButtonText;
        }
        if ("wx-infoButton-background" == s)
        {
            return Token::WxInfoButtonBackground;
        }
        if ("wx-inputField-border" == s)
        {
            return Token::WxInputFieldBorder;
        }
        if ("wx-muteAudioButton-background" == s)
        {
            return Token::WxMuteAudioButtonBackground;
        }
        if ("wx-filmStripPipWidget-background" == s)
        {
            return Token::WxFilmStripPipWidgetBackground;
        }
        if ("wx-pinChallengeWidgetCloseButton-background" == s)
        {
            return Token::WxPinChallengeWidgetCloseButtonBackground;
        }
        if ("wx-closeXButtonIcon" == s)
        {
            return Token::WxCloseXButtonIcon;
        }
        if ("wx-stopShareButton-background" == s)
        {
            return Token::WxStopShareButtonBackground;
        }
        if ("wx-customCalendarCellHighlight-background" == s)
        {
            return Token::WxCustomCalendarCellHighlightBackground;
        }
        if ("wx-avatarlist-text" == s)
        {
            return Token::WxAvatarlistText;
        }
        if ("wx-avatarlist-circle" == s)
        {
            return Token::WxAvatarlistCircle;
        }
        if ("wx-device-menu-background" == s)
        {
            return Token::WxDeviceMenuBackground;
        }
        if ("wx-interstitial-background" == s)
        {
            return Token::WxInterstitialBackground;
        }
        if ("wx-interstitial-frame-background" == s)
        {
            return Token::WxInterstitialFrameBackground;
        }
        if ("wx-interstitial-change-video-button-background" == s)
        {
            return Token::WxInterstitialChangeVideoButtonBackground;
        }
        if ("wx-interstitial-change-video-button-border" == s)
        {
            return Token::WxInterstitialChangeVideoButtonBorder;
        }
        if ("wx-interstitial-audio-options-button" == s)
        {
            return Token::WxInterstitialAudioOptionsButton;
        }
        if ("wx-interstitial-button-background" == s)
        {
            return Token::WxInterstitialButtonBackground;
        }
        if ("wx-interstitial-button-border" == s)
        {
            return Token::WxInterstitialButtonBorder;
        }
        if ("wx-interstitial-frame-video-background" == s)
        {
            return Token::WxInterstitialFrameVideoBackground;
        }
        if ("wx-interstitial-frame-video-border" == s)
        {
            return Token::WxInterstitialFrameVideoBorder;
        }
        if ("wx-interstitial-frame-video-background-vdi" == s)
        {
            return Token::WxInterstitialFrameVideoBackgroundVdi;
        }
        if ("wx-interstitial-disconnect-button-text" == s)
        {
            return Token::WxInterstitialDisconnectButtonText;
        }
        if ("wx-interstitial-join-button-text" == s)
        {
            return Token::WxInterstitialJoinButtonText;
        }
        if ("wx-interstitial-disconnect-button-background" == s)
        {
            return Token::WxInterstitialDisconnectButtonBackground;
        }
        if ("wx-interstitial-audio-button-background" == s)
        {
            return Token::WxInterstitialAudioButtonBackground;
        }
        if ("wx-interstitial-mute-button-icon" == s)
        {
            return Token::WxInterstitialMuteButtonIcon;
        }
        if ("wx-interstitial-mute-button-icon-checked" == s)
        {
            return Token::WxInterstitialMuteButtonIconChecked;
        }
        if ("wx-interstitial-audio-button-border" == s)
        {
            return Token::WxInterstitialAudioButtonBorder;
        }
        if ("wx-interstitial-paired-combobox-text" == s)
        {
            return Token::WxInterstitialPairedComboboxText;
        }
        if ("wx-interstitial-paired-combobox-background" == s)
        {
            return Token::WxInterstitialPairedComboboxBackground;
        }
        if ("wx-interstitial-not-mirrored-background" == s)
        {
            return Token::WxInterstitialNotMirroredBackground;
        }
        if ("wx-interstitial-mirrored-background" == s)
        {
            return Token::WxInterstitialMirroredBackground;
        }
        if ("wx-interstitial-mirrored-text-mirror" == s)
        {
            return Token::WxInterstitialMirroredTextMirror;
        }
        if ("wx-interstitial-mirrored-text-unmirror" == s)
        {
            return Token::WxInterstitialMirroredTextUnmirror;
        }
        if ("wx-interstitial-preview-background" == s)
        {
            return Token::WxInterstitialPreviewBackground;
        }
        if ("wx-interstitial-device-settig-background" == s)
        {
            return Token::WxInterstitialDeviceSettigBackground;
        }
        if ("wx-call-control-button-background" == s)
        {
            return Token::WxCallControlButtonBackground;
        }
        if ("wx-call-control-button-border" == s)
        {
            return Token::WxCallControlButtonBorder;
        }
        if ("wx-call-control-button-text" == s)
        {
            return Token::WxCallControlButtonText;
        }
        if ("wx-call-control-moreButton-background" == s)
        {
            return Token::WxCallControlMoreButtonBackground;
        }
        if ("wx-call-view-timeLabel-background" == s)
        {
            return Token::WxCallViewTimeLabelBackground;
        }
        if ("wx-titilebar-recordinglabel-background" == s)
        {
            return Token::WxTitilebarRecordinglabelBackground;
        }
        if ("wx-titilebar-pausedlabel-background" == s)
        {
            return Token::WxTitilebarPausedlabelBackground;
        }
        if ("wx-titilebar-locklabel-background" == s)
        {
            return Token::WxTitilebarLocklabelBackground;
        }
        if ("wx-titilebar-mediaqualitygoodlabel-background" == s)
        {
            return Token::WxTitilebarMediaqualitygoodlabelBackground;
        }
        if ("wx-titilebar-mediaqualityunstablelabel-background" == s)
        {
            return Token::WxTitilebarMediaqualityunstablelabelBackground;
        }
        if ("wx-titilebar-mediaqualitypoorlabel-background" == s)
        {
            return Token::WxTitilebarMediaqualitypoorlabelBackground;
        }
        if ("wx-customCalendarCell-background" == s)
        {
            return Token::WxCustomCalendarCellBackground;
        }
        if ("wx-call-control-panelButton-background" == s)
        {
            return Token::WxCallControlPanelButtonBackground;
        }
        if ("wx-call-control-panelButton-border" == s)
        {
            return Token::WxCallControlPanelButtonBorder;
        }
        if ("wx-call-control-panelButton-text" == s)
        {
            return Token::WxCallControlPanelButtonText;
        }
        if ("wx-call-control-volume-background" == s)
        {
            return Token::WxCallControlVolumeBackground;
        }
        if ("wx-call-control-popover-border" == s)
        {
            return Token::WxCallControlPopoverBorder;
        }
        if ("wx-call-control-more-menu-background" == s)
        {
            return Token::WxCallControlMoreMenuBackground;
        }
        if ("wx-call-videoLayoutMenu-layoutButton-text" == s)
        {
            return Token::WxCallVideoLayoutMenuLayoutButtonText;
        }
        if ("wx-call-videoLayoutMenu-layoutButton-background" == s)
        {
            return Token::WxCallVideoLayoutMenuLayoutButtonBackground;
        }
        if ("wx-call-videoLayoutMenu-separator-background" == s)
        {
            return Token::WxCallVideoLayoutMenuSeparatorBackground;
        }
        if ("wx-call-videoLayoutMenu-popover-background" == s)
        {
            return Token::WxCallVideoLayoutMenuPopoverBackground;
        }
        if ("mainList" == s)
        {
            return Token::MainList;
        }
        if ("mainList-item" == s)
        {
            return Token::MainListItem;
        }
        if ("wx-resumeCallButton-text" == s)
        {
            return Token::WxResumeCallButtonText;
        }
        if ("wx-meeting-info-background" == s)
        {
            return Token::WxMeetingInfoBackground;
        }
        if ("wx-softLanding-leftSide-background" == s)
        {
            return Token::WxSoftLandingLeftSideBackground;
        }
        if ("wx-call-control-endButton-icon" == s)
        {
            return Token::WxCallControlEndButtonIcon;
        }
        if ("wx-video-layout-controlButton-text" == s)
        {
            return Token::WxVideoLayoutControlButtonText;
        }
        if ("wx-video-layout-controlButton-background" == s)
        {
            return Token::WxVideoLayoutControlButtonBackground;
        }
        if ("wx-titilebar-meetingInfo-svg-text" == s)
        {
            return Token::WxTitilebarMeetingInfoSvgText;
        }
        if ("wx-titilebar-meetingInfoButton-background" == s)
        {
            return Token::WxTitilebarMeetingInfoButtonBackground;
        }
        if ("wx-nametag-background" == s)
        {
            return Token::WxNametagBackground;
        }
        if ("wx-nametag-border" == s)
        {
            return Token::WxNametagBorder;
        }
        if ("wx-nametag-background-hasvideo" == s)
        {
            return Token::WxNametagBackgroundHasvideo;
        }
        if ("wx-nametag-text-hasvideo" == s)
        {
            return Token::WxNametagTextHasvideo;
        }
        if ("wx-morebutton-border" == s)
        {
            return Token::WxMorebuttonBorder;
        }
        if ("wx-focusOutline-border" == s)
        {
            return Token::WxFocusOutlineBorder;
        }
        if ("wx-focusOutline-splitbutton-border" == s)
        {
            return Token::WxFocusOutlineSplitbuttonBorder;
        }
        if ("wx-avatarInitials-text" == s)
        {
            return Token::WxAvatarInitialsText;
        }
        if ("wx-focusOutline-transparent-border" == s)
        {
            return Token::WxFocusOutlineTransparentBorder;
        }
        if ("wx-focusOutline-buttonJoin-border" == s)
        {
            return Token::WxFocusOutlineButtonJoinBorder;
        }
        if ("wx-call-dialog-border" == s)
        {
            return Token::WxCallDialogBorder;
        }
        if ("wx-layout-menu-button-background" == s)
        {
            return Token::WxLayoutMenuButtonBackground;
        }
        if ("wx-layout-menu-button-border" == s)
        {
            return Token::WxLayoutMenuButtonBorder;
        }
        if ("wx-layout-button-background" == s)
        {
            return Token::WxLayoutButtonBackground;
        }
        if ("wx-layout-button-text" == s)
        {
            return Token::WxLayoutButtonText;
        }
        if ("wx-roster-mute-button-background" == s)
        {
            return Token::WxRosterMuteButtonBackground;
        }
        if ("wx-call-splitter-background" == s)
        {
            return Token::WxCallSplitterBackground;
        }
        if ("wx-meeting-list-item-background" == s)
        {
            return Token::WxMeetingListItemBackground;
        }
        if ("wx-popupLabel-background" == s)
        {
            return Token::WxPopupLabelBackground;
        }
        if ("wx-popupLabel-border" == s)
        {
            return Token::WxPopupLabelBorder;
        }
        if ("wx-lobbyView-background" == s)
        {
            return Token::WxLobbyViewBackground;
        }
        if ("wx-lobbyView-text-primary" == s)
        {
            return Token::WxLobbyViewTextPrimary;
        }
        if ("wx-lobbyView-text-secondary" == s)
        {
            return Token::WxLobbyViewTextSecondary;
        }
        if ("wx-percentage-indicator-possessive" == s)
        {
            return Token::WxPercentageIndicatorPossessive;
        }
        if ("wx-percentage-indicator-remaining" == s)
        {
            return Token::WxPercentageIndicatorRemaining;
        }
        if ("wx-meeting-reminder-border" == s)
        {
            return Token::WxMeetingReminderBorder;
        }
        if ("wx-callMoreEndPopupMenu-item-background" == s)
        {
            return Token::WxCallMoreEndPopupMenuItemBackground;
        }
        if ("wx-callHistory-item-missed" == s)
        {
            return Token::WxCallHistoryItemMissed;
        }
        if ("wx-callHistory-detail-missed" == s)
        {
            return Token::WxCallHistoryDetailMissed;
        }
        if ("wx-device-premeeting-volume-control" == s)
        {
            return Token::WxDevicePremeetingVolumeControl;
        }
        if ("wx-device-in-meeting-button" == s)
        {
            return Token::WxDeviceInMeetingButton;
        }
        if ("wx-toggle-blue-color" == s)
        {
            return Token::WxToggleBlueColor;
        }
        if ("wx-toggle-gray-color" == s)
        {
            return Token::WxToggleGrayColor;
        }
        if ("wx-footer-info-icon" == s)
        {
            return Token::WxFooterInfoIcon;
        }
        if ("wx-meetingRSVPStatus-tentativeButton-background" == s)
        {
            return Token::WxMeetingRSVPStatusTentativeButtonBackground;
        }
        if ("wx-meetingRSVPStatus-acceptButton-background" == s)
        {
            return Token::WxMeetingRSVPStatusAcceptButtonBackground;
        }
        if ("wx-meetingRSVPStatus-declineButton-background" == s)
        {
            return Token::WxMeetingRSVPStatusDeclineButtonBackground;
        }
        if ("wx-meetingRSVPStatus-button-text" == s)
        {
            return Token::WxMeetingRSVPStatusButtonText;
        }
        if ("wx-meetingRSVPStatus-button-border" == s)
        {
            return Token::WxMeetingRSVPStatusButtonBorder;
        }
        if ("wx-buttonJoinIcon-background" == s)
        {
            return Token::WxButtonJoinIconBackground;
        }
        if ("wx-buttonJoinIconOBTP-background" == s)
        {
            return Token::WxButtonJoinIconOBTPBackground;
        }
        if ("wx-scheduleButton-background" == s)
        {
            return Token::WxScheduleButtonBackground;
        }
        if ("wx-scheduleButton-icon" == s)
        {
            return Token::WxScheduleButtonIcon;
        }
        if ("wx-buttonJoin-background" == s)
        {
            return Token::WxButtonJoinBackground;
        }
        if ("wx-footer-warning-icon" == s)
        {
            return Token::WxFooterWarningIcon;
        }
        if ("closedCaptions-text-secondary" == s)
        {
            return Token::ClosedCaptionsTextSecondary;
        }
        if ("closedCaptions-text-primary" == s)
        {
            return Token::ClosedCaptionsTextPrimary;
        }
        if ("closedCaptions-speaker-secondary" == s)
        {
            return Token::ClosedCaptionsSpeakerSecondary;
        }
        if ("closedCaptions-speaker-primary" == s)
        {
            return Token::ClosedCaptionsSpeakerPrimary;
        }
        if ("closedCaptions-static-background-secondary" == s)
        {
            return Token::ClosedCaptionsStaticBackgroundSecondary;
        }
        if ("closedCaptions-static-background-primary" == s)
        {
            return Token::ClosedCaptionsStaticBackgroundPrimary;
        }
        if ("closedCaptions-background-secondary" == s)
        {
            return Token::ClosedCaptionsBackgroundSecondary;
        }
        if ("closedCaptions-background-primary" == s)
        {
            return Token::ClosedCaptionsBackgroundPrimary;
        }
        if ("closedCaptions-menu-primary" == s)
        {
            return Token::ClosedCaptionsMenuPrimary;
        }
        if ("closedCaptions-menu-background-primary" == s)
        {
            return Token::ClosedCaptionsMenuBackgroundPrimary;
        }
        if ("closedCaptions-border-secondary" == s)
        {
            return Token::ClosedCaptionsBorderSecondary;
        }
        if ("closedCaptions-border-primary" == s)
        {
            return Token::ClosedCaptionsBorderPrimary;
        }
        if ("highlight-decision" == s)
        {
            return Token::HighlightDecision;
        }
        if ("highlight-summary" == s)
        {
            return Token::HighlightSummary;
        }
        if ("highlight-agenda" == s)
        {
            return Token::HighlightAgenda;
        }
        if ("highlight-nextstep" == s)
        {
            return Token::HighlightNextstep;
        }
        if ("highlight-debrief" == s)
        {
            return Token::HighlightDebrief;
        }
        if ("highlight-actionitem" == s)
        {
            return Token::HighlightActionitem;
        }
        if ("highlight-note" == s)
        {
            return Token::HighlightNote;
        }
        if ("highlight-reminder" == s)
        {
            return Token::HighlightReminder;
        }
        if ("highlight-parkinglot" == s)
        {
            return Token::HighlightParkinglot;
        }
        if ("wx-external-badge-background" == s)
        {
            return Token::WxExternalBadgeBackground;
        }
        if ("wx-external-badge-text" == s)
        {
            return Token::WxExternalBadgeText;
        }
        if ("wx-hand-recognize-circular-progress-bar-background" == s)
        {
            return Token::WxHandRecognizeCircularProgressBarBackground;
        }
        if ("wx-reaction-list-item-gradient-background-start-color" == s)
        {
            return Token::WxReactionListItemGradientBackgroundStartColor;
        }
        if ("wx-reaction-list-item-gradient-background-end-color" == s)
        {
            return Token::WxReactionListItemGradientBackgroundEndColor;
        }
        if ("wx-reaction-list-item-gradient-border-start-color" == s)
        {
            return Token::WxReactionListItemGradientBorderStartColor;
        }
        if ("wx-reaction-list-item-gradient-border-end-color" == s)
        {
            return Token::WxReactionListItemGradientBorderEndColor;
        }
        if ("wx-reaction-expend-button-color" == s)
        {
            return Token::WxReactionExpendButtonColor;
        }
        if ("wx-reaction-expend-button-border-color" == s)
        {
            return Token::WxReactionExpendButtonBorderColor;
        }
        if ("wx-reaction-list-background-color" == s)
        {
            return Token::WxReactionListBackgroundColor;
        }
        if ("wx-reaction-list-background-color-vdi" == s)
        {
            return Token::WxReactionListBackgroundColorVdi;
        }
        if ("wx-reaction-list-item-background-color" == s)
        {
            return Token::WxReactionListItemBackgroundColor;
        }
        if ("wx-reaction-list-item-border-color" == s)
        {
            return Token::WxReactionListItemBorderColor;
        }
        if ("wx-reaction-list-avatar-border-color" == s)
        {
            return Token::WxReactionListAvatarBorderColor;
        }
        if ("wx-reaction-recognizable-indicator-background" == s)
        {
            return Token::WxReactionRecognizableIndicatorBackground;
        }
        if ("wx-multitask-panel-button-background" == s)
        {
            return Token::WxMultitaskPanelButtonBackground;
        }
        if ("wx-multitask-panel-button-background-outline" == s)
        {
            return Token::WxMultitaskPanelButtonBackgroundOutline;
        }
        if ("wx-multitask-shadow-window" == s)
        {
            return Token::WxMultitaskShadowWindow;
        }
        if ("wx-multitask-activespeaker-background" == s)
        {
            return Token::WxMultitaskActivespeakerBackground;
        }
        if ("wx-raise-hand-recognizable-indicator-background" == s)
        {
            return Token::WxRaiseHandRecognizableIndicatorBackground;
        }
        if ("wx-device-newvolumn-control-button-background" == s)
        {
            return Token::WxDeviceNewvolumnControlButtonBackground;
        }
        if ("wx-device-newvolumn-control-button-border" == s)
        {
            return Token::WxDeviceNewvolumnControlButtonBorder;
        }
        if ("wx-phonenumber-list-background" == s)
        {
            return Token::WxPhonenumberListBackground;
        }
        if ("wx-activated-device-status" == s)
        {
            return Token::WxActivatedDeviceStatus;
        }
        if ("wx-uc-account-information-alert-background" == s)
        {
            return Token::WxUcAccountInformationAlertBackground;
        }
        if ("participant-list-muted-icon-color" == s)
        {
            return Token::ParticipantListMutedIconColor;
        }
        if ("participant-list-microphone-on-color" == s)
        {
            return Token::ParticipantListMicrophoneOnColor;
        }
        if ("wx-default-avatar-background" == s)
        {
            return Token::WxDefaultAvatarBackground;
        }
        if ("wx-leftpane-shortcut-app-icon-orange" == s)
        {
            return Token::WxLeftpaneShortcutAppIconOrange;
        }
        if ("wx-leftpane-shortcut-app-icon-gold" == s)
        {
            return Token::WxLeftpaneShortcutAppIconGold;
        }
        if ("wx-leftpane-shortcut-app-icon-olive" == s)
        {
            return Token::WxLeftpaneShortcutAppIconOlive;
        }
        if ("wx-leftpane-shortcut-app-icon-lime" == s)
        {
            return Token::WxLeftpaneShortcutAppIconLime;
        }
        if ("wx-leftpane-shortcut-app-icon-mint" == s)
        {
            return Token::WxLeftpaneShortcutAppIconMint;
        }
        if ("wx-leftpane-shortcut-app-icon-cyan" == s)
        {
            return Token::WxLeftpaneShortcutAppIconCyan;
        }
        if ("wx-leftpane-shortcut-app-icon-cobalt" == s)
        {
            return Token::WxLeftpaneShortcutAppIconCobalt;
        }
        if ("wx-leftpane-shortcut-app-icon-slate" == s)
        {
            return Token::WxLeftpaneShortcutAppIconSlate;
        }
        if ("wx-leftpane-shortcut-app-icon-violet" == s)
        {
            return Token::WxLeftpaneShortcutAppIconViolet;
        }
        if ("wx-leftpane-shortcut-app-icon-purple" == s)
        {
            return Token::WxLeftpaneShortcutAppIconPurple;
        }
        if ("wx-leftpane-shortcut-app-icon-pink" == s)
        {
            return Token::WxLeftpaneShortcutAppIconPink;
        }
        if ("wx-textEdit-background" == s)
        {
            return Token::WxTextEditBackground;
        }
        if ("wx-textEdit-text" == s)
        {
            return Token::WxTextEditText;
        }
        if ("wx-slider-full" == s)
        {
            return Token::WxSliderFull;
        }
        if ("wx-slider-empty" == s)
        {
            return Token::WxSliderEmpty;
        }
        if ("wx-slider-handle" == s)
        {
            return Token::WxSliderHandle;
        }
        if ("wx-recording-thumbnail-background" == s)
        {
            return Token::WxRecordingThumbnailBackground;
        }
        if ("wx-recording-thumbnail-border" == s)
        {
            return Token::WxRecordingThumbnailBorder;
        }
        if ("wx-recording-controls-background" == s)
        {
            return Token::WxRecordingControlsBackground;
        }
        if ("wx-recording-video-background" == s)
        {
            return Token::WxRecordingVideoBackground;
        }
        if ("wx-topBarMainMinMaxButton-background" == s)
        {
            return Token::WxTopBarMainMinMaxButtonBackground;
        }
        if ("wx-unread-pill-button-checked-color" == s)
        {
            return Token::WxUnreadPillButtonCheckedColor;
        }
        if ("wx-listItemText-primary" == s)
        {
            return Token::WxListItemTextPrimary;
        }
        if ("wx-listItemText-secondary" == s)
        {
            return Token::WxListItemTextSecondary;
        }
        if ("wx-space-header-button-text" == s)
        {
            return Token::WxSpaceHeaderButtonText;
        }
        if ("wx-defaultBorderForButton" == s)
        {
            return Token::WxDefaultBorderForButton;
        }
        if ("wx-appextension-listItem-border" == s)
        {
            return Token::WxAppextensionListItemBorder;
        }
        if ("wx-popup-widget-border" == s)
        {
            return Token::WxPopupWidgetBorder;
        }
        if ("wx-appextension-clear-icon" == s)
        {
            return Token::WxAppextensionClearIcon;
        }
        if ("wx-sendMessage-icon" == s)
        {
            return Token::WxSendMessageIcon;
        }
        if ("wx-inverted-button-text" == s)
        {
            return Token::WxInvertedButtonText;
        }
        if ("wx-meetingsInnerButton-color" == s)
        {
            return Token::WxMeetingsInnerButtonColor;
        }
        if ("wx-subheader-text" == s)
        {
            return Token::WxSubheaderText;
        }
        if ("wx-closeCreateSpaceButon" == s)
        {
            return Token::WxCloseCreateSpaceButon;
        }
        if ("wx-appextension-default-website-icon" == s)
        {
            return Token::WxAppextensionDefaultWebsiteIcon;
        }
        if ("wx-tabSelectorView-text" == s)
        {
            return Token::WxTabSelectorViewText;
        }
        if ("wx-teamNameLabel-text" == s)
        {
            return Token::WxTeamNameLabelText;
        }
        if ("wx-appextension-info-dialog-added-by" == s)
        {
            return Token::WxAppextensionInfoDialogAddedBy;
        }
        if ("wx-recordingContainer-border" == s)
        {
            return Token::WxRecordingContainerBorder;
        }
        if ("wx-addNewTeam-background" == s)
        {
            return Token::WxAddNewTeamBackground;
        }
        if ("wx-addNewTeam-text" == s)
        {
            return Token::WxAddNewTeamText;
        }
        if ("wx-unreadMessageIndicator" == s)
        {
            return Token::WxUnreadMessageIndicator;
        }
        if ("wx-meetingSpaceName" == s)
        {
            return Token::WxMeetingSpaceName;
        }
        if ("wx-meetingInProgress" == s)
        {
            return Token::WxMeetingInProgress;
        }
        if ("wx-alertText-error-meeting-conflict" == s)
        {
            return Token::WxAlertTextErrorMeetingConflict;
        }
        if ("wx-text-primary-meeting-info" == s)
        {
            return Token::WxTextPrimaryMeetingInfo;
        }
        if ("wx-checkMark" == s)
        {
            return Token::WxCheckMark;
        }
        if ("wx-deviceConnection-border" == s)
        {
            return Token::WxDeviceConnectionBorder;
        }
        if ("wx-device-volume-control-border" == s)
        {
            return Token::WxDeviceVolumeControlBorder;
        }
        if ("ut-legacy-settings-icon" == s)
        {
            return Token::UtLegacySettingsIcon;
        }
        if ("ut-legacy-favorite-icon" == s)
        {
            return Token::UtLegacyFavoriteIcon;
        }
        if ("ut-legacy-expressiveMessage-icon" == s)
        {
            return Token::UtLegacyExpressiveMessageIcon;
        }
        if ("wx-device-disconnect-button" == s)
        {
            return Token::WxDeviceDisconnectButton;
        }
        if ("wx-notification-border-shadow" == s)
        {
            return Token::WxNotificationBorderShadow;
        }
        if ("wx-halo-effect-solid-wave-start" == s)
        {
            return Token::WxHaloEffectSolidWaveStart;
        }
        if ("wx-halo-effect-solid-wave-end" == s)
        {
            return Token::WxHaloEffectSolidWaveEnd;
        }
        if ("wx-halo-effect-outside-wave-start" == s)
        {
            return Token::WxHaloEffectOutsideWaveStart;
        }
        if ("wx-halo-effect-outside-wave-end" == s)
        {
            return Token::WxHaloEffectOutsideWaveEnd;
        }
        if ("button-secondary-background" == s)
        {
            return Token::ButtonSecondaryBackground;
        }
        if ("button-secondary-border" == s)
        {
            return Token::ButtonSecondaryBorder;
        }
        if ("button-ghost-background" == s)
        {
            return Token::ButtonGhostBackground;
        }
        if ("button-secondary-text" == s)
        {
            return Token::ButtonSecondaryText;
        }
        if ("button-ghost-border" == s)
        {
            return Token::ButtonGhostBorder;
        }
        if ("modal-primary-background" == s)
        {
            return Token::ModalPrimaryBackground;
        }
        if ("modal-primary-border" == s)
        {
            return Token::ModalPrimaryBorder;
        }
        if ("modal-secondary-background" == s)
        {
            return Token::ModalSecondaryBackground;
        }
        if ("modal-secondary-border" == s)
        {
            return Token::ModalSecondaryBorder;
        }
        if ("separator-secondary" == s)
        {
            return Token::SeparatorSecondary;
        }
        if ("listitem-background" == s)
        {
            return Token::ListitemBackground;
        }
        if ("listitem-tick" == s)
        {
            return Token::ListitemTick;
        }
        if ("checkbox-checked-border" == s)
        {
            return Token::CheckboxCheckedBorder;
        }
        if ("sharewindow-preview-active" == s)
        {
            return Token::SharewindowPreviewActive;
        }
        if ("sharewindow-preview-inactive" == s)
        {
            return Token::SharewindowPreviewInactive;
        }
        if ("sharewindow-border-selected" == s)
        {
            return Token::SharewindowBorderSelected;
        }
        if ("sharewindow-border-active" == s)
        {
            return Token::SharewindowBorderActive;
        }
        if ("sharewindow-border-inactive" == s)
        {
            return Token::SharewindowBorderInactive;
        }
        if ("wx-remote-share-background" == s)
        {
            return Token::WxRemoteShareBackground;
        }
        if ("tab-active-background" == s)
        {
            return Token::TabActiveBackground;
        }
        if ("tab-active-text" == s)
        {
            return Token::TabActiveText;
        }
        if ("tab-inactive-background" == s)
        {
            return Token::TabInactiveBackground;
        }
        if ("tab-inactive-text" == s)
        {
            return Token::TabInactiveText;
        }
        if ("listitem-textprimary" == s)
        {
            return Token::ListitemTextprimary;
        }
        if ("listitem-textsecondary" == s)
        {
            return Token::ListitemTextsecondary;
        }
        if ("button-secondary-active-background" == s)
        {
            return Token::ButtonSecondaryActiveBackground;
        }
        if ("button-secondary-active-text" == s)
        {
            return Token::ButtonSecondaryActiveText;
        }
        if ("button-secondary-active-border" == s)
        {
            return Token::ButtonSecondaryActiveBorder;
        }
        if ("button-inverted-background" == s)
        {
            return Token::ButtonInvertedBackground;
        }
        if ("button-inverted-text" == s)
        {
            return Token::ButtonInvertedText;
        }
        if ("button-inverted-border" == s)
        {
            return Token::ButtonInvertedBorder;
        }
        if ("banner-warning-background" == s)
        {
            return Token::BannerWarningBackground;
        }
        if ("banner-warning-text" == s)
        {
            return Token::BannerWarningText;
        }
        if ("banner-issue-background" == s)
        {
            return Token::BannerIssueBackground;
        }
        if ("label-warning-text" == s)
        {
            return Token::LabelWarningText;
        }
        if ("wx-sharewindow-dragger" == s)
        {
            return Token::WxSharewindowDragger;
        }
        if ("sharewindow-control-text-primary" == s)
        {
            return Token::SharewindowControlTextPrimary;
        }
        if ("sharewindow-control-button-primary-background" == s)
        {
            return Token::SharewindowControlButtonPrimaryBackground;
        }
        if ("sharewindow-control-button-primary-text" == s)
        {
            return Token::SharewindowControlButtonPrimaryText;
        }
        if ("sharewindow-control-button-secondary-background" == s)
        {
            return Token::SharewindowControlButtonSecondaryBackground;
        }
        if ("sharewindow-control-button-secondary-border" == s)
        {
            return Token::SharewindowControlButtonSecondaryBorder;
        }
        if ("sharewindow-control-button-secondary-text" == s)
        {
            return Token::SharewindowControlButtonSecondaryText;
        }
        if ("sharewindow-control-button-active-background" == s)
        {
            return Token::SharewindowControlButtonActiveBackground;
        }
        if ("sharewindow-control-button-active-border" == s)
        {
            return Token::SharewindowControlButtonActiveBorder;
        }
        if ("sharewindow-control-button-active-text" == s)
        {
            return Token::SharewindowControlButtonActiveText;
        }
        if ("theme-gradient-secondary-0-background" == s)
        {
            return Token::ThemeGradientSecondary0Background;
        }
        if ("theme-gradient-secondary-1-background" == s)
        {
            return Token::ThemeGradientSecondary1Background;
        }
        if ("wx-currentCallingStatus-background" == s)
        {
            return Token::WxCurrentCallingStatusBackground;
        }
        if ("listitem-textprimary-normal" == s)
        {
            return Token::ListitemTextprimaryNormal;
        }
        if ("alertbadge-announcement-background" == s)
        {
            return Token::AlertbadgeAnnouncementBackground;
        }
        if ("alertbadge-announcement-text" == s)
        {
            return Token::AlertbadgeAnnouncementText;
        }
        if ("listitem-textmissed" == s)
        {
            return Token::ListitemTextmissed;
        }
        if ("wx-checked-qradiobutton-border" == s)
        {
            return Token::WxCheckedQradiobuttonBorder;
        }
        if ("wx-unchecked-qradiobutton-border" == s)
        {
            return Token::WxUncheckedQradiobuttonBorder;
        }
        if ("wx-checked-qradiobutton-backgroud" == s)
        {
            return Token::WxCheckedQradiobuttonBackgroud;
        }
        if ("sharewindow-viewwindow-active" == s)
        {
            return Token::SharewindowViewwindowActive;
        }
        if ("sharewindow-viewwindow-hovered" == s)
        {
            return Token::SharewindowViewwindowHovered;
        }
        if ("sharewindow-viewwindow-selected" == s)
        {
            return Token::SharewindowViewwindowSelected;
        }
        if ("badge-tab-active-dark-background-legacy" == s)
        {
            return Token::BadgeTabActiveDarkBackgroundLegacy;
        }
        if ("badge-tab-active-light-background-legacy" == s)
        {
            return Token::BadgeTabActiveLightBackgroundLegacy;
        }
        if ("badge-tab-inactive-dark-background-legacy" == s)
        {
            return Token::BadgeTabInactiveDarkBackgroundLegacy;
        }
        if ("badge-tab-inactive-light-background-legacy" == s)
        {
            return Token::BadgeTabInactiveLightBackgroundLegacy;
        }
        if ("badge-tab-inactive-text-dark-background-legacy" == s)
        {
            return Token::BadgeTabInactiveTextDarkBackgroundLegacy;
        }
        if ("badge-tab-inactive-text-light-background-legacy" == s)
        {
            return Token::BadgeTabInactiveTextLightBackgroundLegacy;
        }
        if ("badge-tab-active-text-dark-background-legacy" == s)
        {
            return Token::BadgeTabActiveTextDarkBackgroundLegacy;
        }
        if ("badge-tab-active-text-light-background-legacy" == s)
        {
            return Token::BadgeTabActiveTextLightBackgroundLegacy;
        }
        if ("connect-dialog-background" == s)
        {
            return Token::ConnectDialogBackground;
        }
        if ("avatar-presence-icon-active" == s)
        {
            return Token::AvatarPresenceIconActive;
        }
        if ("avatar-presence-icon-meeting" == s)
        {
            return Token::AvatarPresenceIconMeeting;
        }
        if ("avatar-presence-icon-schedule" == s)
        {
            return Token::AvatarPresenceIconSchedule;
        }
        if ("avatar-presence-icon-dnd" == s)
        {
            return Token::AvatarPresenceIconDnd;
        }
        if ("avatar-presence-icon-presenting" == s)
        {
            return Token::AvatarPresenceIconPresenting;
        }
        if ("avatar-presence-icon-quiet-hours" == s)
        {
            return Token::AvatarPresenceIconQuietHours;
        }
        if ("avatar-presence-icon-away" == s)
        {
            return Token::AvatarPresenceIconAway;
        }
        if ("avatar-presence-icon-ooo" == s)
        {
            return Token::AvatarPresenceIconOoo;
        }
        if ("avatar-presence-icon-background" == s)
        {
            return Token::AvatarPresenceIconBackground;
        }
        if ("avatar-color-avatar-text" == s)
        {
            return Token::AvatarColorAvatarText;
        }
        if ("avatar-color-avatar-background-default" == s)
        {
            return Token::AvatarColorAvatarBackgroundDefault;
        }
        if ("avatar-color-avatar-background-gold" == s)
        {
            return Token::AvatarColorAvatarBackgroundGold;
        }
        if ("avatar-color-avatar-background-orange" == s)
        {
            return Token::AvatarColorAvatarBackgroundOrange;
        }
        if ("avatar-color-avatar-background-lime" == s)
        {
            return Token::AvatarColorAvatarBackgroundLime;
        }
        if ("avatar-color-avatar-background-mint" == s)
        {
            return Token::AvatarColorAvatarBackgroundMint;
        }
        if ("avatar-color-avatar-background-cyan" == s)
        {
            return Token::AvatarColorAvatarBackgroundCyan;
        }
        if ("avatar-color-avatar-background-cobalt" == s)
        {
            return Token::AvatarColorAvatarBackgroundCobalt;
        }
        if ("avatar-color-avatar-background-slate" == s)
        {
            return Token::AvatarColorAvatarBackgroundSlate;
        }
        if ("avatar-color-avatar-background-violet" == s)
        {
            return Token::AvatarColorAvatarBackgroundViolet;
        }
        if ("avatar-color-avatar-background-purple" == s)
        {
            return Token::AvatarColorAvatarBackgroundPurple;
        }
        if ("avatar-color-avatar-background-pink" == s)
        {
            return Token::AvatarColorAvatarBackgroundPink;
        }
        if ("avatar-chat-bubble-icon-normal" == s)
        {
            return Token::AvatarChatBubbleIconNormal;
        }
        if ("avatar-chat-bubble-icon-hover" == s)
        {
            return Token::AvatarChatBubbleIconHover;
        }
        if ("avatar-chat-bubble-icon-pressed" == s)
        {
            return Token::AvatarChatBubbleIconPressed;
        }
        if ("avatar-chat-bubble-icon-active" == s)
        {
            return Token::AvatarChatBubbleIconActive;
        }
        if ("avatar-chat-bubble-icon-disabled" == s)
        {
            return Token::AvatarChatBubbleIconDisabled;
        }
        if ("avatar-chat-bubble-border-normal" == s)
        {
            return Token::AvatarChatBubbleBorderNormal;
        }
        if ("badge-background" == s)
        {
            return Token::BadgeBackground;
        }
        if ("badge-text" == s)
        {
            return Token::BadgeText;
        }
        if ("badge-notification-indicator" == s)
        {
            return Token::BadgeNotificationIndicator;
        }
        if ("banner-announcement-text" == s)
        {
            return Token::BannerAnnouncementText;
        }
        if ("banner-announcement-background" == s)
        {
            return Token::BannerAnnouncementBackground;
        }
        if ("banner-success-text" == s)
        {
            return Token::BannerSuccessText;
        }
        if ("banner-success-background" == s)
        {
            return Token::BannerSuccessBackground;
        }
        if ("banner-error-text" == s)
        {
            return Token::BannerErrorText;
        }
        if ("banner-error-background" == s)
        {
            return Token::BannerErrorBackground;
        }
        if ("banner-issue-text" == s)
        {
            return Token::BannerIssueText;
        }
        if ("banner-transient-text" == s)
        {
            return Token::BannerTransientText;
        }
        if ("banner-transient-background" == s)
        {
            return Token::BannerTransientBackground;
        }
        if ("button-primary-background" == s)
        {
            return Token::ButtonPrimaryBackground;
        }
        if ("button-primary-text" == s)
        {
            return Token::ButtonPrimaryText;
        }
        if ("button-primary-border" == s)
        {
            return Token::ButtonPrimaryBorder;
        }
        if ("button-cancel-ghost-background" == s)
        {
            return Token::ButtonCancelGhostBackground;
        }
        if ("button-cancel-ghost-text" == s)
        {
            return Token::ButtonCancelGhostText;
        }
        if ("button-cancel-fill-background" == s)
        {
            return Token::ButtonCancelFillBackground;
        }
        if ("button-cancel-fill-text" == s)
        {
            return Token::ButtonCancelFillText;
        }
        if ("button-cancel-fill-border" == s)
        {
            return Token::ButtonCancelFillBorder;
        }
        if ("button-cancel-outline-background" == s)
        {
            return Token::ButtonCancelOutlineBackground;
        }
        if ("button-cancel-outline-text" == s)
        {
            return Token::ButtonCancelOutlineText;
        }
        if ("button-cancel-outline-border" == s)
        {
            return Token::ButtonCancelOutlineBorder;
        }
        if ("button-accent-ghost-background" == s)
        {
            return Token::ButtonAccentGhostBackground;
        }
        if ("button-accent-ghost-text" == s)
        {
            return Token::ButtonAccentGhostText;
        }
        if ("button-accent-fill-background" == s)
        {
            return Token::ButtonAccentFillBackground;
        }
        if ("button-accent-fill-text" == s)
        {
            return Token::ButtonAccentFillText;
        }
        if ("button-accent-fill-border" == s)
        {
            return Token::ButtonAccentFillBorder;
        }
        if ("button-message-ghost-background" == s)
        {
            return Token::ButtonMessageGhostBackground;
        }
        if ("button-message-ghost-text" == s)
        {
            return Token::ButtonMessageGhostText;
        }
        if ("button-message-fill-background" == s)
        {
            return Token::ButtonMessageFillBackground;
        }
        if ("button-message-fill-text" == s)
        {
            return Token::ButtonMessageFillText;
        }
        if ("button-message-fill-border" == s)
        {
            return Token::ButtonMessageFillBorder;
        }
        if ("button-join-fill-background" == s)
        {
            return Token::ButtonJoinFillBackground;
        }
        if ("button-join-fill-text" == s)
        {
            return Token::ButtonJoinFillText;
        }
        if ("button-join-fill-border" == s)
        {
            return Token::ButtonJoinFillBorder;
        }
        if ("button-join-outline-background" == s)
        {
            return Token::ButtonJoinOutlineBackground;
        }
        if ("button-join-outline-text" == s)
        {
            return Token::ButtonJoinOutlineText;
        }
        if ("button-join-outline-border" == s)
        {
            return Token::ButtonJoinOutlineBorder;
        }
        if ("button-counter-background" == s)
        {
            return Token::ButtonCounterBackground;
        }
        if ("button-counter-text" == s)
        {
            return Token::ButtonCounterText;
        }
        if ("button-counter-border" == s)
        {
            return Token::ButtonCounterBorder;
        }
        if ("button-dialpad-background" == s)
        {
            return Token::ButtonDialpadBackground;
        }
        if ("button-dialpad-text-number" == s)
        {
            return Token::ButtonDialpadTextNumber;
        }
        if ("button-dialpad-text-characters" == s)
        {
            return Token::ButtonDialpadTextCharacters;
        }
        if ("button-dialpad-border" == s)
        {
            return Token::ButtonDialpadBorder;
        }
        if ("button-dialpad-special-background" == s)
        {
            return Token::ButtonDialpadSpecialBackground;
        }
        if ("button-dialpad-special-text-number" == s)
        {
            return Token::ButtonDialpadSpecialTextNumber;
        }
        if ("button-dialpad-special-text-characters" == s)
        {
            return Token::ButtonDialpadSpecialTextCharacters;
        }
        if ("button-hyperlink-background" == s)
        {
            return Token::ButtonHyperlinkBackground;
        }
        if ("button-hyperlink-text" == s)
        {
            return Token::ButtonHyperlinkText;
        }
        if ("button-hyperlink-border" == s)
        {
            return Token::ButtonHyperlinkBorder;
        }
        if ("button-layout-background" == s)
        {
            return Token::ButtonLayoutBackground;
        }
        if ("button-layout-text" == s)
        {
            return Token::ButtonLayoutText;
        }
        if ("button-layout-border" == s)
        {
            return Token::ButtonLayoutBorder;
        }
        if ("button-overlay-background" == s)
        {
            return Token::ButtonOverlayBackground;
        }
        if ("button-overlay-text" == s)
        {
            return Token::ButtonOverlayText;
        }
        if ("button-overlay-border" == s)
        {
            return Token::ButtonOverlayBorder;
        }
        if ("button-group-separator-background" == s)
        {
            return Token::ButtonGroupSeparatorBackground;
        }
        if ("button-ghost-text" == s)
        {
            return Token::ButtonGhostText;
        }
        if ("coachmarkteaching-background" == s)
        {
            return Token::CoachmarkteachingBackground;
        }
        if ("coachmarkteaching-button-primary-background" == s)
        {
            return Token::CoachmarkteachingButtonPrimaryBackground;
        }
        if ("coachmarkteaching-button-primary-text" == s)
        {
            return Token::CoachmarkteachingButtonPrimaryText;
        }
        if ("coachmarkteaching-button-primary-border" == s)
        {
            return Token::CoachmarkteachingButtonPrimaryBorder;
        }
        if ("coachmarkteaching-button-secondary-background" == s)
        {
            return Token::CoachmarkteachingButtonSecondaryBackground;
        }
        if ("coachmarkteaching-button-secondary-text" == s)
        {
            return Token::CoachmarkteachingButtonSecondaryText;
        }
        if ("coachmarkteaching-button-secondary-border" == s)
        {
            return Token::CoachmarkteachingButtonSecondaryBorder;
        }
        if ("coachmarkteaching-button-hyperlink-background" == s)
        {
            return Token::CoachmarkteachingButtonHyperlinkBackground;
        }
        if ("coachmarkteaching-button-hyperlink-text" == s)
        {
            return Token::CoachmarkteachingButtonHyperlinkText;
        }
        if ("coachmarkteaching-button-hyperlink-border" == s)
        {
            return Token::CoachmarkteachingButtonHyperlinkBorder;
        }
        if ("codeinput-background" == s)
        {
            return Token::CodeinputBackground;
        }
        if ("codeinput-text" == s)
        {
            return Token::CodeinputText;
        }
        if ("codeinput-border" == s)
        {
            return Token::CodeinputBorder;
        }
        if ("codeinput-error-background" == s)
        {
            return Token::CodeinputErrorBackground;
        }
        if ("codeinput-error-text" == s)
        {
            return Token::CodeinputErrorText;
        }
        if ("codeinput-error-border" == s)
        {
            return Token::CodeinputErrorBorder;
        }
        if ("label-primary-text" == s)
        {
            return Token::LabelPrimaryText;
        }
        if ("label-secondary-text" == s)
        {
            return Token::LabelSecondaryText;
        }
        if ("label-success-text" == s)
        {
            return Token::LabelSuccessText;
        }
        if ("label-error-text" == s)
        {
            return Token::LabelErrorText;
        }
        if ("listitem-icon" == s)
        {
            return Token::ListitemIcon;
        }
        if ("listitem-dotdivider" == s)
        {
            return Token::ListitemDotdivider;
        }
        if ("popover-primary-background" == s)
        {
            return Token::PopoverPrimaryBackground;
        }
        if ("reaction-badge-primary-background" == s)
        {
            return Token::ReactionBadgePrimaryBackground;
        }
        if ("reaction-badge-primary-unreacted-text" == s)
        {
            return Token::ReactionBadgePrimaryUnreactedText;
        }
        if ("reaction-badge-primary-reacted-text" == s)
        {
            return Token::ReactionBadgePrimaryReactedText;
        }
        if ("reaction-badge-primary-border" == s)
        {
            return Token::ReactionBadgePrimaryBorder;
        }
        if ("search-placeholder-text" == s)
        {
            return Token::SearchPlaceholderText;
        }
        if ("search-text" == s)
        {
            return Token::SearchText;
        }
        if ("search-border" == s)
        {
            return Token::SearchBorder;
        }
        if ("search-background" == s)
        {
            return Token::SearchBackground;
        }
        if ("separator-primary" == s)
        {
            return Token::SeparatorPrimary;
        }
        if ("separator-clear" == s)
        {
            return Token::SeparatorClear;
        }
        if ("separator-announce-0" == s)
        {
            return Token::SeparatorAnnounce0;
        }
        if ("separator-announce-1" == s)
        {
            return Token::SeparatorAnnounce1;
        }
        if ("separator-warn-0" == s)
        {
            return Token::SeparatorWarn0;
        }
        if ("separator-warn-1" == s)
        {
            return Token::SeparatorWarn1;
        }
        if ("separator-error-0" == s)
        {
            return Token::SeparatorError0;
        }
        if ("separator-error-1" == s)
        {
            return Token::SeparatorError1;
        }
        if ("spinner-loading-cursor" == s)
        {
            return Token::SpinnerLoadingCursor;
        }
        if ("spinner-loading-track" == s)
        {
            return Token::SpinnerLoadingTrack;
        }
        if ("spinner-progress-cursor" == s)
        {
            return Token::SpinnerProgressCursor;
        }
        if ("spinner-progress-track" == s)
        {
            return Token::SpinnerProgressTrack;
        }
        if ("tab-refresh" == s)
        {
            return Token::TabRefresh;
        }
        if ("tab-orange" == s)
        {
            return Token::TabOrange;
        }
        if ("tab-gold" == s)
        {
            return Token::TabGold;
        }
        if ("tab-lime" == s)
        {
            return Token::TabLime;
        }
        if ("tab-mint" == s)
        {
            return Token::TabMint;
        }
        if ("tab-cyan" == s)
        {
            return Token::TabCyan;
        }
        if ("tab-pink" == s)
        {
            return Token::TabPink;
        }
        if ("tab-slate" == s)
        {
            return Token::TabSlate;
        }
        if ("tab-violet" == s)
        {
            return Token::TabViolet;
        }
        if ("tab-cobalt" == s)
        {
            return Token::TabCobalt;
        }
        if ("tab-purple" == s)
        {
            return Token::TabPurple;
        }
        if ("teamMarker-background-default" == s)
        {
            return Token::TeamMarkerBackgroundDefault;
        }
        if ("teamMarker-background-gold" == s)
        {
            return Token::TeamMarkerBackgroundGold;
        }
        if ("teamMarker-background-orange" == s)
        {
            return Token::TeamMarkerBackgroundOrange;
        }
        if ("teamMarker-background-lime" == s)
        {
            return Token::TeamMarkerBackgroundLime;
        }
        if ("teamMarker-background-mint" == s)
        {
            return Token::TeamMarkerBackgroundMint;
        }
        if ("teamMarker-background-cyan" == s)
        {
            return Token::TeamMarkerBackgroundCyan;
        }
        if ("teamMarker-background-cobalt" == s)
        {
            return Token::TeamMarkerBackgroundCobalt;
        }
        if ("teamMarker-background-slate" == s)
        {
            return Token::TeamMarkerBackgroundSlate;
        }
        if ("teamMarker-background-violet" == s)
        {
            return Token::TeamMarkerBackgroundViolet;
        }
        if ("teamMarker-background-purple" == s)
        {
            return Token::TeamMarkerBackgroundPurple;
        }
        if ("teamMarker-background-pink" == s)
        {
            return Token::TeamMarkerBackgroundPink;
        }
        if ("teamMarker-background-archived" == s)
        {
            return Token::TeamMarkerBackgroundArchived;
        }
        if ("textinput-placeholder-text" == s)
        {
            return Token::TextinputPlaceholderText;
        }
        if ("textinput-background" == s)
        {
            return Token::TextinputBackground;
        }
        if ("textinput-text" == s)
        {
            return Token::TextinputText;
        }
        if ("textinput-border" == s)
        {
            return Token::TextinputBorder;
        }
        if ("textinput-error-background" == s)
        {
            return Token::TextinputErrorBackground;
        }
        if ("textinput-error-text" == s)
        {
            return Token::TextinputErrorText;
        }
        if ("textinput-error-border" == s)
        {
            return Token::TextinputErrorBorder;
        }
        if ("alertbadge-default-background" == s)
        {
            return Token::AlertbadgeDefaultBackground;
        }
        if ("alertbadge-default-text" == s)
        {
            return Token::AlertbadgeDefaultText;
        }
        if ("alertbadge-warning-background" == s)
        {
            return Token::AlertbadgeWarningBackground;
        }
        if ("alertbadge-warning-text" == s)
        {
            return Token::AlertbadgeWarningText;
        }
        if ("alertbadge-important-background" == s)
        {
            return Token::AlertbadgeImportantBackground;
        }
        if ("alertbadge-important-text" == s)
        {
            return Token::AlertbadgeImportantText;
        }
        if ("alertbadge-general-background" == s)
        {
            return Token::AlertbadgeGeneralBackground;
        }
        if ("alertbadge-general-text" == s)
        {
            return Token::AlertbadgeGeneralText;
        }
        if ("cancelicon-default-icon" == s)
        {
            return Token::CanceliconDefaultIcon;
        }
        if ("card-active-background" == s)
        {
            return Token::CardActiveBackground;
        }
        if ("card-inactive-background" == s)
        {
            return Token::CardInactiveBackground;
        }
        if ("card-cancelled-background" == s)
        {
            return Token::CardCancelledBackground;
        }
        if ("card-disabled-border" == s)
        {
            return Token::CardDisabledBorder;
        }
        if ("checkbox-checked-text" == s)
        {
            return Token::CheckboxCheckedText;
        }
        if ("checkbox-checked-icon" == s)
        {
            return Token::CheckboxCheckedIcon;
        }
        if ("checkbox-unchecked-background" == s)
        {
            return Token::CheckboxUncheckedBackground;
        }
        if ("checkbox-unchecked-text" == s)
        {
            return Token::CheckboxUncheckedText;
        }
        if ("checkbox-unchecked-border" == s)
        {
            return Token::CheckboxUncheckedBorder;
        }
        if ("combobox-placeholder-text" == s)
        {
            return Token::ComboboxPlaceholderText;
        }
        if ("combobox-background" == s)
        {
            return Token::ComboboxBackground;
        }
        if ("combobox-text" == s)
        {
            return Token::ComboboxText;
        }
        if ("combobox-border" == s)
        {
            return Token::ComboboxBorder;
        }
        if ("globalHeader-textfield-background" == s)
        {
            return Token::GlobalHeaderTextfieldBackground;
        }
        if ("globalHeader-textfield-text" == s)
        {
            return Token::GlobalHeaderTextfieldText;
        }
        if ("globalHeader-textfield-border" == s)
        {
            return Token::GlobalHeaderTextfieldBorder;
        }
        if ("globalHeader-textfield-borderModifier" == s)
        {
            return Token::GlobalHeaderTextfieldBorderModifier;
        }
        if ("globalHeader-textfieldPlaceholderText-text" == s)
        {
            return Token::GlobalHeaderTextfieldPlaceholderTextText;
        }
        if ("globalHeader-buttonDevice-background" == s)
        {
            return Token::GlobalHeaderButtonDeviceBackground;
        }
        if ("globalHeader-buttonDevice-text-inactive" == s)
        {
            return Token::GlobalHeaderButtonDeviceTextInactive;
        }
        if ("globalHeader-buttonDevice-text-active" == s)
        {
            return Token::GlobalHeaderButtonDeviceTextActive;
        }
        if ("globalHeader-buttonIcon-background" == s)
        {
            return Token::GlobalHeaderButtonIconBackground;
        }
        if ("globalHeader-buttonIcon-icon" == s)
        {
            return Token::GlobalHeaderButtonIconIcon;
        }
        if ("globalHeader-buttonStatus-background" == s)
        {
            return Token::GlobalHeaderButtonStatusBackground;
        }
        if ("globalHeader-buttonStatus-text" == s)
        {
            return Token::GlobalHeaderButtonStatusText;
        }
        if ("globalHeader-container-background" == s)
        {
            return Token::GlobalHeaderContainerBackground;
        }
        if ("globalHeader-modifierChip-background" == s)
        {
            return Token::GlobalHeaderModifierChipBackground;
        }
        if ("globalHeader-modifierChip-text" == s)
        {
            return Token::GlobalHeaderModifierChipText;
        }
        if ("globalHeader-textfieldWin-background" == s)
        {
            return Token::GlobalHeaderTextfieldWinBackground;
        }
        if ("globalHeader-maxMinButton-background" == s)
        {
            return Token::GlobalHeaderMaxMinButtonBackground;
        }
        if ("globalHeader-maxMinButton-text" == s)
        {
            return Token::GlobalHeaderMaxMinButtonText;
        }
        if ("globalHeader-closeButton-background" == s)
        {
            return Token::GlobalHeaderCloseButtonBackground;
        }
        if ("globalHeader-closeButton-text" == s)
        {
            return Token::GlobalHeaderCloseButtonText;
        }
        if ("globalHeader-searchCancelButton-background" == s)
        {
            return Token::GlobalHeaderSearchCancelButtonBackground;
        }
        if ("globalHeader-searchCancelButton-border" == s)
        {
            return Token::GlobalHeaderSearchCancelButtonBorder;
        }
        if ("globalHeader-searchCancelButton-text" == s)
        {
            return Token::GlobalHeaderSearchCancelButtonText;
        }
        if ("theme-gradient-primary-0-background" == s)
        {
            return Token::ThemeGradientPrimary0Background;
        }
        if ("theme-gradient-primary-1-background" == s)
        {
            return Token::ThemeGradientPrimary1Background;
        }
        if ("interactiveicon-container-background" == s)
        {
            return Token::InteractiveiconContainerBackground;
        }
        if ("interactiveicon-primary-filled-icon-inactive" == s)
        {
            return Token::InteractiveiconPrimaryFilledIconInactive;
        }
        if ("interactiveicon-primary-filled-icon-active" == s)
        {
            return Token::InteractiveiconPrimaryFilledIconActive;
        }
        if ("interactiveicon-primary-outline-icon-inactive" == s)
        {
            return Token::InteractiveiconPrimaryOutlineIconInactive;
        }
        if ("interactiveicon-primary-outline-icon-active" == s)
        {
            return Token::InteractiveiconPrimaryOutlineIconActive;
        }
        if ("interactiveicon-secondary-filled-icon-inactive" == s)
        {
            return Token::InteractiveiconSecondaryFilledIconInactive;
        }
        if ("interactiveicon-secondary-filled-icon-active" == s)
        {
            return Token::InteractiveiconSecondaryFilledIconActive;
        }
        if ("interactiveicon-tertiary-filled-icon-inactive" == s)
        {
            return Token::InteractiveiconTertiaryFilledIconInactive;
        }
        if ("interactiveicon-tertiary-filled-favorite-icon-active" == s)
        {
            return Token::InteractiveiconTertiaryFilledFavoriteIconActive;
        }
        if ("interactiveicon-quaternary-filled-icon-active" == s)
        {
            return Token::InteractiveiconQuaternaryFilledIconActive;
        }
        if ("meetingmarker-default-background" == s)
        {
            return Token::MeetingmarkerDefaultBackground;
        }
        if ("meetingmarker-active-background" == s)
        {
            return Token::MeetingmarkerActiveBackground;
        }
        if ("meetingmarker-inactive-background" == s)
        {
            return Token::MeetingmarkerInactiveBackground;
        }
        if ("menulistbackground-primary-background" == s)
        {
            return Token::MenulistbackgroundPrimaryBackground;
        }
        if ("menulistbackground-primary-border" == s)
        {
            return Token::MenulistbackgroundPrimaryBorder;
        }
        if ("menulistbackground-secondary-background" == s)
        {
            return Token::MenulistbackgroundSecondaryBackground;
        }
        if ("menulistbackground-secondary-border" == s)
        {
            return Token::MenulistbackgroundSecondaryBorder;
        }
        if ("menulistbackground-tertiary-background" == s)
        {
            return Token::MenulistbackgroundTertiaryBackground;
        }
        if ("menulistbackground-tertiary-border" == s)
        {
            return Token::MenulistbackgroundTertiaryBorder;
        }
        if ("modal-tertiary-background" == s)
        {
            return Token::ModalTertiaryBackground;
        }
        if ("modal-tertiary-border" == s)
        {
            return Token::ModalTertiaryBorder;
        }
        if ("multilineChip-one-text" == s)
        {
            return Token::MultilineChipOneText;
        }
        if ("multilineChip-one-outline" == s)
        {
            return Token::MultilineChipOneOutline;
        }
        if ("multilineChip-two-text" == s)
        {
            return Token::MultilineChipTwoText;
        }
        if ("multilineChip-two-outline" == s)
        {
            return Token::MultilineChipTwoOutline;
        }
        if ("multilineChip-three-text" == s)
        {
            return Token::MultilineChipThreeText;
        }
        if ("multilineChip-three-outline" == s)
        {
            return Token::MultilineChipThreeOutline;
        }
        if ("multilineChip-four-text" == s)
        {
            return Token::MultilineChipFourText;
        }
        if ("multilineChip-four-outline" == s)
        {
            return Token::MultilineChipFourOutline;
        }
        if ("multilineChip-five-text" == s)
        {
            return Token::MultilineChipFiveText;
        }
        if ("multilineChip-five-outline" == s)
        {
            return Token::MultilineChipFiveOutline;
        }
        if ("multilineChip-six-text" == s)
        {
            return Token::MultilineChipSixText;
        }
        if ("multilineChip-six-outline" == s)
        {
            return Token::MultilineChipSixOutline;
        }
        if ("multilineChip-seven-text" == s)
        {
            return Token::MultilineChipSevenText;
        }
        if ("multilineChip-seven-outline" == s)
        {
            return Token::MultilineChipSevenOutline;
        }
        if ("multilineChip-eight-text" == s)
        {
            return Token::MultilineChipEightText;
        }
        if ("multilineChip-eight-outline" == s)
        {
            return Token::MultilineChipEightOutline;
        }
        if ("navigationtab-background" == s)
        {
            return Token::NavigationtabBackground;
        }
        if ("navigationtab-text" == s)
        {
            return Token::NavigationtabText;
        }
        if ("overlayFade-primary-background" == s)
        {
            return Token::OverlayFadePrimaryBackground;
        }
        if ("overlayFade-secondary-background" == s)
        {
            return Token::OverlayFadeSecondaryBackground;
        }
        if ("panel-primary-background" == s)
        {
            return Token::PanelPrimaryBackground;
        }
        if ("panel-secondary-background" == s)
        {
            return Token::PanelSecondaryBackground;
        }
        if ("panel-tertiary-background" == s)
        {
            return Token::PanelTertiaryBackground;
        }
        if ("scrollbar-track-background" == s)
        {
            return Token::ScrollbarTrackBackground;
        }
        if ("scrollbar-thumb-background" == s)
        {
            return Token::ScrollbarThumbBackground;
        }
        if ("scrollbar-arrow-button-text" == s)
        {
            return Token::ScrollbarArrowButtonText;
        }
        if ("scrollbar-arrow-button-background" == s)
        {
            return Token::ScrollbarArrowButtonBackground;
        }
        if ("sharewindow-control-button-primary-border" == s)
        {
            return Token::SharewindowControlButtonPrimaryBorder;
        }
        if ("tag-static-background" == s)
        {
            return Token::TagStaticBackground;
        }
        if ("tag-static-text" == s)
        {
            return Token::TagStaticText;
        }
        if ("tag-static-border" == s)
        {
            return Token::TagStaticBorder;
        }
        if ("tag-overlay-background" == s)
        {
            return Token::TagOverlayBackground;
        }
        if ("tag-overlay-text" == s)
        {
            return Token::TagOverlayText;
        }
        if ("tag-overlay-border" == s)
        {
            return Token::TagOverlayBorder;
        }
        if ("tag-primary-background" == s)
        {
            return Token::TagPrimaryBackground;
        }
        if ("tag-primary-text" == s)
        {
            return Token::TagPrimaryText;
        }
        if ("tag-primary-border" == s)
        {
            return Token::TagPrimaryBorder;
        }
        if ("tag-cobalt-background" == s)
        {
            return Token::TagCobaltBackground;
        }
        if ("tag-cobalt-text" == s)
        {
            return Token::TagCobaltText;
        }
        if ("tag-cobalt-border" == s)
        {
            return Token::TagCobaltBorder;
        }
        if ("tag-lime-background" == s)
        {
            return Token::TagLimeBackground;
        }
        if ("tag-lime-text" == s)
        {
            return Token::TagLimeText;
        }
        if ("tag-lime-border" == s)
        {
            return Token::TagLimeBorder;
        }
        if ("tag-mint-background" == s)
        {
            return Token::TagMintBackground;
        }
        if ("tag-mint-text" == s)
        {
            return Token::TagMintText;
        }
        if ("tag-mint-border" == s)
        {
            return Token::TagMintBorder;
        }
        if ("tag-slate-background" == s)
        {
            return Token::TagSlateBackground;
        }
        if ("tag-slate-text" == s)
        {
            return Token::TagSlateText;
        }
        if ("tag-slate-border" == s)
        {
            return Token::TagSlateBorder;
        }
        if ("tag-violet-background" == s)
        {
            return Token::TagVioletBackground;
        }
        if ("tag-violet-text" == s)
        {
            return Token::TagVioletText;
        }
        if ("tag-violet-border" == s)
        {
            return Token::TagVioletBorder;
        }
        if ("tag-purple-background" == s)
        {
            return Token::TagPurpleBackground;
        }
        if ("tag-purple-text" == s)
        {
            return Token::TagPurpleText;
        }
        if ("tag-purple-border" == s)
        {
            return Token::TagPurpleBorder;
        }
        if ("tag-orange-background" == s)
        {
            return Token::TagOrangeBackground;
        }
        if ("tag-orange-text" == s)
        {
            return Token::TagOrangeText;
        }
        if ("tag-orange-border" == s)
        {
            return Token::TagOrangeBorder;
        }
        if ("tag-gold-background" == s)
        {
            return Token::TagGoldBackground;
        }
        if ("tag-gold-text" == s)
        {
            return Token::TagGoldText;
        }
        if ("tag-gold-border" == s)
        {
            return Token::TagGoldBorder;
        }

        return Token::Unknown;
    }
}

using SVT = SemanticVisuals::Token;